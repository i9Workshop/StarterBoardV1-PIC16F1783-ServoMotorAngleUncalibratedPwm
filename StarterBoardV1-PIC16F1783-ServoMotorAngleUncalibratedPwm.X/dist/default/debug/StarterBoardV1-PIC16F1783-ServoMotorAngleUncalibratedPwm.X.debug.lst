

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Wed Oct 16 08:40:23 2024

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	16F1783
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,space=0,delta=2,noexec
     5                           	psect	stringtext2,global,class=STRCODE,space=0,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,space=0,merge=1,split=1,delta=2
    10                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,space=0,merge=1,delta=2,group=2
    14                           	psect	text5,local,class=CODE,space=0,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,space=0,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,space=0,merge=1,delta=2,group=2
    17                           	psect	text8,local,class=CODE,space=0,merge=1,delta=2,group=1
    18                           	psect	text9,local,class=CODE,space=0,merge=1,delta=2,group=1
    19                           	psect	text10,local,class=CODE,space=0,merge=1,delta=2
    20                           	psect	text11,local,class=CODE,space=0,merge=1,delta=2
    21                           	psect	text12,local,class=CODE,space=0,merge=1,delta=2
    22                           	psect	text13,local,class=CODE,space=0,merge=1,delta=2,group=1
    23                           	psect	text14,local,class=CODE,space=0,merge=1,delta=2
    24                           	psect	text15,local,class=CODE,space=0,merge=1,delta=2
    25                           	psect	text16,local,class=CODE,space=0,merge=1,delta=2
    26                           	psect	text17,local,class=CODE,space=0,merge=1,delta=2
    27                           	psect	text18,local,class=CODE,space=0,merge=1,delta=2
    28                           	psect	text19,local,class=CODE,space=0,merge=1,delta=2
    29                           	psect	text20,local,class=CODE,space=0,merge=1,delta=2
    30                           	psect	text21,local,class=CODE,space=0,merge=1,delta=2
    31                           	psect	text22,local,class=CODE,space=0,merge=1,delta=2
    32                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    33                           	dabs	1,0x7E,2
    34     0000                     
    35                           ; Generated 07/09/2023 GMT
    36                           ; 
    37                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    38                           ; All rights reserved.
    39                           ; 
    40                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    41                           ; 
    42                           ; Redistribution and use in source and binary forms, with or without modification, are
    43                           ; permitted provided that the following conditions are met:
    44                           ; 
    45                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    46                           ;        conditions and the following disclaimer.
    47                           ; 
    48                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    49                           ;        of conditions and the following disclaimer in the documentation and/or other
    50                           ;        materials provided with the distribution. Publication is not required when
    51                           ;        this file is used in an embedded application.
    52                           ; 
    53                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    54                           ;        software without specific prior written permission.
    55                           ; 
    56                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    57                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    58                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    59                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    60                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    61                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    62                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    63                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    64                           ; 
    65                           ; 
    66                           ; Code-generator required, PIC16F1783 Definitions
    67                           ; 
    68                           ; SFR Addresses
    69     0008                     bsr             equ	8
    70     0005                     fsr0h           equ	5
    71     0004                     fsr0l           equ	4
    72     0007                     fsr1h           equ	7
    73     0006                     fsr1l           equ	6
    74     0000                     indf            equ	0
    75     0000                     indf0           equ	0
    76     0001                     indf1           equ	1
    77     000B                     intcon          equ	11
    78     0002                     pc              equ	2
    79     0002                     pcl             equ	2
    80     000A                     pclath          equ	10
    81     0003                     status          equ	3
    82     0009                     wreg            equ	9
    83     0000                     INDF0           equ	0	;# 
    84     0001                     INDF1           equ	1	;# 
    85     0002                     PCL             equ	2	;# 
    86     0003                     STATUS          equ	3	;# 
    87     0004                     FSR0L           equ	4	;# 
    88     0005                     FSR0H           equ	5	;# 
    89     0006                     FSR1L           equ	6	;# 
    90     0007                     FSR1H           equ	7	;# 
    91     0008                     BSR             equ	8	;# 
    92     0009                     WREG            equ	9	;# 
    93     000A                     PCLATH          equ	10	;# 
    94     000B                     INTCON          equ	11	;# 
    95     000C                     PORTA           equ	12	;# 
    96     000D                     PORTB           equ	13	;# 
    97     000E                     PORTC           equ	14	;# 
    98     0010                     PORTE           equ	16	;# 
    99     0011                     PIR1            equ	17	;# 
   100     0012                     PIR2            equ	18	;# 
   101     0014                     PIR4            equ	20	;# 
   102     0015                     TMR0            equ	21	;# 
   103     0016                     TMR1            equ	22	;# 
   104     0016                     TMR1L           equ	22	;# 
   105     0017                     TMR1H           equ	23	;# 
   106     0018                     T1CON           equ	24	;# 
   107     0019                     T1GCON          equ	25	;# 
   108     001A                     TMR2            equ	26	;# 
   109     001B                     PR2             equ	27	;# 
   110     001C                     T2CON           equ	28	;# 
   111     008C                     TRISA           equ	140	;# 
   112     008D                     TRISB           equ	141	;# 
   113     008E                     TRISC           equ	142	;# 
   114     0090                     TRISE           equ	144	;# 
   115     0091                     PIE1            equ	145	;# 
   116     0092                     PIE2            equ	146	;# 
   117     0094                     PIE4            equ	148	;# 
   118     0095                     OPTION_REG      equ	149	;# 
   119     0096                     PCON            equ	150	;# 
   120     0097                     WDTCON          equ	151	;# 
   121     0098                     OSCTUNE         equ	152	;# 
   122     0099                     OSCCON          equ	153	;# 
   123     009A                     OSCSTAT         equ	154	;# 
   124     009B                     ADRES           equ	155	;# 
   125     009B                     ADRESL          equ	155	;# 
   126     009C                     ADRESH          equ	156	;# 
   127     009D                     ADCON0          equ	157	;# 
   128     009E                     ADCON1          equ	158	;# 
   129     009F                     ADCON2          equ	159	;# 
   130     010C                     LATA            equ	268	;# 
   131     010D                     LATB            equ	269	;# 
   132     010E                     LATC            equ	270	;# 
   133     0111                     CM1CON0         equ	273	;# 
   134     0112                     CM1CON1         equ	274	;# 
   135     0113                     CM2CON0         equ	275	;# 
   136     0114                     CM2CON1         equ	276	;# 
   137     0115                     CMOUT           equ	277	;# 
   138     0116                     BORCON          equ	278	;# 
   139     0117                     FVRCON          equ	279	;# 
   140     0118                     DACCON0         equ	280	;# 
   141     0119                     DACCON1         equ	281	;# 
   142     011D                     APFCON          equ	285	;# 
   143     011D                     APFCON0         equ	285	;# 
   144     011E                     CM3CON0         equ	286	;# 
   145     011F                     CM3CON1         equ	287	;# 
   146     018C                     ANSELA          equ	396	;# 
   147     018D                     ANSELB          equ	397	;# 
   148     0191                     EEADR           equ	401	;# 
   149     0191                     EEADRL          equ	401	;# 
   150     0192                     EEADRH          equ	402	;# 
   151     0193                     EEDAT           equ	403	;# 
   152     0193                     EEDATL          equ	403	;# 
   153     0193                     EEDATA          equ	403	;# 
   154     0194                     EEDATH          equ	404	;# 
   155     0195                     EECON1          equ	405	;# 
   156     0196                     EECON2          equ	406	;# 
   157     0197                     VREGCON         equ	407	;# 
   158     0199                     RC1REG          equ	409	;# 
   159     0199                     RCREG           equ	409	;# 
   160     0199                     RCREG1          equ	409	;# 
   161     019A                     TX1REG          equ	410	;# 
   162     019A                     TXREG1          equ	410	;# 
   163     019A                     TXREG           equ	410	;# 
   164     019B                     SP1BRG          equ	411	;# 
   165     019B                     SPBRG           equ	411	;# 
   166     019B                     SP1BRGL         equ	411	;# 
   167     019B                     SPBRG1          equ	411	;# 
   168     019B                     SPBRGL          equ	411	;# 
   169     019C                     SP1BRGH         equ	412	;# 
   170     019C                     SPBRGH          equ	412	;# 
   171     019C                     SPBRGH1         equ	412	;# 
   172     019D                     RC1STA          equ	413	;# 
   173     019D                     RCSTA1          equ	413	;# 
   174     019D                     RCSTA           equ	413	;# 
   175     019E                     TX1STA          equ	414	;# 
   176     019E                     TXSTA1          equ	414	;# 
   177     019E                     TXSTA           equ	414	;# 
   178     019F                     BAUD1CON        equ	415	;# 
   179     019F                     BAUDCON1        equ	415	;# 
   180     019F                     BAUDCTL1        equ	415	;# 
   181     019F                     BAUDCON         equ	415	;# 
   182     019F                     BAUDCTL         equ	415	;# 
   183     020C                     WPUA            equ	524	;# 
   184     020D                     WPUB            equ	525	;# 
   185     020E                     WPUC            equ	526	;# 
   186     0210                     WPUE            equ	528	;# 
   187     0211                     SSPBUF          equ	529	;# 
   188     0211                     SSP1BUF         equ	529	;# 
   189     0212                     SSPADD          equ	530	;# 
   190     0212                     SSP1ADD         equ	530	;# 
   191     0213                     SSPMSK          equ	531	;# 
   192     0213                     SSP1MSK         equ	531	;# 
   193     0214                     SSPSTAT         equ	532	;# 
   194     0214                     SSP1STAT        equ	532	;# 
   195     0215                     SSPCON1         equ	533	;# 
   196     0215                     SSP1CON         equ	533	;# 
   197     0215                     SSPCON          equ	533	;# 
   198     0216                     SSPCON2         equ	534	;# 
   199     0216                     SSP1CON2        equ	534	;# 
   200     0217                     SSPCON3         equ	535	;# 
   201     0217                     SSP1CON3        equ	535	;# 
   202     028C                     ODCONA          equ	652	;# 
   203     028D                     ODCONB          equ	653	;# 
   204     028E                     ODCONC          equ	654	;# 
   205     0291                     CCPR1           equ	657	;# 
   206     0291                     CCPR1L          equ	657	;# 
   207     0292                     CCPR1H          equ	658	;# 
   208     0293                     CCP1CON         equ	659	;# 
   209     0298                     CCPR2           equ	664	;# 
   210     0298                     CCPR2L          equ	664	;# 
   211     0299                     CCPR2H          equ	665	;# 
   212     029A                     CCP2CON         equ	666	;# 
   213     030C                     SLRCONA         equ	780	;# 
   214     030D                     SLRCONB         equ	781	;# 
   215     030E                     SLRCONC         equ	782	;# 
   216     038C                     INLVLA          equ	908	;# 
   217     038D                     INLVLB          equ	909	;# 
   218     038E                     INLVLC          equ	910	;# 
   219     0390                     INLVLE          equ	912	;# 
   220     0391                     IOCAP           equ	913	;# 
   221     0392                     IOCAN           equ	914	;# 
   222     0393                     IOCAF           equ	915	;# 
   223     0394                     IOCBP           equ	916	;# 
   224     0395                     IOCBN           equ	917	;# 
   225     0396                     IOCBF           equ	918	;# 
   226     0397                     IOCCP           equ	919	;# 
   227     0398                     IOCCN           equ	920	;# 
   228     0399                     IOCCF           equ	921	;# 
   229     039D                     IOCEP           equ	925	;# 
   230     039E                     IOCEN           equ	926	;# 
   231     039F                     IOCEF           equ	927	;# 
   232     0511                     OPA1CON         equ	1297	;# 
   233     0513                     OPA2CON         equ	1299	;# 
   234     051A                     CLKRCON         equ	1306	;# 
   235     0811                     PSMC1CON        equ	2065	;# 
   236     0812                     PSMC1MDL        equ	2066	;# 
   237     0813                     PSMC1SYNC       equ	2067	;# 
   238     0814                     PSMC1CLK        equ	2068	;# 
   239     0815                     PSMC1OEN        equ	2069	;# 
   240     0816                     PSMC1POL        equ	2070	;# 
   241     0817                     PSMC1BLNK       equ	2071	;# 
   242     0818                     PSMC1REBS       equ	2072	;# 
   243     0819                     PSMC1FEBS       equ	2073	;# 
   244     081A                     PSMC1PHS        equ	2074	;# 
   245     081B                     PSMC1DCS        equ	2075	;# 
   246     081C                     PSMC1PRS        equ	2076	;# 
   247     081D                     PSMC1ASDC       equ	2077	;# 
   248     081E                     PSMC1ASDL       equ	2078	;# 
   249     081F                     PSMC1ASDS       equ	2079	;# 
   250     0820                     PSMC1INT        equ	2080	;# 
   251     0821                     PSMC1PH         equ	2081	;# 
   252     0821                     PSMC1PHL        equ	2081	;# 
   253     0822                     PSMC1PHH        equ	2082	;# 
   254     0823                     PSMC1DC         equ	2083	;# 
   255     0823                     PSMC1DCL        equ	2083	;# 
   256     0824                     PSMC1DCH        equ	2084	;# 
   257     0825                     PSMC1PR         equ	2085	;# 
   258     0825                     PSMC1PRL        equ	2085	;# 
   259     0826                     PSMC1PRH        equ	2086	;# 
   260     0827                     PSMC1TMR        equ	2087	;# 
   261     0827                     PSMC1TMRL       equ	2087	;# 
   262     0828                     PSMC1TMRH       equ	2088	;# 
   263     0829                     PSMC1DBR        equ	2089	;# 
   264     082A                     PSMC1DBF        equ	2090	;# 
   265     082B                     PSMC1BLKR       equ	2091	;# 
   266     082C                     PSMC1BLKF       equ	2092	;# 
   267     082D                     PSMC1FFA        equ	2093	;# 
   268     082E                     PSMC1STR0       equ	2094	;# 
   269     082F                     PSMC1STR1       equ	2095	;# 
   270     0831                     PSMC2CON        equ	2097	;# 
   271     0832                     PSMC2MDL        equ	2098	;# 
   272     0833                     PSMC2SYNC       equ	2099	;# 
   273     0834                     PSMC2CLK        equ	2100	;# 
   274     0835                     PSMC2OEN        equ	2101	;# 
   275     0836                     PSMC2POL        equ	2102	;# 
   276     0837                     PSMC2BLNK       equ	2103	;# 
   277     0838                     PSMC2REBS       equ	2104	;# 
   278     0839                     PSMC2FEBS       equ	2105	;# 
   279     083A                     PSMC2PHS        equ	2106	;# 
   280     083B                     PSMC2DCS        equ	2107	;# 
   281     083C                     PSMC2PRS        equ	2108	;# 
   282     083D                     PSMC2ASDC       equ	2109	;# 
   283     083E                     PSMC2ASDL       equ	2110	;# 
   284     083F                     PSMC2ASDS       equ	2111	;# 
   285     0840                     PSMC2INT        equ	2112	;# 
   286     0841                     PSMC2PH         equ	2113	;# 
   287     0841                     PSMC2PHL        equ	2113	;# 
   288     0842                     PSMC2PHH        equ	2114	;# 
   289     0843                     PSMC2DC         equ	2115	;# 
   290     0843                     PSMC2DCL        equ	2115	;# 
   291     0844                     PSMC2DCH        equ	2116	;# 
   292     0845                     PSMC2PR         equ	2117	;# 
   293     0845                     PSMC2PRL        equ	2117	;# 
   294     0846                     PSMC2PRH        equ	2118	;# 
   295     0847                     PSMC2TMR        equ	2119	;# 
   296     0847                     PSMC2TMRL       equ	2119	;# 
   297     0848                     PSMC2TMRH       equ	2120	;# 
   298     0849                     PSMC2DBR        equ	2121	;# 
   299     084A                     PSMC2DBF        equ	2122	;# 
   300     084B                     PSMC2BLKR       equ	2123	;# 
   301     084C                     PSMC2BLKF       equ	2124	;# 
   302     084D                     PSMC2FFA        equ	2125	;# 
   303     084E                     PSMC2STR0       equ	2126	;# 
   304     084F                     PSMC2STR1       equ	2127	;# 
   305     0FE4                     STATUS_SHAD     equ	4068	;# 
   306     0FE5                     WREG_SHAD       equ	4069	;# 
   307     0FE6                     BSR_SHAD        equ	4070	;# 
   308     0FE7                     PCLATH_SHAD     equ	4071	;# 
   309     0FE8                     FSR0L_SHAD      equ	4072	;# 
   310     0FE9                     FSR0H_SHAD      equ	4073	;# 
   311     0FEA                     FSR1L_SHAD      equ	4074	;# 
   312     0FEB                     FSR1H_SHAD      equ	4075	;# 
   313     0FED                     STKPTR          equ	4077	;# 
   314     0FEE                     TOSL            equ	4078	;# 
   315     0FEF                     TOSH            equ	4079	;# 
   316     0000                     INDF0           equ	0	;# 
   317     0001                     INDF1           equ	1	;# 
   318     0002                     PCL             equ	2	;# 
   319     0003                     STATUS          equ	3	;# 
   320     0004                     FSR0L           equ	4	;# 
   321     0005                     FSR0H           equ	5	;# 
   322     0006                     FSR1L           equ	6	;# 
   323     0007                     FSR1H           equ	7	;# 
   324     0008                     BSR             equ	8	;# 
   325     0009                     WREG            equ	9	;# 
   326     000A                     PCLATH          equ	10	;# 
   327     000B                     INTCON          equ	11	;# 
   328     000C                     PORTA           equ	12	;# 
   329     000D                     PORTB           equ	13	;# 
   330     000E                     PORTC           equ	14	;# 
   331     0010                     PORTE           equ	16	;# 
   332     0011                     PIR1            equ	17	;# 
   333     0012                     PIR2            equ	18	;# 
   334     0014                     PIR4            equ	20	;# 
   335     0015                     TMR0            equ	21	;# 
   336     0016                     TMR1            equ	22	;# 
   337     0016                     TMR1L           equ	22	;# 
   338     0017                     TMR1H           equ	23	;# 
   339     0018                     T1CON           equ	24	;# 
   340     0019                     T1GCON          equ	25	;# 
   341     001A                     TMR2            equ	26	;# 
   342     001B                     PR2             equ	27	;# 
   343     001C                     T2CON           equ	28	;# 
   344     008C                     TRISA           equ	140	;# 
   345     008D                     TRISB           equ	141	;# 
   346     008E                     TRISC           equ	142	;# 
   347     0090                     TRISE           equ	144	;# 
   348     0091                     PIE1            equ	145	;# 
   349     0092                     PIE2            equ	146	;# 
   350     0094                     PIE4            equ	148	;# 
   351     0095                     OPTION_REG      equ	149	;# 
   352     0096                     PCON            equ	150	;# 
   353     0097                     WDTCON          equ	151	;# 
   354     0098                     OSCTUNE         equ	152	;# 
   355     0099                     OSCCON          equ	153	;# 
   356     009A                     OSCSTAT         equ	154	;# 
   357     009B                     ADRES           equ	155	;# 
   358     009B                     ADRESL          equ	155	;# 
   359     009C                     ADRESH          equ	156	;# 
   360     009D                     ADCON0          equ	157	;# 
   361     009E                     ADCON1          equ	158	;# 
   362     009F                     ADCON2          equ	159	;# 
   363     010C                     LATA            equ	268	;# 
   364     010D                     LATB            equ	269	;# 
   365     010E                     LATC            equ	270	;# 
   366     0111                     CM1CON0         equ	273	;# 
   367     0112                     CM1CON1         equ	274	;# 
   368     0113                     CM2CON0         equ	275	;# 
   369     0114                     CM2CON1         equ	276	;# 
   370     0115                     CMOUT           equ	277	;# 
   371     0116                     BORCON          equ	278	;# 
   372     0117                     FVRCON          equ	279	;# 
   373     0118                     DACCON0         equ	280	;# 
   374     0119                     DACCON1         equ	281	;# 
   375     011D                     APFCON          equ	285	;# 
   376     011D                     APFCON0         equ	285	;# 
   377     011E                     CM3CON0         equ	286	;# 
   378     011F                     CM3CON1         equ	287	;# 
   379     018C                     ANSELA          equ	396	;# 
   380     018D                     ANSELB          equ	397	;# 
   381     0191                     EEADR           equ	401	;# 
   382     0191                     EEADRL          equ	401	;# 
   383     0192                     EEADRH          equ	402	;# 
   384     0193                     EEDAT           equ	403	;# 
   385     0193                     EEDATL          equ	403	;# 
   386     0193                     EEDATA          equ	403	;# 
   387     0194                     EEDATH          equ	404	;# 
   388     0195                     EECON1          equ	405	;# 
   389     0196                     EECON2          equ	406	;# 
   390     0197                     VREGCON         equ	407	;# 
   391     0199                     RC1REG          equ	409	;# 
   392     0199                     RCREG           equ	409	;# 
   393     0199                     RCREG1          equ	409	;# 
   394     019A                     TX1REG          equ	410	;# 
   395     019A                     TXREG1          equ	410	;# 
   396     019A                     TXREG           equ	410	;# 
   397     019B                     SP1BRG          equ	411	;# 
   398     019B                     SPBRG           equ	411	;# 
   399     019B                     SP1BRGL         equ	411	;# 
   400     019B                     SPBRG1          equ	411	;# 
   401     019B                     SPBRGL          equ	411	;# 
   402     019C                     SP1BRGH         equ	412	;# 
   403     019C                     SPBRGH          equ	412	;# 
   404     019C                     SPBRGH1         equ	412	;# 
   405     019D                     RC1STA          equ	413	;# 
   406     019D                     RCSTA1          equ	413	;# 
   407     019D                     RCSTA           equ	413	;# 
   408     019E                     TX1STA          equ	414	;# 
   409     019E                     TXSTA1          equ	414	;# 
   410     019E                     TXSTA           equ	414	;# 
   411     019F                     BAUD1CON        equ	415	;# 
   412     019F                     BAUDCON1        equ	415	;# 
   413     019F                     BAUDCTL1        equ	415	;# 
   414     019F                     BAUDCON         equ	415	;# 
   415     019F                     BAUDCTL         equ	415	;# 
   416     020C                     WPUA            equ	524	;# 
   417     020D                     WPUB            equ	525	;# 
   418     020E                     WPUC            equ	526	;# 
   419     0210                     WPUE            equ	528	;# 
   420     0211                     SSPBUF          equ	529	;# 
   421     0211                     SSP1BUF         equ	529	;# 
   422     0212                     SSPADD          equ	530	;# 
   423     0212                     SSP1ADD         equ	530	;# 
   424     0213                     SSPMSK          equ	531	;# 
   425     0213                     SSP1MSK         equ	531	;# 
   426     0214                     SSPSTAT         equ	532	;# 
   427     0214                     SSP1STAT        equ	532	;# 
   428     0215                     SSPCON1         equ	533	;# 
   429     0215                     SSP1CON         equ	533	;# 
   430     0215                     SSPCON          equ	533	;# 
   431     0216                     SSPCON2         equ	534	;# 
   432     0216                     SSP1CON2        equ	534	;# 
   433     0217                     SSPCON3         equ	535	;# 
   434     0217                     SSP1CON3        equ	535	;# 
   435     028C                     ODCONA          equ	652	;# 
   436     028D                     ODCONB          equ	653	;# 
   437     028E                     ODCONC          equ	654	;# 
   438     0291                     CCPR1           equ	657	;# 
   439     0291                     CCPR1L          equ	657	;# 
   440     0292                     CCPR1H          equ	658	;# 
   441     0293                     CCP1CON         equ	659	;# 
   442     0298                     CCPR2           equ	664	;# 
   443     0298                     CCPR2L          equ	664	;# 
   444     0299                     CCPR2H          equ	665	;# 
   445     029A                     CCP2CON         equ	666	;# 
   446     030C                     SLRCONA         equ	780	;# 
   447     030D                     SLRCONB         equ	781	;# 
   448     030E                     SLRCONC         equ	782	;# 
   449     038C                     INLVLA          equ	908	;# 
   450     038D                     INLVLB          equ	909	;# 
   451     038E                     INLVLC          equ	910	;# 
   452     0390                     INLVLE          equ	912	;# 
   453     0391                     IOCAP           equ	913	;# 
   454     0392                     IOCAN           equ	914	;# 
   455     0393                     IOCAF           equ	915	;# 
   456     0394                     IOCBP           equ	916	;# 
   457     0395                     IOCBN           equ	917	;# 
   458     0396                     IOCBF           equ	918	;# 
   459     0397                     IOCCP           equ	919	;# 
   460     0398                     IOCCN           equ	920	;# 
   461     0399                     IOCCF           equ	921	;# 
   462     039D                     IOCEP           equ	925	;# 
   463     039E                     IOCEN           equ	926	;# 
   464     039F                     IOCEF           equ	927	;# 
   465     0511                     OPA1CON         equ	1297	;# 
   466     0513                     OPA2CON         equ	1299	;# 
   467     051A                     CLKRCON         equ	1306	;# 
   468     0811                     PSMC1CON        equ	2065	;# 
   469     0812                     PSMC1MDL        equ	2066	;# 
   470     0813                     PSMC1SYNC       equ	2067	;# 
   471     0814                     PSMC1CLK        equ	2068	;# 
   472     0815                     PSMC1OEN        equ	2069	;# 
   473     0816                     PSMC1POL        equ	2070	;# 
   474     0817                     PSMC1BLNK       equ	2071	;# 
   475     0818                     PSMC1REBS       equ	2072	;# 
   476     0819                     PSMC1FEBS       equ	2073	;# 
   477     081A                     PSMC1PHS        equ	2074	;# 
   478     081B                     PSMC1DCS        equ	2075	;# 
   479     081C                     PSMC1PRS        equ	2076	;# 
   480     081D                     PSMC1ASDC       equ	2077	;# 
   481     081E                     PSMC1ASDL       equ	2078	;# 
   482     081F                     PSMC1ASDS       equ	2079	;# 
   483     0820                     PSMC1INT        equ	2080	;# 
   484     0821                     PSMC1PH         equ	2081	;# 
   485     0821                     PSMC1PHL        equ	2081	;# 
   486     0822                     PSMC1PHH        equ	2082	;# 
   487     0823                     PSMC1DC         equ	2083	;# 
   488     0823                     PSMC1DCL        equ	2083	;# 
   489     0824                     PSMC1DCH        equ	2084	;# 
   490     0825                     PSMC1PR         equ	2085	;# 
   491     0825                     PSMC1PRL        equ	2085	;# 
   492     0826                     PSMC1PRH        equ	2086	;# 
   493     0827                     PSMC1TMR        equ	2087	;# 
   494     0827                     PSMC1TMRL       equ	2087	;# 
   495     0828                     PSMC1TMRH       equ	2088	;# 
   496     0829                     PSMC1DBR        equ	2089	;# 
   497     082A                     PSMC1DBF        equ	2090	;# 
   498     082B                     PSMC1BLKR       equ	2091	;# 
   499     082C                     PSMC1BLKF       equ	2092	;# 
   500     082D                     PSMC1FFA        equ	2093	;# 
   501     082E                     PSMC1STR0       equ	2094	;# 
   502     082F                     PSMC1STR1       equ	2095	;# 
   503     0831                     PSMC2CON        equ	2097	;# 
   504     0832                     PSMC2MDL        equ	2098	;# 
   505     0833                     PSMC2SYNC       equ	2099	;# 
   506     0834                     PSMC2CLK        equ	2100	;# 
   507     0835                     PSMC2OEN        equ	2101	;# 
   508     0836                     PSMC2POL        equ	2102	;# 
   509     0837                     PSMC2BLNK       equ	2103	;# 
   510     0838                     PSMC2REBS       equ	2104	;# 
   511     0839                     PSMC2FEBS       equ	2105	;# 
   512     083A                     PSMC2PHS        equ	2106	;# 
   513     083B                     PSMC2DCS        equ	2107	;# 
   514     083C                     PSMC2PRS        equ	2108	;# 
   515     083D                     PSMC2ASDC       equ	2109	;# 
   516     083E                     PSMC2ASDL       equ	2110	;# 
   517     083F                     PSMC2ASDS       equ	2111	;# 
   518     0840                     PSMC2INT        equ	2112	;# 
   519     0841                     PSMC2PH         equ	2113	;# 
   520     0841                     PSMC2PHL        equ	2113	;# 
   521     0842                     PSMC2PHH        equ	2114	;# 
   522     0843                     PSMC2DC         equ	2115	;# 
   523     0843                     PSMC2DCL        equ	2115	;# 
   524     0844                     PSMC2DCH        equ	2116	;# 
   525     0845                     PSMC2PR         equ	2117	;# 
   526     0845                     PSMC2PRL        equ	2117	;# 
   527     0846                     PSMC2PRH        equ	2118	;# 
   528     0847                     PSMC2TMR        equ	2119	;# 
   529     0847                     PSMC2TMRL       equ	2119	;# 
   530     0848                     PSMC2TMRH       equ	2120	;# 
   531     0849                     PSMC2DBR        equ	2121	;# 
   532     084A                     PSMC2DBF        equ	2122	;# 
   533     084B                     PSMC2BLKR       equ	2123	;# 
   534     084C                     PSMC2BLKF       equ	2124	;# 
   535     084D                     PSMC2FFA        equ	2125	;# 
   536     084E                     PSMC2STR0       equ	2126	;# 
   537     084F                     PSMC2STR1       equ	2127	;# 
   538     0FE4                     STATUS_SHAD     equ	4068	;# 
   539     0FE5                     WREG_SHAD       equ	4069	;# 
   540     0FE6                     BSR_SHAD        equ	4070	;# 
   541     0FE7                     PCLATH_SHAD     equ	4071	;# 
   542     0FE8                     FSR0L_SHAD      equ	4072	;# 
   543     0FE9                     FSR0H_SHAD      equ	4073	;# 
   544     0FEA                     FSR1L_SHAD      equ	4074	;# 
   545     0FEB                     FSR1H_SHAD      equ	4075	;# 
   546     0FED                     STKPTR          equ	4077	;# 
   547     0FEE                     TOSL            equ	4078	;# 
   548     0FEF                     TOSH            equ	4079	;# 
   549     0000                     INDF0           equ	0	;# 
   550     0001                     INDF1           equ	1	;# 
   551     0002                     PCL             equ	2	;# 
   552     0003                     STATUS          equ	3	;# 
   553     0004                     FSR0L           equ	4	;# 
   554     0005                     FSR0H           equ	5	;# 
   555     0006                     FSR1L           equ	6	;# 
   556     0007                     FSR1H           equ	7	;# 
   557     0008                     BSR             equ	8	;# 
   558     0009                     WREG            equ	9	;# 
   559     000A                     PCLATH          equ	10	;# 
   560     000B                     INTCON          equ	11	;# 
   561     000C                     PORTA           equ	12	;# 
   562     000D                     PORTB           equ	13	;# 
   563     000E                     PORTC           equ	14	;# 
   564     0010                     PORTE           equ	16	;# 
   565     0011                     PIR1            equ	17	;# 
   566     0012                     PIR2            equ	18	;# 
   567     0014                     PIR4            equ	20	;# 
   568     0015                     TMR0            equ	21	;# 
   569     0016                     TMR1            equ	22	;# 
   570     0016                     TMR1L           equ	22	;# 
   571     0017                     TMR1H           equ	23	;# 
   572     0018                     T1CON           equ	24	;# 
   573     0019                     T1GCON          equ	25	;# 
   574     001A                     TMR2            equ	26	;# 
   575     001B                     PR2             equ	27	;# 
   576     001C                     T2CON           equ	28	;# 
   577     008C                     TRISA           equ	140	;# 
   578     008D                     TRISB           equ	141	;# 
   579     008E                     TRISC           equ	142	;# 
   580     0090                     TRISE           equ	144	;# 
   581     0091                     PIE1            equ	145	;# 
   582     0092                     PIE2            equ	146	;# 
   583     0094                     PIE4            equ	148	;# 
   584     0095                     OPTION_REG      equ	149	;# 
   585     0096                     PCON            equ	150	;# 
   586     0097                     WDTCON          equ	151	;# 
   587     0098                     OSCTUNE         equ	152	;# 
   588     0099                     OSCCON          equ	153	;# 
   589     009A                     OSCSTAT         equ	154	;# 
   590     009B                     ADRES           equ	155	;# 
   591     009B                     ADRESL          equ	155	;# 
   592     009C                     ADRESH          equ	156	;# 
   593     009D                     ADCON0          equ	157	;# 
   594     009E                     ADCON1          equ	158	;# 
   595     009F                     ADCON2          equ	159	;# 
   596     010C                     LATA            equ	268	;# 
   597     010D                     LATB            equ	269	;# 
   598     010E                     LATC            equ	270	;# 
   599     0111                     CM1CON0         equ	273	;# 
   600     0112                     CM1CON1         equ	274	;# 
   601     0113                     CM2CON0         equ	275	;# 
   602     0114                     CM2CON1         equ	276	;# 
   603     0115                     CMOUT           equ	277	;# 
   604     0116                     BORCON          equ	278	;# 
   605     0117                     FVRCON          equ	279	;# 
   606     0118                     DACCON0         equ	280	;# 
   607     0119                     DACCON1         equ	281	;# 
   608     011D                     APFCON          equ	285	;# 
   609     011D                     APFCON0         equ	285	;# 
   610     011E                     CM3CON0         equ	286	;# 
   611     011F                     CM3CON1         equ	287	;# 
   612     018C                     ANSELA          equ	396	;# 
   613     018D                     ANSELB          equ	397	;# 
   614     0191                     EEADR           equ	401	;# 
   615     0191                     EEADRL          equ	401	;# 
   616     0192                     EEADRH          equ	402	;# 
   617     0193                     EEDAT           equ	403	;# 
   618     0193                     EEDATL          equ	403	;# 
   619     0193                     EEDATA          equ	403	;# 
   620     0194                     EEDATH          equ	404	;# 
   621     0195                     EECON1          equ	405	;# 
   622     0196                     EECON2          equ	406	;# 
   623     0197                     VREGCON         equ	407	;# 
   624     0199                     RC1REG          equ	409	;# 
   625     0199                     RCREG           equ	409	;# 
   626     0199                     RCREG1          equ	409	;# 
   627     019A                     TX1REG          equ	410	;# 
   628     019A                     TXREG1          equ	410	;# 
   629     019A                     TXREG           equ	410	;# 
   630     019B                     SP1BRG          equ	411	;# 
   631     019B                     SPBRG           equ	411	;# 
   632     019B                     SP1BRGL         equ	411	;# 
   633     019B                     SPBRG1          equ	411	;# 
   634     019B                     SPBRGL          equ	411	;# 
   635     019C                     SP1BRGH         equ	412	;# 
   636     019C                     SPBRGH          equ	412	;# 
   637     019C                     SPBRGH1         equ	412	;# 
   638     019D                     RC1STA          equ	413	;# 
   639     019D                     RCSTA1          equ	413	;# 
   640     019D                     RCSTA           equ	413	;# 
   641     019E                     TX1STA          equ	414	;# 
   642     019E                     TXSTA1          equ	414	;# 
   643     019E                     TXSTA           equ	414	;# 
   644     019F                     BAUD1CON        equ	415	;# 
   645     019F                     BAUDCON1        equ	415	;# 
   646     019F                     BAUDCTL1        equ	415	;# 
   647     019F                     BAUDCON         equ	415	;# 
   648     019F                     BAUDCTL         equ	415	;# 
   649     020C                     WPUA            equ	524	;# 
   650     020D                     WPUB            equ	525	;# 
   651     020E                     WPUC            equ	526	;# 
   652     0210                     WPUE            equ	528	;# 
   653     0211                     SSPBUF          equ	529	;# 
   654     0211                     SSP1BUF         equ	529	;# 
   655     0212                     SSPADD          equ	530	;# 
   656     0212                     SSP1ADD         equ	530	;# 
   657     0213                     SSPMSK          equ	531	;# 
   658     0213                     SSP1MSK         equ	531	;# 
   659     0214                     SSPSTAT         equ	532	;# 
   660     0214                     SSP1STAT        equ	532	;# 
   661     0215                     SSPCON1         equ	533	;# 
   662     0215                     SSP1CON         equ	533	;# 
   663     0215                     SSPCON          equ	533	;# 
   664     0216                     SSPCON2         equ	534	;# 
   665     0216                     SSP1CON2        equ	534	;# 
   666     0217                     SSPCON3         equ	535	;# 
   667     0217                     SSP1CON3        equ	535	;# 
   668     028C                     ODCONA          equ	652	;# 
   669     028D                     ODCONB          equ	653	;# 
   670     028E                     ODCONC          equ	654	;# 
   671     0291                     CCPR1           equ	657	;# 
   672     0291                     CCPR1L          equ	657	;# 
   673     0292                     CCPR1H          equ	658	;# 
   674     0293                     CCP1CON         equ	659	;# 
   675     0298                     CCPR2           equ	664	;# 
   676     0298                     CCPR2L          equ	664	;# 
   677     0299                     CCPR2H          equ	665	;# 
   678     029A                     CCP2CON         equ	666	;# 
   679     030C                     SLRCONA         equ	780	;# 
   680     030D                     SLRCONB         equ	781	;# 
   681     030E                     SLRCONC         equ	782	;# 
   682     038C                     INLVLA          equ	908	;# 
   683     038D                     INLVLB          equ	909	;# 
   684     038E                     INLVLC          equ	910	;# 
   685     0390                     INLVLE          equ	912	;# 
   686     0391                     IOCAP           equ	913	;# 
   687     0392                     IOCAN           equ	914	;# 
   688     0393                     IOCAF           equ	915	;# 
   689     0394                     IOCBP           equ	916	;# 
   690     0395                     IOCBN           equ	917	;# 
   691     0396                     IOCBF           equ	918	;# 
   692     0397                     IOCCP           equ	919	;# 
   693     0398                     IOCCN           equ	920	;# 
   694     0399                     IOCCF           equ	921	;# 
   695     039D                     IOCEP           equ	925	;# 
   696     039E                     IOCEN           equ	926	;# 
   697     039F                     IOCEF           equ	927	;# 
   698     0511                     OPA1CON         equ	1297	;# 
   699     0513                     OPA2CON         equ	1299	;# 
   700     051A                     CLKRCON         equ	1306	;# 
   701     0811                     PSMC1CON        equ	2065	;# 
   702     0812                     PSMC1MDL        equ	2066	;# 
   703     0813                     PSMC1SYNC       equ	2067	;# 
   704     0814                     PSMC1CLK        equ	2068	;# 
   705     0815                     PSMC1OEN        equ	2069	;# 
   706     0816                     PSMC1POL        equ	2070	;# 
   707     0817                     PSMC1BLNK       equ	2071	;# 
   708     0818                     PSMC1REBS       equ	2072	;# 
   709     0819                     PSMC1FEBS       equ	2073	;# 
   710     081A                     PSMC1PHS        equ	2074	;# 
   711     081B                     PSMC1DCS        equ	2075	;# 
   712     081C                     PSMC1PRS        equ	2076	;# 
   713     081D                     PSMC1ASDC       equ	2077	;# 
   714     081E                     PSMC1ASDL       equ	2078	;# 
   715     081F                     PSMC1ASDS       equ	2079	;# 
   716     0820                     PSMC1INT        equ	2080	;# 
   717     0821                     PSMC1PH         equ	2081	;# 
   718     0821                     PSMC1PHL        equ	2081	;# 
   719     0822                     PSMC1PHH        equ	2082	;# 
   720     0823                     PSMC1DC         equ	2083	;# 
   721     0823                     PSMC1DCL        equ	2083	;# 
   722     0824                     PSMC1DCH        equ	2084	;# 
   723     0825                     PSMC1PR         equ	2085	;# 
   724     0825                     PSMC1PRL        equ	2085	;# 
   725     0826                     PSMC1PRH        equ	2086	;# 
   726     0827                     PSMC1TMR        equ	2087	;# 
   727     0827                     PSMC1TMRL       equ	2087	;# 
   728     0828                     PSMC1TMRH       equ	2088	;# 
   729     0829                     PSMC1DBR        equ	2089	;# 
   730     082A                     PSMC1DBF        equ	2090	;# 
   731     082B                     PSMC1BLKR       equ	2091	;# 
   732     082C                     PSMC1BLKF       equ	2092	;# 
   733     082D                     PSMC1FFA        equ	2093	;# 
   734     082E                     PSMC1STR0       equ	2094	;# 
   735     082F                     PSMC1STR1       equ	2095	;# 
   736     0831                     PSMC2CON        equ	2097	;# 
   737     0832                     PSMC2MDL        equ	2098	;# 
   738     0833                     PSMC2SYNC       equ	2099	;# 
   739     0834                     PSMC2CLK        equ	2100	;# 
   740     0835                     PSMC2OEN        equ	2101	;# 
   741     0836                     PSMC2POL        equ	2102	;# 
   742     0837                     PSMC2BLNK       equ	2103	;# 
   743     0838                     PSMC2REBS       equ	2104	;# 
   744     0839                     PSMC2FEBS       equ	2105	;# 
   745     083A                     PSMC2PHS        equ	2106	;# 
   746     083B                     PSMC2DCS        equ	2107	;# 
   747     083C                     PSMC2PRS        equ	2108	;# 
   748     083D                     PSMC2ASDC       equ	2109	;# 
   749     083E                     PSMC2ASDL       equ	2110	;# 
   750     083F                     PSMC2ASDS       equ	2111	;# 
   751     0840                     PSMC2INT        equ	2112	;# 
   752     0841                     PSMC2PH         equ	2113	;# 
   753     0841                     PSMC2PHL        equ	2113	;# 
   754     0842                     PSMC2PHH        equ	2114	;# 
   755     0843                     PSMC2DC         equ	2115	;# 
   756     0843                     PSMC2DCL        equ	2115	;# 
   757     0844                     PSMC2DCH        equ	2116	;# 
   758     0845                     PSMC2PR         equ	2117	;# 
   759     0845                     PSMC2PRL        equ	2117	;# 
   760     0846                     PSMC2PRH        equ	2118	;# 
   761     0847                     PSMC2TMR        equ	2119	;# 
   762     0847                     PSMC2TMRL       equ	2119	;# 
   763     0848                     PSMC2TMRH       equ	2120	;# 
   764     0849                     PSMC2DBR        equ	2121	;# 
   765     084A                     PSMC2DBF        equ	2122	;# 
   766     084B                     PSMC2BLKR       equ	2123	;# 
   767     084C                     PSMC2BLKF       equ	2124	;# 
   768     084D                     PSMC2FFA        equ	2125	;# 
   769     084E                     PSMC2STR0       equ	2126	;# 
   770     084F                     PSMC2STR1       equ	2127	;# 
   771     0FE4                     STATUS_SHAD     equ	4068	;# 
   772     0FE5                     WREG_SHAD       equ	4069	;# 
   773     0FE6                     BSR_SHAD        equ	4070	;# 
   774     0FE7                     PCLATH_SHAD     equ	4071	;# 
   775     0FE8                     FSR0L_SHAD      equ	4072	;# 
   776     0FE9                     FSR0H_SHAD      equ	4073	;# 
   777     0FEA                     FSR1L_SHAD      equ	4074	;# 
   778     0FEB                     FSR1H_SHAD      equ	4075	;# 
   779     0FED                     STKPTR          equ	4077	;# 
   780     0FEE                     TOSL            equ	4078	;# 
   781     0FEF                     TOSH            equ	4079	;# 
   782     000C                     _PORTAbits      set	12
   783     008C                     _TRISAbits      set	140
   784     008E                     _TRISCbits      set	142
   785     008D                     _TRISBbits      set	141
   786     010E                     _LATCbits       set	270
   787     010D                     _LATBbits       set	269
   788     018C                     _ANSELAbits     set	396
   789     018D                     _ANSELBbits     set	397
   790                           
   791                           	psect	stringtext1
   792     0800                     __pstringtext1:
   793     0800                     STR_1:
   794     0800  3453               	retlw	83	;'S'
   795     0801  3465               	retlw	101	;'e'
   796     0802  3472               	retlw	114	;'r'
   797     0803  3476               	retlw	118	;'v'
   798     0804  346F               	retlw	111	;'o'
   799     0805  3420               	retlw	32	;' '
   800     0806  344D               	retlw	77	;'M'
   801     0807  346F               	retlw	111	;'o'
   802     0808  3474               	retlw	116	;'t'
   803     0809  346F               	retlw	111	;'o'
   804     080A  3472               	retlw	114	;'r'
   805     080B  3400               	retlw	0
   806                           
   807                           	psect	stringtext2
   808     0000                     __pstringtext2:
   809                           
   810                           	psect	cinit
   811     07FD                     start_initialization:	
   812                           ; #config settings
   813                           
   814     07FD                     __initialization:
   815     07FD                     end_of_initialization:	
   816                           ;End of C runtime variable initialization code
   817                           
   818     07FD                     __end_of__initialization:
   819     07FD  0020               	movlb	0
   820     07FE  3184  2C33         	ljmp	_main	;jump to C main() function
   821                           
   822                           	psect	cstackCOMMON
   823     0070                     __pcstackCOMMON:
   824     0070                     ?_programInitialize:
   825     0070                     ?_programLoop:	
   826                           ; 1 bytes @ 0x0
   827                           
   828     0070                     ?_lcd_Initialize:	
   829                           ; 1 bytes @ 0x0
   830                           
   831     0070                     ?_servo_MotorPosition:	
   832                           ; 1 bytes @ 0x0
   833                           
   834     0070                     ?_pb_DelayDebounce:	
   835                           ; 1 bytes @ 0x0
   836                           
   837     0070                     ?_memset:	
   838                           ; 1 bytes @ 0x0
   839                           
   840     0070                     ?_main:	
   841                           ; 1 bytes @ 0x0
   842                           
   843     0070                     ?_delay_x1o5us:	
   844                           ; 1 bytes @ 0x0
   845                           
   846     0070                     ?_lcd_DelaySetupTime:	
   847                           ; 1 bytes @ 0x0
   848                           
   849     0070                     ?_lcd_DelayPulse:	
   850                           ; 1 bytes @ 0x0
   851                           
   852     0070                     ?_lcd_EPulse:	
   853                           ; 1 bytes @ 0x0
   854                           
   855     0070                     ?_lcd_WriteData:	
   856                           ; 1 bytes @ 0x0
   857                           
   858     0070                     ?_lcd_PrintCmd:	
   859                           ; 1 bytes @ 0x0
   860                           
   861     0070                     ?_lcd_PrintChar:	
   862                           ; 1 bytes @ 0x0
   863                           
   864     0070                     ?___bmul:	
   865                           ; 1 bytes @ 0x0
   866                           
   867     0070                     ?___wmul:	
   868                           ; 1 bytes @ 0x0
   869                           
   870     0070                     ?_labs:	
   871                           ; 2 bytes @ 0x0
   872                           
   873     0070                     ?___aldiv:	
   874                           ; 4 bytes @ 0x0
   875                           
   876     0070                     delay_x1o5us@delay:	
   877                           ; 4 bytes @ 0x0
   878                           
   879     0070                     ___bmul@multiplicand:	
   880                           ; 1 bytes @ 0x0
   881                           
   882     0070                     memset@dest:	
   883                           ; 1 bytes @ 0x0
   884                           
   885     0070                     ___wmul@multiplier:	
   886                           ; 1 bytes @ 0x0
   887                           
   888     0070                     ___aldiv@divisor:	
   889                           ; 2 bytes @ 0x0
   890                           
   891     0070                     labs@a:	
   892                           ; 4 bytes @ 0x0
   893                           
   894     0070                     ??_pb_DelayDebounce:	
   895                           ; 4 bytes @ 0x0
   896                           
   897     0070                     ??_delay_x1o5us:	
   898                           ; 1 bytes @ 0x0
   899                           
   900                           
   901                           ; 1 bytes @ 0x0
   902     0070                     	ds	1
   903     0071                     delay_x1o5us@i:
   904     0071                     ___bmul@product:	
   905                           ; 1 bytes @ 0x1
   906                           
   907     0071                     memset@c:	
   908                           ; 1 bytes @ 0x1
   909                           
   910     0071                     ??___bmul:	
   911                           ; 2 bytes @ 0x1
   912                           
   913                           
   914                           ; 1 bytes @ 0x1
   915     0071                     	ds	1
   916     0072                     ?_delay_x24o25us:
   917     0072                     ___bmul@multiplier:	
   918                           ; 1 bytes @ 0x2
   919                           
   920     0072                     delay_x24o25us@delay:	
   921                           ; 1 bytes @ 0x2
   922                           
   923     0072                     ___wmul@multiplicand:	
   924                           ; 2 bytes @ 0x2
   925                           
   926     0072                     ??_lcd_DelaySetupTime:	
   927                           ; 2 bytes @ 0x2
   928                           
   929     0072                     ??_lcd_DelayPulse:	
   930                           ; 1 bytes @ 0x2
   931                           
   932     0072                     ??_lcd_EPulse:	
   933                           ; 1 bytes @ 0x2
   934                           
   935     0072                     ??_lcd_WriteData:	
   936                           ; 1 bytes @ 0x2
   937                           
   938                           
   939                           ; 1 bytes @ 0x2
   940     0072                     	ds	1
   941     0073                     memset@n:
   942                           
   943                           ; 2 bytes @ 0x3
   944     0073                     	ds	1
   945     0074                     lcd_WriteData@data:
   946     0074                     delay_x24o25us@i:	
   947                           ; 1 bytes @ 0x4
   948                           
   949     0074                     ___wmul@product:	
   950                           ; 2 bytes @ 0x4
   951                           
   952     0074                     ___aldiv@dividend:	
   953                           ; 2 bytes @ 0x4
   954                           
   955     0074                     ??_labs:	
   956                           ; 4 bytes @ 0x4
   957                           
   958     0074                     ??_delay_x24o25us:	
   959                           ; 1 bytes @ 0x4
   960                           
   961     0074                     ??___wmul:	
   962                           ; 1 bytes @ 0x4
   963                           
   964                           
   965                           ; 1 bytes @ 0x4
   966     0074                     	ds	1
   967     0075                     lcd_PrintCmd@command:
   968     0075                     lcd_PrintChar@character:	
   969                           ; 1 bytes @ 0x5
   970                           
   971     0075                     memset@p:	
   972                           ; 1 bytes @ 0x5
   973                           
   974     0075                     ??_memset:	
   975                           ; 1 bytes @ 0x5
   976                           
   977     0075                     ??_lcd_PrintCmd:	
   978                           ; 1 bytes @ 0x5
   979                           
   980     0075                     ??_lcd_PrintChar:	
   981                           ; 1 bytes @ 0x5
   982                           
   983                           
   984                           ; 1 bytes @ 0x5
   985     0075                     	ds	1
   986     0076                     ?_delay_ms:
   987     0076                     ?_lcd_Goto:	
   988                           ; 1 bytes @ 0x6
   989                           
   990     0076                     ?_lcd_PrintString:	
   991                           ; 1 bytes @ 0x6
   992                           
   993     0076                     lcd_Goto@x:	
   994                           ; 1 bytes @ 0x6
   995                           
   996     0076                     lcd_PrintString@string:	
   997                           ; 1 bytes @ 0x6
   998                           
   999     0076                     delay_ms@delay:	
  1000                           ; 2 bytes @ 0x6
  1001                           
  1002     0076                     ??_servo_MotorPosition:	
  1003                           ; 4 bytes @ 0x6
  1004                           
  1005                           
  1006                           ; 1 bytes @ 0x6
  1007     0076                     	ds	1
  1008     0077                     lcd_Goto@y:
  1009     0077                     ??_lcd_Goto:	
  1010                           ; 1 bytes @ 0x7
  1011                           
  1012                           
  1013                           ; 1 bytes @ 0x7
  1014     0077                     	ds	1
  1015     0078                     ___aldiv@counter:
  1016     0078                     ??_lcd_PrintString:	
  1017                           ; 1 bytes @ 0x8
  1018                           
  1019     0078                     ??___aldiv:	
  1020                           ; 1 bytes @ 0x8
  1021                           
  1022                           
  1023                           ; 1 bytes @ 0x8
  1024     0078                     	ds	1
  1025     0079                     ___aldiv@sign:
  1026                           
  1027                           ; 1 bytes @ 0x9
  1028     0079                     	ds	1
  1029     007A                     delay_ms@i:
  1030     007A                     ___aldiv@quotient:	
  1031                           ; 4 bytes @ 0xA
  1032                           
  1033     007A                     ??_delay_ms:	
  1034                           ; 4 bytes @ 0xA
  1035                           
  1036                           
  1037                           ; 1 bytes @ 0xA
  1038     007A                     	ds	4
  1039     007E                     ??_programInitialize:
  1040     007E                     ??_lcd_Initialize:	
  1041                           ; 1 bytes @ 0xE
  1042                           
  1043     007E                     ??_main:	
  1044                           ; 1 bytes @ 0xE
  1045                           
  1046                           
  1047                           	psect	cstackBANK0
  1048     0020                     __pcstackBANK0:	
  1049                           ; 1 bytes @ 0xE
  1050                           
  1051     0020                     ?_lcd_PrintDigitInt32:
  1052     0020                     servo_MotorPosition@toff:	
  1053                           ; 1 bytes @ 0x0
  1054                           
  1055     0020                     lcd_PrintDigitInt32@number:	
  1056                           ; 2 bytes @ 0x0
  1057                           
  1058                           
  1059                           ; 4 bytes @ 0x0
  1060     0020                     	ds	2
  1061     0022                     servo_MotorPosition@angle:
  1062                           
  1063                           ; 1 bytes @ 0x2
  1064     0022                     	ds	1
  1065     0023                     servo_MotorPosition@ton:
  1066                           
  1067                           ; 2 bytes @ 0x3
  1068     0023                     	ds	1
  1069     0024                     lcd_PrintDigitInt32@noDigit:
  1070                           
  1071                           ; 1 bytes @ 0x4
  1072     0024                     	ds	1
  1073     0025                     lcd_PrintDigitInt32@enSign:
  1074     0025                     servo_MotorPosition@i1:	
  1075                           ; 1 bytes @ 0x5
  1076                           
  1077                           
  1078                           ; 2 bytes @ 0x5
  1079     0025                     	ds	1
  1080     0026                     lcd_PrintDigitInt32@enZero:
  1081                           
  1082                           ; 1 bytes @ 0x6
  1083     0026                     	ds	1
  1084     0027                     servo_MotorPosition@i2:
  1085     0027                     ??_lcd_PrintDigitInt32:	
  1086                           ; 2 bytes @ 0x7
  1087                           
  1088                           
  1089                           ; 1 bytes @ 0x7
  1090     0027                     	ds	4
  1091     002B                     lcd_PrintDigitInt32@numberRevChar:
  1092                           
  1093                           ; 11 bytes @ 0xB
  1094     002B                     	ds	11
  1095     0036                     lcd_PrintDigitInt32@numberChar:
  1096                           
  1097                           ; 11 bytes @ 0x16
  1098     0036                     	ds	11
  1099     0041                     lcd_PrintDigitInt32@tempN:
  1100                           
  1101                           ; 4 bytes @ 0x21
  1102     0041                     	ds	4
  1103     0045                     lcd_PrintDigitInt32@tempC:
  1104                           
  1105                           ; 1 bytes @ 0x25
  1106     0045                     	ds	1
  1107     0046                     lcd_PrintDigitInt32@i2:
  1108                           
  1109                           ; 1 bytes @ 0x26
  1110     0046                     	ds	1
  1111     0047                     lcd_PrintDigitInt32@totalDigit:
  1112                           
  1113                           ; 1 bytes @ 0x27
  1114     0047                     	ds	1
  1115     0048                     lcd_PrintDigitInt32@i1:
  1116                           
  1117                           ; 1 bytes @ 0x28
  1118     0048                     	ds	1
  1119     0049                     ??_programLoop:
  1120                           
  1121                           ; 1 bytes @ 0x29
  1122     0049                     	ds	1
  1123     004A                     programLoop@angle:
  1124                           
  1125                           ; 2 bytes @ 0x2A
  1126     004A                     	ds	2
  1127                           
  1128                           	psect	maintext
  1129     0433                     __pmaintext:	
  1130 ;;
  1131 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1132 ;;
  1133 ;; *************** function _main *****************
  1134 ;; Defined at:
  1135 ;;		line 26 in file "main.c"
  1136 ;; Parameters:    Size  Location     Type
  1137 ;;		None
  1138 ;; Auto vars:     Size  Location     Type
  1139 ;;		None
  1140 ;; Return value:  Size  Location     Type
  1141 ;;                  1    wreg      void 
  1142 ;; Registers used:
  1143 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1144 ;; Tracked objects:
  1145 ;;		On entry : B1F/0
  1146 ;;		On exit  : 0/0
  1147 ;;		Unchanged: 0/0
  1148 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1149 ;;      Params:         0       0       0       0       0       0       0
  1150 ;;      Locals:         0       0       0       0       0       0       0
  1151 ;;      Temps:          0       0       0       0       0       0       0
  1152 ;;      Totals:         0       0       0       0       0       0       0
  1153 ;;Total ram usage:        0 bytes
  1154 ;; Hardware stack levels required when called: 8
  1155 ;; This function calls:
  1156 ;;		_delay_ms
  1157 ;;		_programInitialize
  1158 ;;		_programLoop
  1159 ;; This function is called by:
  1160 ;;		Startup code after reset
  1161 ;; This function uses a non-reentrant model
  1162 ;;
  1163                           
  1164     0433                     _main:	
  1165                           ;psect for function _main
  1166                           
  1167     0433                     l1448:	
  1168                           ;incstack = 0
  1169                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1170                           
  1171                           
  1172                           ;main.c: 27:     delay_ms(100);
  1173     0433  3000               	movlw	0
  1174     0434  00F9               	movwf	delay_ms@delay+3
  1175     0435  3000               	movlw	0
  1176     0436  00F8               	movwf	delay_ms@delay+2
  1177     0437  3000               	movlw	0
  1178     0438  00F7               	movwf	delay_ms@delay+1
  1179     0439  3064               	movlw	100
  1180     043A  00F6               	movwf	delay_ms@delay
  1181     043B  3184  2452  3184   	fcall	_delay_ms
  1182                           
  1183                           ;main.c: 28:     delay_ms(141);
  1184     043E  3000               	movlw	0
  1185     043F  00F9               	movwf	delay_ms@delay+3
  1186     0440  3000               	movlw	0
  1187     0441  00F8               	movwf	delay_ms@delay+2
  1188     0442  3000               	movlw	0
  1189     0443  00F7               	movwf	delay_ms@delay+1
  1190     0444  308D               	movlw	141
  1191     0445  00F6               	movwf	delay_ms@delay
  1192     0446  3184  2452  3184   	fcall	_delay_ms
  1193                           
  1194                           ;main.c: 30:     programInitialize();
  1195     0449  3184  247B  3184   	fcall	_programInitialize
  1196     044C                     l1450:
  1197                           
  1198                           ;main.c: 33:         programLoop();
  1199     044C  3187  2724  3184   	fcall	_programLoop
  1200     044F  2C4C               	goto	l1450
  1201     0450  3180  2802         	ljmp	start
  1202     0452                     __end_of_main:
  1203                           
  1204                           	psect	text1
  1205     0724                     __ptext1:	
  1206 ;; *************** function _programLoop *****************
  1207 ;; Defined at:
  1208 ;;		line 66 in file "program.c"
  1209 ;; Parameters:    Size  Location     Type
  1210 ;;		None
  1211 ;; Auto vars:     Size  Location     Type
  1212 ;;  angle           2   42[BANK0 ] short 
  1213 ;; Return value:  Size  Location     Type
  1214 ;;                  1    wreg      void 
  1215 ;; Registers used:
  1216 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1217 ;; Tracked objects:
  1218 ;;		On entry : 0/0
  1219 ;;		On exit  : 0/0
  1220 ;;		Unchanged: 0/0
  1221 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1222 ;;      Params:         0       0       0       0       0       0       0
  1223 ;;      Locals:         0       2       0       0       0       0       0
  1224 ;;      Temps:          0       1       0       0       0       0       0
  1225 ;;      Totals:         0       3       0       0       0       0       0
  1226 ;;Total ram usage:        3 bytes
  1227 ;; Hardware stack levels used: 1
  1228 ;; Hardware stack levels required when called: 7
  1229 ;; This function calls:
  1230 ;;		_lcd_Goto
  1231 ;;		_lcd_PrintDigitInt32
  1232 ;;		_lcd_PrintString
  1233 ;;		_pb_DelayDebounce
  1234 ;;		_servo_MotorPosition
  1235 ;; This function is called by:
  1236 ;;		_main
  1237 ;; This function uses a non-reentrant model
  1238 ;;
  1239                           
  1240     0724                     _programLoop:	
  1241                           ;psect for function _programLoop
  1242                           
  1243     0724                     l1384:	
  1244                           ;incstack = 0
  1245                           ; Regs used in _programLoop: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1246                           
  1247                           
  1248                           ;program.c: 67:     int16_t angle = 0;
  1249     0724  0020               	movlb	0	; select bank0
  1250     0725  01CA               	clrf	programLoop@angle
  1251     0726  01CB               	clrf	programLoop@angle+1
  1252     0727                     l1386:
  1253                           
  1254                           ;program.c: 69:     lcd_Goto(0, 0);
  1255     0727  01F6               	clrf	lcd_Goto@x
  1256     0728  3000               	movlw	0
  1257     0729  3183  23F7  3187   	fcall	_lcd_Goto
  1258     072C                     l1388:
  1259                           
  1260                           ;program.c: 70:     lcd_PrintString("Servo Motor");
  1261     072C  3000               	movlw	low (STR_1| (0+32768))
  1262     072D  00F6               	movwf	lcd_PrintString@string
  1263     072E  3088               	movlw	high (STR_1| (0+32768))
  1264     072F  00F7               	movwf	lcd_PrintString@string+1
  1265     0730  3183  23C9  3187   	fcall	_lcd_PrintString
  1266     0733                     l1390:
  1267                           
  1268                           ;program.c: 72:     lcd_Goto(1, 0);
  1269     0733  01F6               	clrf	lcd_Goto@x
  1270     0734  3001               	movlw	1
  1271     0735  3183  23F7  3187   	fcall	_lcd_Goto
  1272     0738                     l1392:
  1273                           
  1274                           ;program.c: 73:     lcd_PrintDigitInt32(0, 3, 0, 1);
  1275     0738  3000               	movlw	0
  1276     0739  0020               	movlb	0	; select bank0
  1277     073A  00A3               	movwf	lcd_PrintDigitInt32@number+3
  1278     073B  3000               	movlw	0
  1279     073C  00A2               	movwf	lcd_PrintDigitInt32@number+2
  1280     073D  3000               	movlw	0
  1281     073E  00A1               	movwf	lcd_PrintDigitInt32@number+1
  1282     073F  3000               	movlw	0
  1283     0740  00A0               	movwf	lcd_PrintDigitInt32@number
  1284     0741  3003               	movlw	3
  1285     0742  00A4               	movwf	lcd_PrintDigitInt32@noDigit
  1286     0743  01A5               	clrf	lcd_PrintDigitInt32@enSign
  1287     0744  01A6               	clrf	lcd_PrintDigitInt32@enZero
  1288     0745  0AA6               	incf	lcd_PrintDigitInt32@enZero,f
  1289     0746  3186  2650  3187   	fcall	_lcd_PrintDigitInt32
  1290     0749                     l1394:
  1291                           
  1292                           ;program.c: 76:         if(!PORTAbits.RA3) {
  1293     0749  0020               	movlb	0	; select bank0
  1294     074A  198C               	btfsc	12,3	;volatile
  1295     074B  2F4D               	goto	u881
  1296     074C  2F4E               	goto	u880
  1297     074D                     u881:
  1298     074D  2F79               	goto	l1410
  1299     074E                     u880:
  1300     074E                     l1396:
  1301                           
  1302                           ;program.c: 77:             angle--;
  1303     074E  30FF               	movlw	255
  1304     074F  07CA               	addwf	programLoop@angle,f
  1305     0750  30FF               	movlw	255
  1306     0751  3DCB               	addwfc	programLoop@angle+1,f
  1307     0752                     l1398:
  1308                           
  1309                           ;program.c: 78:             if(angle<0) angle = 180;
  1310     0752  1FCB               	btfss	programLoop@angle+1,7
  1311     0753  2F55               	goto	u891
  1312     0754  2F56               	goto	u890
  1313     0755                     u891:
  1314     0755  2F5A               	goto	l1402
  1315     0756                     u890:
  1316     0756                     l1400:
  1317     0756  30B4               	movlw	180
  1318     0757  00CA               	movwf	programLoop@angle
  1319     0758  3000               	movlw	0
  1320     0759  00CB               	movwf	programLoop@angle+1
  1321     075A                     l1402:
  1322                           
  1323                           ;program.c: 80:             lcd_Goto(1, 0);
  1324     075A  01F6               	clrf	lcd_Goto@x
  1325     075B  3001               	movlw	1
  1326     075C  3183  23F7  3187   	fcall	_lcd_Goto
  1327     075F                     l1404:
  1328                           
  1329                           ;program.c: 81:             lcd_PrintDigitInt32(angle, 3, 0, 1);
  1330     075F  0020               	movlb	0	; select bank0
  1331     0760  084A               	movf	programLoop@angle,w
  1332     0761  00A0               	movwf	lcd_PrintDigitInt32@number
  1333     0762  084B               	movf	programLoop@angle+1,w
  1334     0763  00A1               	movwf	lcd_PrintDigitInt32@number+1
  1335     0764  0D89               	rlf	9,f
  1336     0765  3B89               	subwfb	9,f
  1337     0766  0989               	comf	9,f
  1338     0767  00A2               	movwf	lcd_PrintDigitInt32@number+2
  1339     0768  00A3               	movwf	lcd_PrintDigitInt32@number+3
  1340     0769  3003               	movlw	3
  1341     076A  00A4               	movwf	lcd_PrintDigitInt32@noDigit
  1342     076B  01A5               	clrf	lcd_PrintDigitInt32@enSign
  1343     076C  01A6               	clrf	lcd_PrintDigitInt32@enZero
  1344     076D  0AA6               	incf	lcd_PrintDigitInt32@enZero,f
  1345     076E  3186  2650  3187   	fcall	_lcd_PrintDigitInt32
  1346     0771                     l1406:
  1347                           
  1348                           ;program.c: 83:             servo_MotorPosition((uint8_t)angle);
  1349     0771  0020               	movlb	0	; select bank0
  1350     0772  084A               	movf	programLoop@angle,w
  1351     0773  3184  24DE  3187   	fcall	_servo_MotorPosition
  1352     0776                     l1408:
  1353                           
  1354                           ;program.c: 85:             pb_DelayDebounce();
  1355     0776  3183  2352  3187   	fcall	_pb_DelayDebounce
  1356     0779                     l1410:
  1357                           
  1358                           ;program.c: 88:         if(!PORTAbits.RA4) {
  1359     0779  0020               	movlb	0	; select bank0
  1360     077A  1A0C               	btfsc	12,4	;volatile
  1361     077B  2F7D               	goto	u901
  1362     077C  2F7E               	goto	u900
  1363     077D                     u901:
  1364     077D  2FB1               	goto	l1424
  1365     077E                     u900:
  1366     077E                     l1412:
  1367                           
  1368                           ;program.c: 89:             angle++;
  1369     077E  3001               	movlw	1
  1370     077F  07CA               	addwf	programLoop@angle,f
  1371     0780  3000               	movlw	0
  1372     0781  3DCB               	addwfc	programLoop@angle+1,f
  1373                           
  1374                           ;program.c: 90:             if(angle>180) angle = 0;
  1375     0782  084B               	movf	programLoop@angle+1,w
  1376     0783  3A80               	xorlw	128
  1377     0784  00C9               	movwf	??_programLoop
  1378     0785  3080               	movlw	128
  1379     0786  0249               	subwf	??_programLoop,w
  1380     0787  1D03               	skipz
  1381     0788  2F8B               	goto	u915
  1382     0789  30B5               	movlw	181
  1383     078A  024A               	subwf	programLoop@angle,w
  1384     078B                     u915:
  1385     078B  1C03               	skipc
  1386     078C  2F8E               	goto	u911
  1387     078D  2F8F               	goto	u910
  1388     078E                     u911:
  1389     078E  2F92               	goto	l1416
  1390     078F                     u910:
  1391     078F                     l1414:
  1392     078F  0020               	movlb	0	; select bank0
  1393     0790  01CA               	clrf	programLoop@angle
  1394     0791  01CB               	clrf	programLoop@angle+1
  1395     0792                     l1416:
  1396                           
  1397                           ;program.c: 92:             lcd_Goto(1, 0);
  1398     0792  01F6               	clrf	lcd_Goto@x
  1399     0793  3001               	movlw	1
  1400     0794  3183  23F7  3187   	fcall	_lcd_Goto
  1401     0797                     l1418:
  1402                           
  1403                           ;program.c: 93:             lcd_PrintDigitInt32(angle, 3, 0, 1);
  1404     0797  0020               	movlb	0	; select bank0
  1405     0798  084A               	movf	programLoop@angle,w
  1406     0799  00A0               	movwf	lcd_PrintDigitInt32@number
  1407     079A  084B               	movf	programLoop@angle+1,w
  1408     079B  00A1               	movwf	lcd_PrintDigitInt32@number+1
  1409     079C  0D89               	rlf	9,f
  1410     079D  3B89               	subwfb	9,f
  1411     079E  0989               	comf	9,f
  1412     079F  00A2               	movwf	lcd_PrintDigitInt32@number+2
  1413     07A0  00A3               	movwf	lcd_PrintDigitInt32@number+3
  1414     07A1  3003               	movlw	3
  1415     07A2  00A4               	movwf	lcd_PrintDigitInt32@noDigit
  1416     07A3  01A5               	clrf	lcd_PrintDigitInt32@enSign
  1417     07A4  01A6               	clrf	lcd_PrintDigitInt32@enZero
  1418     07A5  0AA6               	incf	lcd_PrintDigitInt32@enZero,f
  1419     07A6  3186  2650  3187   	fcall	_lcd_PrintDigitInt32
  1420     07A9                     l1420:
  1421                           
  1422                           ;program.c: 95:             servo_MotorPosition((uint8_t)angle);
  1423     07A9  0020               	movlb	0	; select bank0
  1424     07AA  084A               	movf	programLoop@angle,w
  1425     07AB  3184  24DE  3187   	fcall	_servo_MotorPosition
  1426     07AE                     l1422:
  1427                           
  1428                           ;program.c: 97:             pb_DelayDebounce();
  1429     07AE  3183  2352  3187   	fcall	_pb_DelayDebounce
  1430     07B1                     l1424:
  1431                           
  1432                           ;program.c: 100:         if(!PORTAbits.RA1) {
  1433     07B1  0020               	movlb	0	; select bank0
  1434     07B2  188C               	btfsc	12,1	;volatile
  1435     07B3  2FB5               	goto	u921
  1436     07B4  2FB6               	goto	u920
  1437     07B5                     u921:
  1438     07B5  2FD7               	goto	l1436
  1439     07B6                     u920:
  1440     07B6                     l1426:
  1441                           
  1442                           ;program.c: 101:             angle = 90;
  1443     07B6  305A               	movlw	90
  1444     07B7  00CA               	movwf	programLoop@angle
  1445     07B8  3000               	movlw	0
  1446     07B9  00CB               	movwf	programLoop@angle+1
  1447     07BA                     l1428:
  1448                           
  1449                           ;program.c: 103:             lcd_Goto(1, 0);
  1450     07BA  01F6               	clrf	lcd_Goto@x
  1451     07BB  3001               	movlw	1
  1452     07BC  3183  23F7  3187   	fcall	_lcd_Goto
  1453     07BF                     l1430:
  1454                           
  1455                           ;program.c: 104:             lcd_PrintDigitInt32(angle, 3, 0, 1);
  1456     07BF  3000               	movlw	0
  1457     07C0  0020               	movlb	0	; select bank0
  1458     07C1  00A3               	movwf	lcd_PrintDigitInt32@number+3
  1459     07C2  3000               	movlw	0
  1460     07C3  00A2               	movwf	lcd_PrintDigitInt32@number+2
  1461     07C4  3000               	movlw	0
  1462     07C5  00A1               	movwf	lcd_PrintDigitInt32@number+1
  1463     07C6  305A               	movlw	90
  1464     07C7  00A0               	movwf	lcd_PrintDigitInt32@number
  1465     07C8  3003               	movlw	3
  1466     07C9  00A4               	movwf	lcd_PrintDigitInt32@noDigit
  1467     07CA  01A5               	clrf	lcd_PrintDigitInt32@enSign
  1468     07CB  01A6               	clrf	lcd_PrintDigitInt32@enZero
  1469     07CC  0AA6               	incf	lcd_PrintDigitInt32@enZero,f
  1470     07CD  3186  2650  3187   	fcall	_lcd_PrintDigitInt32
  1471     07D0                     l1432:
  1472                           
  1473                           ;program.c: 106:             servo_MotorPosition((uint8_t)angle);
  1474     07D0  305A               	movlw	90
  1475     07D1  3184  24DE  3187   	fcall	_servo_MotorPosition
  1476     07D4                     l1434:
  1477                           
  1478                           ;program.c: 108:             pb_DelayDebounce();
  1479     07D4  3183  2352  3187   	fcall	_pb_DelayDebounce
  1480     07D7                     l1436:
  1481                           
  1482                           ;program.c: 111:         if(!PORTAbits.RA2) {
  1483     07D7  0020               	movlb	0	; select bank0
  1484     07D8  190C               	btfsc	12,2	;volatile
  1485     07D9  2FDB               	goto	u931
  1486     07DA  2FDC               	goto	u930
  1487     07DB                     u931:
  1488     07DB  2F49               	goto	l1394
  1489     07DC                     u930:
  1490     07DC                     l1438:
  1491                           
  1492                           ;program.c: 112:             angle = 0;
  1493     07DC  01CA               	clrf	programLoop@angle
  1494     07DD  01CB               	clrf	programLoop@angle+1
  1495     07DE                     l1440:
  1496                           
  1497                           ;program.c: 114:             lcd_Goto(1, 0);
  1498     07DE  01F6               	clrf	lcd_Goto@x
  1499     07DF  3001               	movlw	1
  1500     07E0  3183  23F7  3187   	fcall	_lcd_Goto
  1501     07E3                     l1442:
  1502                           
  1503                           ;program.c: 115:             lcd_PrintDigitInt32(angle, 3, 0, 1);
  1504     07E3  3000               	movlw	0
  1505     07E4  0020               	movlb	0	; select bank0
  1506     07E5  00A3               	movwf	lcd_PrintDigitInt32@number+3
  1507     07E6  3000               	movlw	0
  1508     07E7  00A2               	movwf	lcd_PrintDigitInt32@number+2
  1509     07E8  3000               	movlw	0
  1510     07E9  00A1               	movwf	lcd_PrintDigitInt32@number+1
  1511     07EA  3000               	movlw	0
  1512     07EB  00A0               	movwf	lcd_PrintDigitInt32@number
  1513     07EC  3003               	movlw	3
  1514     07ED  00A4               	movwf	lcd_PrintDigitInt32@noDigit
  1515     07EE  01A5               	clrf	lcd_PrintDigitInt32@enSign
  1516     07EF  01A6               	clrf	lcd_PrintDigitInt32@enZero
  1517     07F0  0AA6               	incf	lcd_PrintDigitInt32@enZero,f
  1518     07F1  3186  2650  3187   	fcall	_lcd_PrintDigitInt32
  1519     07F4                     l1444:
  1520                           
  1521                           ;program.c: 117:             servo_MotorPosition((uint8_t)angle);
  1522     07F4  3000               	movlw	0
  1523     07F5  3184  24DE  3187   	fcall	_servo_MotorPosition
  1524     07F8                     l1446:
  1525                           
  1526                           ;program.c: 119:             pb_DelayDebounce();
  1527     07F8  3183  2352  3187   	fcall	_pb_DelayDebounce
  1528     07FB  2F49               	goto	l1394
  1529     07FC  0008               	return
  1530     07FD                     __end_of_programLoop:
  1531                           
  1532                           	psect	text2
  1533     0352                     __ptext2:	
  1534 ;; *************** function _pb_DelayDebounce *****************
  1535 ;; Defined at:
  1536 ;;		line 126 in file "program.c"
  1537 ;; Parameters:    Size  Location     Type
  1538 ;;		None
  1539 ;; Auto vars:     Size  Location     Type
  1540 ;;		None
  1541 ;; Return value:  Size  Location     Type
  1542 ;;                  1    wreg      void 
  1543 ;; Registers used:
  1544 ;;		None
  1545 ;; Tracked objects:
  1546 ;;		On entry : 0/0
  1547 ;;		On exit  : 0/0
  1548 ;;		Unchanged: 0/0
  1549 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1550 ;;      Params:         0       0       0       0       0       0       0
  1551 ;;      Locals:         0       0       0       0       0       0       0
  1552 ;;      Temps:          0       0       0       0       0       0       0
  1553 ;;      Totals:         0       0       0       0       0       0       0
  1554 ;;Total ram usage:        0 bytes
  1555 ;; Hardware stack levels used: 1
  1556 ;; This function calls:
  1557 ;;		Nothing
  1558 ;; This function is called by:
  1559 ;;		_programLoop
  1560 ;; This function uses a non-reentrant model
  1561 ;;
  1562                           
  1563     0352                     _pb_DelayDebounce:	
  1564                           ;psect for function _pb_DelayDebounce
  1565                           
  1566     0352                     l84:	
  1567                           ;incstack = 0
  1568                           ; Regs used in _pb_DelayDebounce: []
  1569                           
  1570     0352  0008               	return
  1571     0353                     __end_of_pb_DelayDebounce:
  1572                           
  1573                           	psect	text3
  1574     0650                     __ptext3:	
  1575 ;; *************** function _lcd_PrintDigitInt32 *****************
  1576 ;; Defined at:
  1577 ;;		line 264 in file "program.c"
  1578 ;; Parameters:    Size  Location     Type
  1579 ;;  number          4    0[BANK0 ] long 
  1580 ;;  noDigit         1    4[BANK0 ] unsigned char 
  1581 ;;  enSign          1    5[BANK0 ] _Bool 
  1582 ;;  enZero          1    6[BANK0 ] _Bool 
  1583 ;; Auto vars:     Size  Location     Type
  1584 ;;  tempN           4   33[BANK0 ] long 
  1585 ;;  tempC           1   37[BANK0 ] unsigned char 
  1586 ;;  numberChar     11   22[BANK0 ] unsigned char [11]
  1587 ;;  numberRevCha   11   11[BANK0 ] unsigned char [11]
  1588 ;;  i1              1   40[BANK0 ] unsigned char 
  1589 ;;  totalDigit      1   39[BANK0 ] unsigned char 
  1590 ;;  i2              1   38[BANK0 ] unsigned char 
  1591 ;; Return value:  Size  Location     Type
  1592 ;;                  1    wreg      void 
  1593 ;; Registers used:
  1594 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1595 ;; Tracked objects:
  1596 ;;		On entry : 0/0
  1597 ;;		On exit  : 0/0
  1598 ;;		Unchanged: 0/0
  1599 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1600 ;;      Params:         0       7       0       0       0       0       0
  1601 ;;      Locals:         0      30       0       0       0       0       0
  1602 ;;      Temps:          0       4       0       0       0       0       0
  1603 ;;      Totals:         0      41       0       0       0       0       0
  1604 ;;Total ram usage:       41 bytes
  1605 ;; Hardware stack levels used: 1
  1606 ;; Hardware stack levels required when called: 6
  1607 ;; This function calls:
  1608 ;;		___aldiv
  1609 ;;		___bmul
  1610 ;;		_labs
  1611 ;;		_lcd_PrintChar
  1612 ;;		_lcd_PrintString
  1613 ;;		_memset
  1614 ;; This function is called by:
  1615 ;;		_programLoop
  1616 ;; This function uses a non-reentrant model
  1617 ;;
  1618                           
  1619     0650                     _lcd_PrintDigitInt32:	
  1620                           ;psect for function _lcd_PrintDigitInt32
  1621                           
  1622     0650                     l1320:	
  1623                           ;incstack = 0
  1624                           ; Regs used in _lcd_PrintDigitInt32: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1625                           
  1626                           
  1627                           ;program.c: 265:     uint8_t i1 = 0,
  1628     0650  0020               	movlb	0	; select bank0
  1629     0651  01C8               	clrf	lcd_PrintDigitInt32@i1
  1630                           
  1631                           ;program.c: 267:             totalDigit = 0;
  1632     0652  01C7               	clrf	lcd_PrintDigitInt32@totalDigit
  1633     0653                     l1322:
  1634                           
  1635                           ;program.c: 269:     char numberRevChar[11];;program.c: 270:     char numberChar[11];;pr
      +                          ogram.c: 272:     memset(numberRevChar, 0, 11);
  1636     0653  302B               	movlw	(low (lcd_PrintDigitInt32@numberRevChar| 0))& (0+255)
  1637     0654  00F0               	movwf	memset@dest
  1638     0655  3000               	movlw	0
  1639     0656  00F1               	movwf	memset@c
  1640     0657  00F2               	movwf	memset@c+1
  1641     0658  300B               	movlw	11
  1642     0659  00F3               	movwf	memset@n
  1643     065A  3000               	movlw	0
  1644     065B  00F4               	movwf	memset@n+1
  1645     065C  3183  23E0  3186   	fcall	_memset
  1646     065F                     l1324:
  1647                           
  1648                           ;program.c: 273:     memset(numberChar, 0, 11);
  1649     065F  3036               	movlw	(low (lcd_PrintDigitInt32@numberChar| 0))& (0+255)
  1650     0660  00F0               	movwf	memset@dest
  1651     0661  3000               	movlw	0
  1652     0662  00F1               	movwf	memset@c
  1653     0663  00F2               	movwf	memset@c+1
  1654     0664  300B               	movlw	11
  1655     0665  00F3               	movwf	memset@n
  1656     0666  3000               	movlw	0
  1657     0667  00F4               	movwf	memset@n+1
  1658     0668  3183  23E0  3186   	fcall	_memset
  1659     066B                     l1326:
  1660                           
  1661                           ;program.c: 275:     if(number<0) {
  1662     066B  0020               	movlb	0	; select bank0
  1663     066C  1FA3               	btfss	lcd_PrintDigitInt32@number+3,7
  1664     066D  2E6F               	goto	u811
  1665     066E  2E70               	goto	u810
  1666     066F                     u811:
  1667     066F  2E8F               	goto	l1332
  1668     0670                     u810:
  1669     0670                     l1328:
  1670                           
  1671                           ;program.c: 276:         if(enSign) lcd_PrintChar('-');
  1672     0670  0825               	movf	lcd_PrintDigitInt32@enSign,w
  1673     0671  1903               	btfsc	3,2
  1674     0672  2E74               	goto	u821
  1675     0673  2E75               	goto	u820
  1676     0674                     u821:
  1677     0674  2E79               	goto	l134
  1678     0675                     u820:
  1679     0675                     l1330:
  1680     0675  302D               	movlw	45
  1681     0676  3183  2373  3186   	fcall	_lcd_PrintChar
  1682     0679                     l134:
  1683                           
  1684                           ;program.c: 277:         number = labs(number);
  1685     0679  0020               	movlb	0	; select bank0
  1686     067A  0823               	movf	lcd_PrintDigitInt32@number+3,w
  1687     067B  00F3               	movwf	labs@a+3
  1688     067C  0822               	movf	lcd_PrintDigitInt32@number+2,w
  1689     067D  00F2               	movwf	labs@a+2
  1690     067E  0821               	movf	lcd_PrintDigitInt32@number+1,w
  1691     067F  00F1               	movwf	labs@a+1
  1692     0680  0820               	movf	lcd_PrintDigitInt32@number,w
  1693     0681  00F0               	movwf	labs@a
  1694     0682  3183  239E  3186   	fcall	_labs
  1695     0685  0873               	movf	?_labs+3,w
  1696     0686  0020               	movlb	0	; select bank0
  1697     0687  00A3               	movwf	lcd_PrintDigitInt32@number+3
  1698     0688  0872               	movf	?_labs+2,w
  1699     0689  00A2               	movwf	lcd_PrintDigitInt32@number+2
  1700     068A  0871               	movf	?_labs+1,w
  1701     068B  00A1               	movwf	lcd_PrintDigitInt32@number+1
  1702     068C  0870               	movf	?_labs,w
  1703     068D  00A0               	movwf	lcd_PrintDigitInt32@number
  1704                           
  1705                           ;program.c: 278:     } else {
  1706     068E  2E98               	goto	l1336
  1707     068F                     l1332:
  1708                           
  1709                           ;program.c: 279:         if(enSign) lcd_PrintChar(' ');
  1710     068F  0825               	movf	lcd_PrintDigitInt32@enSign,w
  1711     0690  1903               	btfsc	3,2
  1712     0691  2E93               	goto	u831
  1713     0692  2E94               	goto	u830
  1714     0693                     u831:
  1715     0693  2E98               	goto	l1336
  1716     0694                     u830:
  1717     0694                     l1334:
  1718     0694  3020               	movlw	32
  1719     0695  3183  2373  3186   	fcall	_lcd_PrintChar
  1720     0698                     l1336:
  1721                           
  1722                           ;program.c: 283:         int32_t tempN = number;
  1723     0698  0020               	movlb	0	; select bank0
  1724     0699  0823               	movf	lcd_PrintDigitInt32@number+3,w
  1725     069A  00C4               	movwf	lcd_PrintDigitInt32@tempN+3
  1726     069B  0822               	movf	lcd_PrintDigitInt32@number+2,w
  1727     069C  00C3               	movwf	lcd_PrintDigitInt32@tempN+2
  1728     069D  0821               	movf	lcd_PrintDigitInt32@number+1,w
  1729     069E  00C2               	movwf	lcd_PrintDigitInt32@tempN+1
  1730     069F  0820               	movf	lcd_PrintDigitInt32@number,w
  1731     06A0  00C1               	movwf	lcd_PrintDigitInt32@tempN
  1732     06A1                     l1338:
  1733                           
  1734                           ;program.c: 284:         number /= 10;
  1735     06A1  3000               	movlw	0
  1736     06A2  00F3               	movwf	___aldiv@divisor+3
  1737     06A3  3000               	movlw	0
  1738     06A4  00F2               	movwf	___aldiv@divisor+2
  1739     06A5  3000               	movlw	0
  1740     06A6  00F1               	movwf	___aldiv@divisor+1
  1741     06A7  300A               	movlw	10
  1742     06A8  00F0               	movwf	___aldiv@divisor
  1743     06A9  0823               	movf	lcd_PrintDigitInt32@number+3,w
  1744     06AA  00F7               	movwf	___aldiv@dividend+3
  1745     06AB  0822               	movf	lcd_PrintDigitInt32@number+2,w
  1746     06AC  00F6               	movwf	___aldiv@dividend+2
  1747     06AD  0821               	movf	lcd_PrintDigitInt32@number+1,w
  1748     06AE  00F5               	movwf	___aldiv@dividend+1
  1749     06AF  0820               	movf	lcd_PrintDigitInt32@number,w
  1750     06B0  00F4               	movwf	___aldiv@dividend
  1751     06B1  3185  25C5  3186   	fcall	___aldiv
  1752     06B4  0873               	movf	?___aldiv+3,w
  1753     06B5  0020               	movlb	0	; select bank0
  1754     06B6  00A3               	movwf	lcd_PrintDigitInt32@number+3
  1755     06B7  0872               	movf	?___aldiv+2,w
  1756     06B8  00A2               	movwf	lcd_PrintDigitInt32@number+2
  1757     06B9  0871               	movf	?___aldiv+1,w
  1758     06BA  00A1               	movwf	lcd_PrintDigitInt32@number+1
  1759     06BB  0870               	movf	?___aldiv,w
  1760     06BC  00A0               	movwf	lcd_PrintDigitInt32@number
  1761     06BD                     l1340:
  1762                           
  1763                           ;program.c: 285:         char tempC = (char)(tempN -10 * number);
  1764     06BD  30F6               	movlw	246
  1765     06BE  00F0               	movwf	___bmul@multiplicand
  1766     06BF  0820               	movf	lcd_PrintDigitInt32@number,w
  1767     06C0  3183  238B  3186   	fcall	___bmul
  1768     06C3  0020               	movlb	0	; select bank0
  1769     06C4  0741               	addwf	lcd_PrintDigitInt32@tempN,w
  1770     06C5  00C5               	movwf	lcd_PrintDigitInt32@tempC
  1771     06C6                     l1342:
  1772                           
  1773                           ;program.c: 286:         numberRevChar[i1] = tempC + 48;
  1774     06C6  0848               	movf	lcd_PrintDigitInt32@i1,w
  1775     06C7  3E2B               	addlw	(low (lcd_PrintDigitInt32@numberRevChar| 0))& (0+255)
  1776     06C8  0086               	movwf	6
  1777     06C9  0187               	clrf	7
  1778     06CA  0845               	movf	lcd_PrintDigitInt32@tempC,w
  1779     06CB  3E30               	addlw	48
  1780     06CC  0081               	movwf	1
  1781     06CD                     l1344:
  1782                           
  1783                           ;program.c: 287:         i1++;
  1784     06CD  3001               	movlw	1
  1785     06CE  07C8               	addwf	lcd_PrintDigitInt32@i1,f
  1786     06CF                     l1346:
  1787                           
  1788                           ;program.c: 288:     } while(number);
  1789     06CF  0823               	movf	lcd_PrintDigitInt32@number+3,w
  1790     06D0  0422               	iorwf	lcd_PrintDigitInt32@number+2,w
  1791     06D1  0421               	iorwf	lcd_PrintDigitInt32@number+1,w
  1792     06D2  0420               	iorwf	lcd_PrintDigitInt32@number,w
  1793     06D3  1D03               	skipz
  1794     06D4  2ED6               	goto	u841
  1795     06D5  2ED7               	goto	u840
  1796     06D6                     u841:
  1797     06D6  2E98               	goto	l1336
  1798     06D7                     u840:
  1799     06D7                     l1348:
  1800                           
  1801                           ;program.c: 290:     totalDigit = i1;
  1802     06D7  0848               	movf	lcd_PrintDigitInt32@i1,w
  1803     06D8  00C7               	movwf	lcd_PrintDigitInt32@totalDigit
  1804     06D9                     l1350:
  1805                           
  1806                           ;program.c: 292:     for(i1=0; i1<(noDigit-totalDigit); i1++) {
  1807     06D9  01C8               	clrf	lcd_PrintDigitInt32@i1
  1808     06DA  2EED               	goto	l1360
  1809     06DB                     l1352:
  1810                           
  1811                           ;program.c: 293:         if(enZero) lcd_PrintChar('0');
  1812     06DB  0020               	movlb	0	; select bank0
  1813     06DC  0826               	movf	lcd_PrintDigitInt32@enZero,w
  1814     06DD  1903               	btfsc	3,2
  1815     06DE  2EE0               	goto	u851
  1816     06DF  2EE1               	goto	u850
  1817     06E0                     u851:
  1818     06E0  2EE6               	goto	l1356
  1819     06E1                     u850:
  1820     06E1                     l1354:
  1821     06E1  3030               	movlw	48
  1822     06E2  3183  2373  3186   	fcall	_lcd_PrintChar
  1823     06E5  2EEA               	goto	l1358
  1824     06E6                     l1356:
  1825     06E6  3020               	movlw	32
  1826     06E7  3183  2373  3186   	fcall	_lcd_PrintChar
  1827     06EA                     l1358:
  1828                           
  1829                           ;program.c: 295:     }
  1830     06EA  3001               	movlw	1
  1831     06EB  0020               	movlb	0	; select bank0
  1832     06EC  07C8               	addwf	lcd_PrintDigitInt32@i1,f
  1833     06ED                     l1360:
  1834     06ED  0824               	movf	lcd_PrintDigitInt32@noDigit,w
  1835     06EE  00A7               	movwf	??_lcd_PrintDigitInt32
  1836     06EF  01A8               	clrf	??_lcd_PrintDigitInt32+1
  1837     06F0  0828               	movf	??_lcd_PrintDigitInt32+1,w
  1838     06F1  00AA               	movwf	??_lcd_PrintDigitInt32+3
  1839     06F2  0847               	movf	lcd_PrintDigitInt32@totalDigit,w
  1840     06F3  0227               	subwf	??_lcd_PrintDigitInt32,w
  1841     06F4  00A9               	movwf	??_lcd_PrintDigitInt32+2
  1842     06F5  1C03               	skipc
  1843     06F6  03AA               	decf	??_lcd_PrintDigitInt32+3,f
  1844     06F7  082A               	movf	??_lcd_PrintDigitInt32+3,w
  1845     06F8  3A80               	xorlw	128
  1846     06F9  3C80               	sublw	128
  1847     06FA  1D03               	skipz
  1848     06FB  2EFE               	goto	u865
  1849     06FC  0829               	movf	??_lcd_PrintDigitInt32+2,w
  1850     06FD  0248               	subwf	lcd_PrintDigitInt32@i1,w
  1851     06FE                     u865:
  1852     06FE  1C03               	skipc
  1853     06FF  2F01               	goto	u861
  1854     0700  2F02               	goto	u860
  1855     0701                     u861:
  1856     0701  2EDB               	goto	l1352
  1857     0702                     u860:
  1858     0702                     l1362:
  1859                           
  1860                           ;program.c: 297:     for(i1=totalDigit, i2=0; i1>0; i1--, i2++) {
  1861     0702  0020               	movlb	0	; select bank0
  1862     0703  0847               	movf	lcd_PrintDigitInt32@totalDigit,w
  1863     0704  00C8               	movwf	lcd_PrintDigitInt32@i1
  1864     0705                     l1364:
  1865     0705  01C6               	clrf	lcd_PrintDigitInt32@i2
  1866     0706                     l1366:
  1867     0706  0848               	movf	lcd_PrintDigitInt32@i1,w
  1868     0707  1D03               	btfss	3,2
  1869     0708  2F0A               	goto	u871
  1870     0709  2F0B               	goto	u870
  1871     070A                     u871:
  1872     070A  2F0C               	goto	l1370
  1873     070B                     u870:
  1874     070B  2F1C               	goto	l1378
  1875     070C                     l1370:
  1876                           
  1877                           ;program.c: 298:         numberChar[i2] = numberRevChar[i1-1];
  1878     070C  0846               	movf	lcd_PrintDigitInt32@i2,w
  1879     070D  3E36               	addlw	(low (lcd_PrintDigitInt32@numberChar| 0))& (0+255)
  1880     070E  0086               	movwf	6
  1881     070F  0187               	clrf	7
  1882     0710  0848               	movf	lcd_PrintDigitInt32@i1,w
  1883     0711  3EFF               	addlw	255
  1884     0712  3E2B               	addlw	(low (lcd_PrintDigitInt32@numberRevChar| 0))& (0+255)
  1885     0713  0084               	movwf	4
  1886     0714  0185               	clrf	5
  1887     0715  0800               	movf	0,w
  1888     0716  0081               	movwf	1
  1889     0717                     l1372:
  1890                           
  1891                           ;program.c: 299:     }
  1892     0717  3001               	movlw	1
  1893     0718  02C8               	subwf	lcd_PrintDigitInt32@i1,f
  1894     0719                     l1374:
  1895     0719  3001               	movlw	1
  1896     071A  07C6               	addwf	lcd_PrintDigitInt32@i2,f
  1897     071B  2F06               	goto	l1366
  1898     071C                     l1378:
  1899                           
  1900                           ;program.c: 301:     lcd_PrintString(numberChar);
  1901     071C  3036               	movlw	low lcd_PrintDigitInt32@numberChar
  1902     071D  00F6               	movwf	lcd_PrintString@string
  1903     071E  3000               	movlw	high lcd_PrintDigitInt32@numberChar
  1904     071F  00F7               	movwf	lcd_PrintString@string+1
  1905     0720  3183  23C9  3186   	fcall	_lcd_PrintString
  1906     0723                     l146:
  1907     0723  0008               	return
  1908     0724                     __end_of_lcd_PrintDigitInt32:
  1909                           
  1910                           	psect	text4
  1911     03E0                     __ptext4:	
  1912 ;; *************** function _memset *****************
  1913 ;; Defined at:
  1914 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\memset.c"
  1915 ;; Parameters:    Size  Location     Type
  1916 ;;  dest            1    0[COMMON] PTR void 
  1917 ;;		 -> lcd_PrintDigitInt32@numberChar(11), lcd_PrintDigitInt32@numberRevChar(11), lcd_PrintInt32@numberChar(11), lcd_Pr
      +intInt32@numberRevChar(11), 
  1918 ;;  c               2    1[COMMON] int 
  1919 ;;  n               2    3[COMMON] unsigned int 
  1920 ;; Auto vars:     Size  Location     Type
  1921 ;;  p               1    5[COMMON] PTR unsigned char 
  1922 ;;		 -> lcd_PrintDigitInt32@numberChar(11), lcd_PrintDigitInt32@numberRevChar(11), lcd_PrintInt32@numberChar(11), lcd_Pr
      +intInt32@numberRevChar(11), 
  1923 ;; Return value:  Size  Location     Type
  1924 ;;                  1    0[COMMON] PTR void 
  1925 ;; Registers used:
  1926 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  1927 ;; Tracked objects:
  1928 ;;		On entry : 0/0
  1929 ;;		On exit  : 0/0
  1930 ;;		Unchanged: 0/0
  1931 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1932 ;;      Params:         5       0       0       0       0       0       0
  1933 ;;      Locals:         1       0       0       0       0       0       0
  1934 ;;      Temps:          0       0       0       0       0       0       0
  1935 ;;      Totals:         6       0       0       0       0       0       0
  1936 ;;Total ram usage:        6 bytes
  1937 ;; Hardware stack levels used: 1
  1938 ;; This function calls:
  1939 ;;		Nothing
  1940 ;; This function is called by:
  1941 ;;		_lcd_PrintDigitInt32
  1942 ;;		_lcd_PrintInt32
  1943 ;; This function uses a non-reentrant model
  1944 ;;
  1945                           
  1946     03E0                     _memset:	
  1947                           ;psect for function _memset
  1948                           
  1949     03E0                     l1200:	
  1950                           ;incstack = 0
  1951                           ; Regs used in _memset: [wreg+fsr1l+fsr1h+status,2+status,0]
  1952                           
  1953     03E0  0870               	movf	memset@dest,w
  1954     03E1  00F5               	movwf	memset@p
  1955     03E2  2BEA               	goto	l1206
  1956     03E3                     l1202:
  1957     03E3  0875               	movf	memset@p,w
  1958     03E4  0086               	movwf	6
  1959     03E5  0187               	clrf	7
  1960     03E6  0871               	movf	memset@c,w
  1961     03E7  0081               	movwf	1
  1962     03E8                     l1204:
  1963     03E8  3001               	movlw	1
  1964     03E9  07F5               	addwf	memset@p,f
  1965     03EA                     l1206:
  1966     03EA  3001               	movlw	1
  1967     03EB  02F3               	subwf	memset@n,f
  1968     03EC  3000               	movlw	0
  1969     03ED  3BF4               	subwfb	memset@n+1,f
  1970     03EE  0A73               	incf	memset@n,w
  1971     03EF  1D03               	skipz
  1972     03F0  2BF5               	goto	u601
  1973     03F1  0A74               	incf	memset@n+1,w
  1974     03F2  1D03               	btfss	3,2
  1975     03F3  2BF5               	goto	u601
  1976     03F4  2BF6               	goto	u600
  1977     03F5                     u601:
  1978     03F5  2BE3               	goto	l1202
  1979     03F6                     u600:
  1980     03F6                     l776:
  1981     03F6  0008               	return
  1982     03F7                     __end_of_memset:
  1983                           
  1984                           	psect	text5
  1985     03C9                     __ptext5:	
  1986 ;; *************** function _lcd_PrintString *****************
  1987 ;; Defined at:
  1988 ;;		line 224 in file "program.c"
  1989 ;; Parameters:    Size  Location     Type
  1990 ;;  string          2    6[COMMON] PTR unsigned char 
  1991 ;;		 -> lcd_PrintDigitInt32@numberChar(11), lcd_PrintInt32@numberChar(11), STR_1(12), 
  1992 ;; Auto vars:     Size  Location     Type
  1993 ;;		None
  1994 ;; Return value:  Size  Location     Type
  1995 ;;                  1    wreg      void 
  1996 ;; Registers used:
  1997 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1998 ;; Tracked objects:
  1999 ;;		On entry : 0/0
  2000 ;;		On exit  : 0/0
  2001 ;;		Unchanged: 0/0
  2002 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2003 ;;      Params:         2       0       0       0       0       0       0
  2004 ;;      Locals:         0       0       0       0       0       0       0
  2005 ;;      Temps:          1       0       0       0       0       0       0
  2006 ;;      Totals:         3       0       0       0       0       0       0
  2007 ;;Total ram usage:        3 bytes
  2008 ;; Hardware stack levels used: 1
  2009 ;; Hardware stack levels required when called: 5
  2010 ;; This function calls:
  2011 ;;		_lcd_PrintChar
  2012 ;; This function is called by:
  2013 ;;		_programLoop
  2014 ;;		_lcd_PrintDigitInt32
  2015 ;;		_lcd_PrintInt32
  2016 ;; This function uses a non-reentrant model
  2017 ;;
  2018                           
  2019     03C9                     _lcd_PrintString:	
  2020                           ;psect for function _lcd_PrintString
  2021                           
  2022     03C9                     l1188:	
  2023                           ;incstack = 0
  2024                           ; Regs used in _lcd_PrintString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2025                           
  2026                           
  2027                           ;program.c: 225:     while(*string!=0) {
  2028     03C9  2BD6               	goto	l1194
  2029     03CA                     l1190:
  2030                           
  2031                           ;program.c: 226:         lcd_PrintChar(*string);
  2032     03CA  0876               	movf	lcd_PrintString@string,w
  2033     03CB  0084               	movwf	4
  2034     03CC  0877               	movf	lcd_PrintString@string+1,w
  2035     03CD  0085               	movwf	5
  2036     03CE  0800               	movf	0,w	;code access
  2037     03CF  3183  2373  3183   	fcall	_lcd_PrintChar
  2038     03D2                     l1192:
  2039                           
  2040                           ;program.c: 227:         string++;
  2041     03D2  3001               	movlw	1
  2042     03D3  07F6               	addwf	lcd_PrintString@string,f
  2043     03D4  3000               	movlw	0
  2044     03D5  3DF7               	addwfc	lcd_PrintString@string+1,f
  2045     03D6                     l1194:
  2046                           
  2047                           ;program.c: 225:     while(*string!=0) {
  2048     03D6  0876               	movf	lcd_PrintString@string,w
  2049     03D7  0084               	movwf	4
  2050     03D8  0877               	movf	lcd_PrintString@string+1,w
  2051     03D9  0085               	movwf	5
  2052     03DA  0012               	moviw fsr0++
  2053     03DB  1D03               	btfss	3,2
  2054     03DC  2BDE               	goto	u591
  2055     03DD  2BDF               	goto	u590
  2056     03DE                     u591:
  2057     03DE  2BCA               	goto	l1190
  2058     03DF                     u590:
  2059     03DF                     l122:
  2060     03DF  0008               	return
  2061     03E0                     __end_of_lcd_PrintString:
  2062                           
  2063                           	psect	text6
  2064     0373                     __ptext6:	
  2065 ;; *************** function _lcd_PrintChar *****************
  2066 ;; Defined at:
  2067 ;;		line 217 in file "program.c"
  2068 ;; Parameters:    Size  Location     Type
  2069 ;;  character       1    wreg     unsigned char 
  2070 ;; Auto vars:     Size  Location     Type
  2071 ;;  character       1    5[COMMON] unsigned char 
  2072 ;; Return value:  Size  Location     Type
  2073 ;;                  1    wreg      void 
  2074 ;; Registers used:
  2075 ;;		wreg, status,2, status,0, pclath, cstack
  2076 ;; Tracked objects:
  2077 ;;		On entry : 0/0
  2078 ;;		On exit  : 0/0
  2079 ;;		Unchanged: 0/0
  2080 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2081 ;;      Params:         0       0       0       0       0       0       0
  2082 ;;      Locals:         1       0       0       0       0       0       0
  2083 ;;      Temps:          0       0       0       0       0       0       0
  2084 ;;      Totals:         1       0       0       0       0       0       0
  2085 ;;Total ram usage:        1 bytes
  2086 ;; Hardware stack levels used: 1
  2087 ;; Hardware stack levels required when called: 4
  2088 ;; This function calls:
  2089 ;;		_lcd_DelaySetupTime
  2090 ;;		_lcd_WriteData
  2091 ;; This function is called by:
  2092 ;;		_lcd_PrintString
  2093 ;;		_lcd_PrintDigitInt32
  2094 ;;		_lcd_PrintInt32
  2095 ;; This function uses a non-reentrant model
  2096 ;;
  2097                           
  2098     0373                     _lcd_PrintChar:	
  2099                           ;psect for function _lcd_PrintChar
  2100                           
  2101                           
  2102                           ;incstack = 0
  2103                           ; Regs used in _lcd_PrintChar: [wreg+status,2+status,0+pclath+cstack]
  2104                           ;lcd_PrintChar@character stored from wreg
  2105     0373  00F5               	movwf	lcd_PrintChar@character
  2106     0374                     l1176:
  2107                           
  2108                           ;program.c: 218:     LATBbits.LATB5 = 1;
  2109     0374  0022               	movlb	2	; select bank2
  2110     0375  168D               	bsf	13,5	;volatile
  2111     0376                     l1178:
  2112                           
  2113                           ;program.c: 219:     lcd_DelaySetupTime();
  2114     0376  3183  2353  3183   	fcall	_lcd_DelaySetupTime
  2115                           
  2116                           ;program.c: 221:     lcd_WriteData(character);
  2117     0379  0875               	movf	lcd_PrintChar@character,w
  2118     037A  3185  253D  3183   	fcall	_lcd_WriteData
  2119     037D                     l116:
  2120     037D  0008               	return
  2121     037E                     __end_of_lcd_PrintChar:
  2122                           
  2123                           	psect	text7
  2124     039E                     __ptext7:	
  2125 ;; *************** function _labs *****************
  2126 ;; Defined at:
  2127 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\labs.c"
  2128 ;; Parameters:    Size  Location     Type
  2129 ;;  a               4    0[COMMON] long 
  2130 ;; Auto vars:     Size  Location     Type
  2131 ;;		None
  2132 ;; Return value:  Size  Location     Type
  2133 ;;                  4    0[COMMON] long 
  2134 ;; Registers used:
  2135 ;;		wreg, status,2, status,0
  2136 ;; Tracked objects:
  2137 ;;		On entry : 0/0
  2138 ;;		On exit  : 0/0
  2139 ;;		Unchanged: 0/0
  2140 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2141 ;;      Params:         4       0       0       0       0       0       0
  2142 ;;      Locals:         0       0       0       0       0       0       0
  2143 ;;      Temps:          0       0       0       0       0       0       0
  2144 ;;      Totals:         4       0       0       0       0       0       0
  2145 ;;Total ram usage:        4 bytes
  2146 ;; Hardware stack levels used: 1
  2147 ;; This function calls:
  2148 ;;		Nothing
  2149 ;; This function is called by:
  2150 ;;		_lcd_PrintDigitInt32
  2151 ;;		_lcd_PrintInt32
  2152 ;; This function uses a non-reentrant model
  2153 ;;
  2154                           
  2155     039E                     _labs:	
  2156                           ;psect for function _labs
  2157                           
  2158     039E                     l1208:	
  2159                           ;incstack = 0
  2160                           ; Regs used in _labs: [wreg+status,2+status,0]
  2161                           
  2162     039E  1BF3               	btfsc	labs@a+3,7
  2163     039F  2BA1               	goto	u611
  2164     03A0  2BA2               	goto	u610
  2165     03A1                     u611:
  2166     03A1  2BA3               	goto	l1212
  2167     03A2                     u610:
  2168     03A2                     l1210:
  2169     03A2  2BB2               	goto	l770
  2170     03A3                     l1212:
  2171     03A3  0970               	comf	labs@a,w
  2172     03A4  00F0               	movwf	?_labs
  2173     03A5  0971               	comf	labs@a+1,w
  2174     03A6  00F1               	movwf	?_labs+1
  2175     03A7  0972               	comf	labs@a+2,w
  2176     03A8  00F2               	movwf	?_labs+2
  2177     03A9  0973               	comf	labs@a+3,w
  2178     03AA  00F3               	movwf	?_labs+3
  2179     03AB  0AF0               	incf	?_labs,f
  2180     03AC  1903               	skipnz
  2181     03AD  0AF1               	incf	?_labs+1,f
  2182     03AE  1903               	skipnz
  2183     03AF  0AF2               	incf	?_labs+2,f
  2184     03B0  1903               	skipnz
  2185     03B1  0AF3               	incf	?_labs+3,f
  2186     03B2                     l770:
  2187     03B2  0008               	return
  2188     03B3                     __end_of_labs:
  2189                           
  2190                           	psect	text8
  2191     038B                     __ptext8:	
  2192 ;; *************** function ___bmul *****************
  2193 ;; Defined at:
  2194 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\Umul8.c"
  2195 ;; Parameters:    Size  Location     Type
  2196 ;;  multiplier      1    wreg     unsigned char 
  2197 ;;  multiplicand    1    0[COMMON] unsigned char 
  2198 ;; Auto vars:     Size  Location     Type
  2199 ;;  multiplier      1    2[COMMON] unsigned char 
  2200 ;;  product         1    1[COMMON] unsigned char 
  2201 ;; Return value:  Size  Location     Type
  2202 ;;                  1    wreg      unsigned char 
  2203 ;; Registers used:
  2204 ;;		wreg, status,2, status,0
  2205 ;; Tracked objects:
  2206 ;;		On entry : 0/0
  2207 ;;		On exit  : 0/0
  2208 ;;		Unchanged: 0/0
  2209 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2210 ;;      Params:         1       0       0       0       0       0       0
  2211 ;;      Locals:         2       0       0       0       0       0       0
  2212 ;;      Temps:          0       0       0       0       0       0       0
  2213 ;;      Totals:         3       0       0       0       0       0       0
  2214 ;;Total ram usage:        3 bytes
  2215 ;; Hardware stack levels used: 1
  2216 ;; This function calls:
  2217 ;;		Nothing
  2218 ;; This function is called by:
  2219 ;;		_lcd_PrintDigitInt32
  2220 ;;		_lcd_PrintInt32
  2221 ;; This function uses a non-reentrant model
  2222 ;;
  2223                           
  2224     038B                     ___bmul:	
  2225                           ;psect for function ___bmul
  2226                           
  2227                           
  2228                           ;incstack = 0
  2229                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  2230                           ;___bmul@multiplier stored from wreg
  2231     038B  00F2               	movwf	___bmul@multiplier
  2232     038C                     l1230:
  2233     038C  01F1               	clrf	___bmul@product
  2234     038D                     l1232:
  2235     038D  1C72               	btfss	___bmul@multiplier,0
  2236     038E  2B90               	goto	u661
  2237     038F  2B91               	goto	u660
  2238     0390                     u661:
  2239     0390  2B93               	goto	l1236
  2240     0391                     u660:
  2241     0391                     l1234:
  2242     0391  0870               	movf	___bmul@multiplicand,w
  2243     0392  07F1               	addwf	___bmul@product,f
  2244     0393                     l1236:
  2245     0393  1003               	clrc
  2246     0394  0DF0               	rlf	___bmul@multiplicand,f
  2247     0395                     l1238:
  2248     0395  1003               	clrc
  2249     0396  0CF2               	rrf	___bmul@multiplier,f
  2250     0397  0872               	movf	___bmul@multiplier,w
  2251     0398  1D03               	btfss	3,2
  2252     0399  2B9B               	goto	u671
  2253     039A  2B9C               	goto	u670
  2254     039B                     u671:
  2255     039B  2B8D               	goto	l1232
  2256     039C                     u670:
  2257     039C                     l1240:
  2258     039C  0871               	movf	___bmul@product,w
  2259     039D                     l333:
  2260     039D  0008               	return
  2261     039E                     __end_of___bmul:
  2262                           
  2263                           	psect	text9
  2264     05C5                     __ptext9:	
  2265 ;; *************** function ___aldiv *****************
  2266 ;; Defined at:
  2267 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\aldiv.c"
  2268 ;; Parameters:    Size  Location     Type
  2269 ;;  divisor         4    0[COMMON] long 
  2270 ;;  dividend        4    4[COMMON] long 
  2271 ;; Auto vars:     Size  Location     Type
  2272 ;;  quotient        4   10[COMMON] long 
  2273 ;;  sign            1    9[COMMON] unsigned char 
  2274 ;;  counter         1    8[COMMON] unsigned char 
  2275 ;; Return value:  Size  Location     Type
  2276 ;;                  4    0[COMMON] long 
  2277 ;; Registers used:
  2278 ;;		wreg, status,2, status,0
  2279 ;; Tracked objects:
  2280 ;;		On entry : 0/0
  2281 ;;		On exit  : 0/0
  2282 ;;		Unchanged: 0/0
  2283 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2284 ;;      Params:         8       0       0       0       0       0       0
  2285 ;;      Locals:         6       0       0       0       0       0       0
  2286 ;;      Temps:          0       0       0       0       0       0       0
  2287 ;;      Totals:        14       0       0       0       0       0       0
  2288 ;;Total ram usage:       14 bytes
  2289 ;; Hardware stack levels used: 1
  2290 ;; This function calls:
  2291 ;;		Nothing
  2292 ;; This function is called by:
  2293 ;;		_lcd_PrintDigitInt32
  2294 ;;		_lcd_PrintInt32
  2295 ;; This function uses a non-reentrant model
  2296 ;;
  2297                           
  2298     05C5                     ___aldiv:	
  2299                           ;psect for function ___aldiv
  2300                           
  2301     05C5                     l1244:	
  2302                           ;incstack = 0
  2303                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  2304                           
  2305     05C5  01F9               	clrf	___aldiv@sign
  2306     05C6                     l1246:
  2307     05C6  1FF3               	btfss	___aldiv@divisor+3,7
  2308     05C7  2DC9               	goto	u681
  2309     05C8  2DCA               	goto	u680
  2310     05C9                     u681:
  2311     05C9  2DD7               	goto	l372
  2312     05CA                     u680:
  2313     05CA                     l1248:
  2314     05CA  09F0               	comf	___aldiv@divisor,f
  2315     05CB  09F1               	comf	___aldiv@divisor+1,f
  2316     05CC  09F2               	comf	___aldiv@divisor+2,f
  2317     05CD  09F3               	comf	___aldiv@divisor+3,f
  2318     05CE  0AF0               	incf	___aldiv@divisor,f
  2319     05CF  1903               	skipnz
  2320     05D0  0AF1               	incf	___aldiv@divisor+1,f
  2321     05D1  1903               	skipnz
  2322     05D2  0AF2               	incf	___aldiv@divisor+2,f
  2323     05D3  1903               	skipnz
  2324     05D4  0AF3               	incf	___aldiv@divisor+3,f
  2325     05D5  3001               	movlw	1
  2326     05D6  00F9               	movwf	___aldiv@sign
  2327     05D7                     l372:
  2328     05D7  1FF7               	btfss	___aldiv@dividend+3,7
  2329     05D8  2DDA               	goto	u691
  2330     05D9  2DDB               	goto	u690
  2331     05DA                     u691:
  2332     05DA  2DE8               	goto	l1254
  2333     05DB                     u690:
  2334     05DB                     l1250:
  2335     05DB  09F4               	comf	___aldiv@dividend,f
  2336     05DC  09F5               	comf	___aldiv@dividend+1,f
  2337     05DD  09F6               	comf	___aldiv@dividend+2,f
  2338     05DE  09F7               	comf	___aldiv@dividend+3,f
  2339     05DF  0AF4               	incf	___aldiv@dividend,f
  2340     05E0  1903               	skipnz
  2341     05E1  0AF5               	incf	___aldiv@dividend+1,f
  2342     05E2  1903               	skipnz
  2343     05E3  0AF6               	incf	___aldiv@dividend+2,f
  2344     05E4  1903               	skipnz
  2345     05E5  0AF7               	incf	___aldiv@dividend+3,f
  2346     05E6                     l1252:
  2347     05E6  3001               	movlw	1
  2348     05E7  06F9               	xorwf	___aldiv@sign,f
  2349     05E8                     l1254:
  2350     05E8  3000               	movlw	0
  2351     05E9  00FD               	movwf	___aldiv@quotient+3
  2352     05EA  3000               	movlw	0
  2353     05EB  00FC               	movwf	___aldiv@quotient+2
  2354     05EC  3000               	movlw	0
  2355     05ED  00FB               	movwf	___aldiv@quotient+1
  2356     05EE  3000               	movlw	0
  2357     05EF  00FA               	movwf	___aldiv@quotient
  2358     05F0                     l1256:
  2359     05F0  0873               	movf	___aldiv@divisor+3,w
  2360     05F1  0472               	iorwf	___aldiv@divisor+2,w
  2361     05F2  0471               	iorwf	___aldiv@divisor+1,w
  2362     05F3  0470               	iorwf	___aldiv@divisor,w
  2363     05F4  1903               	skipnz
  2364     05F5  2DF7               	goto	u701
  2365     05F6  2DF8               	goto	u700
  2366     05F7                     u701:
  2367     05F7  2E37               	goto	l1276
  2368     05F8                     u700:
  2369     05F8                     l1258:
  2370     05F8  3001               	movlw	1
  2371     05F9  00F8               	movwf	___aldiv@counter
  2372     05FA  2E04               	goto	l1262
  2373     05FB                     l1260:
  2374     05FB  3001               	movlw	1
  2375     05FC                     u715:
  2376     05FC  35F0               	lslf	___aldiv@divisor,f
  2377     05FD  0DF1               	rlf	___aldiv@divisor+1,f
  2378     05FE  0DF2               	rlf	___aldiv@divisor+2,f
  2379     05FF  0DF3               	rlf	___aldiv@divisor+3,f
  2380     0600  0B89               	decfsz	9,f
  2381     0601  2DFC               	goto	u715
  2382     0602  3001               	movlw	1
  2383     0603  07F8               	addwf	___aldiv@counter,f
  2384     0604                     l1262:
  2385     0604  1FF3               	btfss	___aldiv@divisor+3,7
  2386     0605  2E07               	goto	u721
  2387     0606  2E08               	goto	u720
  2388     0607                     u721:
  2389     0607  2DFB               	goto	l1260
  2390     0608                     u720:
  2391     0608                     l1264:
  2392     0608  3001               	movlw	1
  2393     0609                     u735:
  2394     0609  35FA               	lslf	___aldiv@quotient,f
  2395     060A  0DFB               	rlf	___aldiv@quotient+1,f
  2396     060B  0DFC               	rlf	___aldiv@quotient+2,f
  2397     060C  0DFD               	rlf	___aldiv@quotient+3,f
  2398     060D  0B89               	decfsz	9,f
  2399     060E  2E09               	goto	u735
  2400     060F                     l1266:
  2401     060F  0873               	movf	___aldiv@divisor+3,w
  2402     0610  0277               	subwf	___aldiv@dividend+3,w
  2403     0611  1D03               	skipz
  2404     0612  2E1D               	goto	u745
  2405     0613  0872               	movf	___aldiv@divisor+2,w
  2406     0614  0276               	subwf	___aldiv@dividend+2,w
  2407     0615  1D03               	skipz
  2408     0616  2E1D               	goto	u745
  2409     0617  0871               	movf	___aldiv@divisor+1,w
  2410     0618  0275               	subwf	___aldiv@dividend+1,w
  2411     0619  1D03               	skipz
  2412     061A  2E1D               	goto	u745
  2413     061B  0870               	movf	___aldiv@divisor,w
  2414     061C  0274               	subwf	___aldiv@dividend,w
  2415     061D                     u745:
  2416     061D  1C03               	skipc
  2417     061E  2E20               	goto	u741
  2418     061F  2E21               	goto	u740
  2419     0620                     u741:
  2420     0620  2E2A               	goto	l1272
  2421     0621                     u740:
  2422     0621                     l1268:
  2423     0621  0870               	movf	___aldiv@divisor,w
  2424     0622  02F4               	subwf	___aldiv@dividend,f
  2425     0623  0871               	movf	___aldiv@divisor+1,w
  2426     0624  3BF5               	subwfb	___aldiv@dividend+1,f
  2427     0625  0872               	movf	___aldiv@divisor+2,w
  2428     0626  3BF6               	subwfb	___aldiv@dividend+2,f
  2429     0627  0873               	movf	___aldiv@divisor+3,w
  2430     0628  3BF7               	subwfb	___aldiv@dividend+3,f
  2431     0629                     l1270:
  2432     0629  147A               	bsf	___aldiv@quotient,0
  2433     062A                     l1272:
  2434     062A  3001               	movlw	1
  2435     062B                     u755:
  2436     062B  36F3               	lsrf	___aldiv@divisor+3,f
  2437     062C  0CF2               	rrf	___aldiv@divisor+2,f
  2438     062D  0CF1               	rrf	___aldiv@divisor+1,f
  2439     062E  0CF0               	rrf	___aldiv@divisor,f
  2440     062F  0B89               	decfsz	9,f
  2441     0630  2E2B               	goto	u755
  2442     0631                     l1274:
  2443     0631  3001               	movlw	1
  2444     0632  02F8               	subwf	___aldiv@counter,f
  2445     0633  1D03               	btfss	3,2
  2446     0634  2E36               	goto	u761
  2447     0635  2E37               	goto	u760
  2448     0636                     u761:
  2449     0636  2E08               	goto	l1264
  2450     0637                     u760:
  2451     0637                     l1276:
  2452     0637  0879               	movf	___aldiv@sign,w
  2453     0638  1903               	btfsc	3,2
  2454     0639  2E3B               	goto	u771
  2455     063A  2E3C               	goto	u770
  2456     063B                     u771:
  2457     063B  2E47               	goto	l1280
  2458     063C                     u770:
  2459     063C                     l1278:
  2460     063C  09FA               	comf	___aldiv@quotient,f
  2461     063D  09FB               	comf	___aldiv@quotient+1,f
  2462     063E  09FC               	comf	___aldiv@quotient+2,f
  2463     063F  09FD               	comf	___aldiv@quotient+3,f
  2464     0640  0AFA               	incf	___aldiv@quotient,f
  2465     0641  1903               	skipnz
  2466     0642  0AFB               	incf	___aldiv@quotient+1,f
  2467     0643  1903               	skipnz
  2468     0644  0AFC               	incf	___aldiv@quotient+2,f
  2469     0645  1903               	skipnz
  2470     0646  0AFD               	incf	___aldiv@quotient+3,f
  2471     0647                     l1280:
  2472     0647  087D               	movf	___aldiv@quotient+3,w
  2473     0648  00F3               	movwf	?___aldiv+3
  2474     0649  087C               	movf	___aldiv@quotient+2,w
  2475     064A  00F2               	movwf	?___aldiv+2
  2476     064B  087B               	movf	___aldiv@quotient+1,w
  2477     064C  00F1               	movwf	?___aldiv+1
  2478     064D  087A               	movf	___aldiv@quotient,w
  2479     064E  00F0               	movwf	?___aldiv
  2480     064F                     l382:
  2481     064F  0008               	return
  2482     0650                     __end_of___aldiv:
  2483                           
  2484                           	psect	text10
  2485     03F7                     __ptext10:	
  2486 ;; *************** function _lcd_Goto *****************
  2487 ;; Defined at:
  2488 ;;		line 201 in file "program.c"
  2489 ;; Parameters:    Size  Location     Type
  2490 ;;  y               1    wreg     unsigned char 
  2491 ;;  x               1    6[COMMON] unsigned char 
  2492 ;; Auto vars:     Size  Location     Type
  2493 ;;  y               1    7[COMMON] unsigned char 
  2494 ;; Return value:  Size  Location     Type
  2495 ;;                  1    wreg      void 
  2496 ;; Registers used:
  2497 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2498 ;; Tracked objects:
  2499 ;;		On entry : 0/0
  2500 ;;		On exit  : 0/0
  2501 ;;		Unchanged: 0/0
  2502 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2503 ;;      Params:         1       0       0       0       0       0       0
  2504 ;;      Locals:         1       0       0       0       0       0       0
  2505 ;;      Temps:          0       0       0       0       0       0       0
  2506 ;;      Totals:         2       0       0       0       0       0       0
  2507 ;;Total ram usage:        2 bytes
  2508 ;; Hardware stack levels used: 1
  2509 ;; Hardware stack levels required when called: 5
  2510 ;; This function calls:
  2511 ;;		_lcd_PrintCmd
  2512 ;; This function is called by:
  2513 ;;		_programLoop
  2514 ;; This function uses a non-reentrant model
  2515 ;;
  2516                           
  2517     03F7                     _lcd_Goto:	
  2518                           ;psect for function _lcd_Goto
  2519                           
  2520                           
  2521                           ;incstack = 0
  2522                           ; Regs used in _lcd_Goto: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2523                           ;lcd_Goto@y stored from wreg
  2524     03F7  00F7               	movwf	lcd_Goto@y
  2525     03F8                     l1308:
  2526                           
  2527                           ;program.c: 202:     switch(y) {
  2528     03F8  2C0B               	goto	l1318
  2529     03F9                     l1310:
  2530                           
  2531                           ;program.c: 204:             lcd_PrintCmd(0x80 + x);
  2532     03F9  0876               	movf	lcd_Goto@x,w
  2533     03FA  3E80               	addlw	128
  2534     03FB  3183  2368  3183   	fcall	_lcd_PrintCmd
  2535                           
  2536                           ;program.c: 205:             break;
  2537     03FE  2C13               	goto	l113
  2538     03FF                     l1312:
  2539                           
  2540                           ;program.c: 208:             lcd_PrintCmd(0xC0 + x);
  2541     03FF  0876               	movf	lcd_Goto@x,w
  2542     0400  3EC0               	addlw	192
  2543     0401  3183  2368  3183   	fcall	_lcd_PrintCmd
  2544                           
  2545                           ;program.c: 209:             break;
  2546     0404  2C13               	goto	l113
  2547     0405                     l1314:
  2548                           
  2549                           ;program.c: 212:             lcd_PrintCmd(0x80 + x);
  2550     0405  0876               	movf	lcd_Goto@x,w
  2551     0406  3E80               	addlw	128
  2552     0407  3183  2368  3183   	fcall	_lcd_PrintCmd
  2553                           
  2554                           ;program.c: 213:             break;
  2555     040A  2C13               	goto	l113
  2556     040B                     l1318:
  2557     040B  0877               	movf	lcd_Goto@y,w
  2558                           
  2559                           ; Switch size 1, requested type "simple"
  2560                           ; Number of cases is 2, Range of values is 0 to 1
  2561                           ; switch strategies available:
  2562                           ; Name         Instructions Cycles
  2563                           ; simple_byte            7     4 (average)
  2564                           ; direct_byte           10     6 (fixed)
  2565                           ; jumptable            260     6 (fixed)
  2566                           ;	Chosen strategy is simple_byte
  2567     040C  3A00               	xorlw	0	; case 0
  2568     040D  1903               	skipnz
  2569     040E  2BF9               	goto	l1310
  2570     040F  3A01               	xorlw	1	; case 1
  2571     0410  1903               	skipnz
  2572     0411  2BFF               	goto	l1312
  2573     0412  2C05               	goto	l1314
  2574     0413                     l113:
  2575     0413  0008               	return
  2576     0414                     __end_of_lcd_Goto:
  2577                           
  2578                           	psect	text11
  2579     047B                     __ptext11:	
  2580 ;; *************** function _programInitialize *****************
  2581 ;; Defined at:
  2582 ;;		line 20 in file "program.c"
  2583 ;; Parameters:    Size  Location     Type
  2584 ;;		None
  2585 ;; Auto vars:     Size  Location     Type
  2586 ;;		None
  2587 ;; Return value:  Size  Location     Type
  2588 ;;                  1    wreg      void 
  2589 ;; Registers used:
  2590 ;;		wreg, status,2, status,0, pclath, cstack
  2591 ;; Tracked objects:
  2592 ;;		On entry : 0/0
  2593 ;;		On exit  : 0/0
  2594 ;;		Unchanged: 0/0
  2595 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2596 ;;      Params:         0       0       0       0       0       0       0
  2597 ;;      Locals:         0       0       0       0       0       0       0
  2598 ;;      Temps:          0       0       0       0       0       0       0
  2599 ;;      Totals:         0       0       0       0       0       0       0
  2600 ;;Total ram usage:        0 bytes
  2601 ;; Hardware stack levels used: 1
  2602 ;; Hardware stack levels required when called: 6
  2603 ;; This function calls:
  2604 ;;		_lcd_Initialize
  2605 ;;		_servo_MotorPosition
  2606 ;; This function is called by:
  2607 ;;		_main
  2608 ;; This function uses a non-reentrant model
  2609 ;;
  2610                           
  2611     047B                     _programInitialize:	
  2612                           ;psect for function _programInitialize
  2613                           
  2614     047B                     l1380:	
  2615                           ;incstack = 0
  2616                           ; Regs used in _programInitialize: [wreg+status,2+status,0+pclath+cstack]
  2617                           
  2618                           
  2619                           ;program.c: 21:     TRISBbits.TRISB6 = 0;
  2620     047B  0021               	movlb	1	; select bank1
  2621     047C  130D               	bcf	13,6	;volatile
  2622                           
  2623                           ;program.c: 22:     TRISBbits.TRISB7 = 0;
  2624     047D  138D               	bcf	13,7	;volatile
  2625                           
  2626                           ;program.c: 24:     LATBbits.LATB7 = 0;
  2627     047E  0022               	movlb	2	; select bank2
  2628     047F  138D               	bcf	13,7	;volatile
  2629                           
  2630                           ;program.c: 25:     LATBbits.LATB6 = 0;
  2631     0480  130D               	bcf	13,6	;volatile
  2632                           
  2633                           ;program.c: 27:     TRISBbits.TRISB5 = 0;
  2634     0481  0021               	movlb	1	; select bank1
  2635     0482  128D               	bcf	13,5	;volatile
  2636                           
  2637                           ;program.c: 28:     TRISBbits.TRISB4 = 0;
  2638     0483  120D               	bcf	13,4	;volatile
  2639                           
  2640                           ;program.c: 29:     TRISBbits.TRISB3 = 0;
  2641     0484  118D               	bcf	13,3	;volatile
  2642                           
  2643                           ;program.c: 30:     TRISBbits.TRISB2 = 0;
  2644     0485  110D               	bcf	13,2	;volatile
  2645                           
  2646                           ;program.c: 31:     TRISBbits.TRISB1 = 0;
  2647     0486  108D               	bcf	13,1	;volatile
  2648                           
  2649                           ;program.c: 32:     TRISCbits.TRISC5 = 0;
  2650     0487  128E               	bcf	14,5	;volatile
  2651                           
  2652                           ;program.c: 34:     ANSELBbits.ANSB5 = 0;
  2653     0488  0023               	movlb	3	; select bank3
  2654     0489  128D               	bcf	13,5	;volatile
  2655                           
  2656                           ;program.c: 35:     ANSELBbits.ANSB4 = 0;
  2657     048A  120D               	bcf	13,4	;volatile
  2658                           
  2659                           ;program.c: 36:     ANSELBbits.ANSB3 = 0;
  2660     048B  118D               	bcf	13,3	;volatile
  2661                           
  2662                           ;program.c: 37:     ANSELBbits.ANSB2 = 0;
  2663     048C  110D               	bcf	13,2	;volatile
  2664                           
  2665                           ;program.c: 38:     ANSELBbits.ANSB1 = 0;
  2666     048D  108D               	bcf	13,1	;volatile
  2667                           
  2668                           ;program.c: 40:     LATBbits.LATB5 = 0;
  2669     048E  0022               	movlb	2	; select bank2
  2670     048F  128D               	bcf	13,5	;volatile
  2671                           
  2672                           ;program.c: 41:     LATBbits.LATB4 = 0;
  2673     0490  120D               	bcf	13,4	;volatile
  2674                           
  2675                           ;program.c: 42:     LATBbits.LATB3 = 0;
  2676     0491  118D               	bcf	13,3	;volatile
  2677                           
  2678                           ;program.c: 43:     LATBbits.LATB2 = 0;
  2679     0492  110D               	bcf	13,2	;volatile
  2680                           
  2681                           ;program.c: 44:     LATBbits.LATB1 = 0;
  2682     0493  108D               	bcf	13,1	;volatile
  2683                           
  2684                           ;program.c: 45:     LATCbits.LATC5 = 0;
  2685     0494  128E               	bcf	14,5	;volatile
  2686                           
  2687                           ;program.c: 47:     TRISAbits.TRISA1 = 1;
  2688     0495  0021               	movlb	1	; select bank1
  2689     0496  148C               	bsf	12,1	;volatile
  2690                           
  2691                           ;program.c: 48:     TRISAbits.TRISA2 = 1;
  2692     0497  150C               	bsf	12,2	;volatile
  2693                           
  2694                           ;program.c: 49:     TRISAbits.TRISA3 = 1;
  2695     0498  158C               	bsf	12,3	;volatile
  2696                           
  2697                           ;program.c: 50:     TRISAbits.TRISA4 = 1;
  2698     0499  160C               	bsf	12,4	;volatile
  2699                           
  2700                           ;program.c: 52:     ANSELAbits.ANSA1 = 0;
  2701     049A  0023               	movlb	3	; select bank3
  2702     049B  108C               	bcf	12,1	;volatile
  2703                           
  2704                           ;program.c: 53:     ANSELAbits.ANSA2 = 0;
  2705     049C  110C               	bcf	12,2	;volatile
  2706                           
  2707                           ;program.c: 54:     ANSELAbits.ANSA3 = 0;
  2708     049D  118C               	bcf	12,3	;volatile
  2709                           
  2710                           ;program.c: 55:     ANSELAbits.ANSA4 = 0;
  2711     049E  120C               	bcf	12,4	;volatile
  2712                           
  2713                           ;program.c: 58:     TRISBbits.TRISB0 = 0;
  2714     049F  0021               	movlb	1	; select bank1
  2715     04A0  100D               	bcf	13,0	;volatile
  2716                           
  2717                           ;program.c: 59:     ANSELBbits.ANSB0 = 0;
  2718     04A1  0023               	movlb	3	; select bank3
  2719     04A2  100D               	bcf	13,0	;volatile
  2720     04A3                     l1382:
  2721                           
  2722                           ;program.c: 61:     lcd_Initialize();
  2723     04A3  3184  24AB  3184   	fcall	_lcd_Initialize
  2724                           
  2725                           ;program.c: 63:     servo_MotorPosition(0);
  2726     04A6  3000               	movlw	0
  2727     04A7  3184  24DE  3184   	fcall	_servo_MotorPosition
  2728     04AA                     l69:
  2729     04AA  0008               	return
  2730     04AB                     __end_of_programInitialize:
  2731                           
  2732                           	psect	text12
  2733     04DE                     __ptext12:	
  2734 ;; *************** function _servo_MotorPosition *****************
  2735 ;; Defined at:
  2736 ;;		line 304 in file "program.c"
  2737 ;; Parameters:    Size  Location     Type
  2738 ;;  angle           1    wreg     unsigned char 
  2739 ;; Auto vars:     Size  Location     Type
  2740 ;;  angle           1    2[BANK0 ] unsigned char 
  2741 ;;  i2              2    7[BANK0 ] unsigned short 
  2742 ;;  i1              2    5[BANK0 ] unsigned short 
  2743 ;;  ton             2    3[BANK0 ] unsigned short 
  2744 ;;  toff            2    0[BANK0 ] unsigned short 
  2745 ;; Return value:  Size  Location     Type
  2746 ;;                  1    wreg      void 
  2747 ;; Registers used:
  2748 ;;		wreg, status,2, status,0, pclath, cstack
  2749 ;; Tracked objects:
  2750 ;;		On entry : 0/0
  2751 ;;		On exit  : 0/0
  2752 ;;		Unchanged: 0/0
  2753 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2754 ;;      Params:         0       0       0       0       0       0       0
  2755 ;;      Locals:         0       9       0       0       0       0       0
  2756 ;;      Temps:          2       0       0       0       0       0       0
  2757 ;;      Totals:         2       9       0       0       0       0       0
  2758 ;;Total ram usage:       11 bytes
  2759 ;; Hardware stack levels used: 1
  2760 ;; Hardware stack levels required when called: 1
  2761 ;; This function calls:
  2762 ;;		___wmul
  2763 ;; This function is called by:
  2764 ;;		_programInitialize
  2765 ;;		_programLoop
  2766 ;; This function uses a non-reentrant model
  2767 ;;
  2768                           
  2769     04DE                     _servo_MotorPosition:	
  2770                           ;psect for function _servo_MotorPosition
  2771                           
  2772                           
  2773                           ;incstack = 0
  2774                           ; Regs used in _servo_MotorPosition: [wreg+status,2+status,0+pclath+cstack]
  2775                           ;servo_MotorPosition@angle stored from wreg
  2776     04DE  0020               	movlb	0	; select bank0
  2777     04DF  00A2               	movwf	servo_MotorPosition@angle
  2778     04E0                     l1286:
  2779                           
  2780                           ;program.c: 306:              i2 = 0;
  2781     04E0  01A7               	clrf	servo_MotorPosition@i2
  2782     04E1  01A8               	clrf	servo_MotorPosition@i2+1
  2783     04E2                     l1288:
  2784                           
  2785                           ;program.c: 308:     uint16_t ton = (angle * 5) + 260;
  2786     04E2  0822               	movf	servo_MotorPosition@angle,w
  2787     04E3  00F6               	movwf	??_servo_MotorPosition
  2788     04E4  01F7               	clrf	??_servo_MotorPosition+1
  2789     04E5  0876               	movf	??_servo_MotorPosition,w
  2790     04E6  00F0               	movwf	___wmul@multiplier
  2791     04E7  0877               	movf	??_servo_MotorPosition+1,w
  2792     04E8  00F1               	movwf	___wmul@multiplier+1
  2793     04E9  3005               	movlw	5
  2794     04EA  00F2               	movwf	___wmul@multiplicand
  2795     04EB  3000               	movlw	0
  2796     04EC  00F3               	movwf	___wmul@multiplicand+1
  2797     04ED  3184  2414  3184   	fcall	___wmul
  2798     04F0  0870               	movf	?___wmul,w
  2799     04F1  3E04               	addlw	4
  2800     04F2  0020               	movlb	0	; select bank0
  2801     04F3  00A3               	movwf	servo_MotorPosition@ton
  2802     04F4  3001               	movlw	1
  2803     04F5  3D71               	addwfc	?___wmul+1,w
  2804     04F6  00A4               	movwf	servo_MotorPosition@ton+1
  2805     04F7                     l1290:
  2806                           
  2807                           ;program.c: 309:     uint16_t toff = 11429 - ton;
  2808     04F7  30A5               	movlw	165
  2809     04F8  00F6               	movwf	??_servo_MotorPosition
  2810     04F9  302C               	movlw	44
  2811     04FA  00F7               	movwf	??_servo_MotorPosition+1
  2812     04FB  0823               	movf	servo_MotorPosition@ton,w
  2813     04FC  0276               	subwf	??_servo_MotorPosition,w
  2814     04FD  00A0               	movwf	servo_MotorPosition@toff
  2815     04FE  0824               	movf	servo_MotorPosition@ton+1,w
  2816     04FF  3B77               	subwfb	??_servo_MotorPosition+1,w
  2817     0500  00A1               	movwf	servo_MotorPosition@toff+1
  2818     0501                     l1292:
  2819                           
  2820                           ;program.c: 311:     for(i1=0; i1<10; i1++) {
  2821     0501  01A5               	clrf	servo_MotorPosition@i1
  2822     0502  01A6               	clrf	servo_MotorPosition@i1+1
  2823     0503                     l149:
  2824                           
  2825                           ;program.c: 312:         LATBbits.LATB0 = 1;
  2826     0503  0022               	movlb	2	; select bank2
  2827     0504  140D               	bsf	13,0	;volatile
  2828     0505                     l1298:
  2829                           
  2830                           ;program.c: 313:         for(i2=0; i2<ton; i2++) __nop();
  2831     0505  0020               	movlb	0	; select bank0
  2832     0506  01A7               	clrf	servo_MotorPosition@i2
  2833     0507  01A8               	clrf	servo_MotorPosition@i2+1
  2834     0508  2D0F               	goto	l151
  2835     0509                     l152:
  2836     0509  0000               	nop
  2837     050A                     l1300:
  2838     050A  3001               	movlw	1
  2839     050B  0020               	movlb	0	; select bank0
  2840     050C  07A7               	addwf	servo_MotorPosition@i2,f
  2841     050D  3000               	movlw	0
  2842     050E  3DA8               	addwfc	servo_MotorPosition@i2+1,f
  2843     050F                     l151:
  2844     050F  0824               	movf	servo_MotorPosition@ton+1,w
  2845     0510  0228               	subwf	servo_MotorPosition@i2+1,w
  2846     0511  1D03               	skipz
  2847     0512  2D15               	goto	u785
  2848     0513  0823               	movf	servo_MotorPosition@ton,w
  2849     0514  0227               	subwf	servo_MotorPosition@i2,w
  2850     0515                     u785:
  2851     0515  1C03               	skipc
  2852     0516  2D18               	goto	u781
  2853     0517  2D19               	goto	u780
  2854     0518                     u781:
  2855     0518  2D09               	goto	l152
  2856     0519                     u780:
  2857     0519                     l153:
  2858                           
  2859                           ;program.c: 315:         LATBbits.LATB0 = 0;
  2860     0519  0022               	movlb	2	; select bank2
  2861     051A  100D               	bcf	13,0	;volatile
  2862     051B                     l1302:
  2863                           
  2864                           ;program.c: 316:         for(i2=0; i2<toff; i2++) __nop();
  2865     051B  0020               	movlb	0	; select bank0
  2866     051C  01A7               	clrf	servo_MotorPosition@i2
  2867     051D  01A8               	clrf	servo_MotorPosition@i2+1
  2868     051E  2D25               	goto	l154
  2869     051F                     l155:
  2870     051F  0000               	nop
  2871     0520                     l1304:
  2872     0520  3001               	movlw	1
  2873     0521  0020               	movlb	0	; select bank0
  2874     0522  07A7               	addwf	servo_MotorPosition@i2,f
  2875     0523  3000               	movlw	0
  2876     0524  3DA8               	addwfc	servo_MotorPosition@i2+1,f
  2877     0525                     l154:
  2878     0525  0821               	movf	servo_MotorPosition@toff+1,w
  2879     0526  0228               	subwf	servo_MotorPosition@i2+1,w
  2880     0527  1D03               	skipz
  2881     0528  2D2B               	goto	u795
  2882     0529  0820               	movf	servo_MotorPosition@toff,w
  2883     052A  0227               	subwf	servo_MotorPosition@i2,w
  2884     052B                     u795:
  2885     052B  1C03               	skipc
  2886     052C  2D2E               	goto	u791
  2887     052D  2D2F               	goto	u790
  2888     052E                     u791:
  2889     052E  2D1F               	goto	l155
  2890     052F                     u790:
  2891     052F                     l1306:
  2892                           
  2893                           ;program.c: 317:     }
  2894     052F  3001               	movlw	1
  2895     0530  07A5               	addwf	servo_MotorPosition@i1,f
  2896     0531  3000               	movlw	0
  2897     0532  3DA6               	addwfc	servo_MotorPosition@i1+1,f
  2898     0533  3000               	movlw	0
  2899     0534  0226               	subwf	servo_MotorPosition@i1+1,w
  2900     0535  300A               	movlw	10
  2901     0536  1903               	skipnz
  2902     0537  0225               	subwf	servo_MotorPosition@i1,w
  2903     0538  1C03               	skipc
  2904     0539  2D3B               	goto	u801
  2905     053A  2D3C               	goto	u800
  2906     053B                     u801:
  2907     053B  2D03               	goto	l149
  2908     053C                     u800:
  2909     053C                     l157:
  2910     053C  0008               	return
  2911     053D                     __end_of_servo_MotorPosition:
  2912                           
  2913                           	psect	text13
  2914     0414                     __ptext13:	
  2915 ;; *************** function ___wmul *****************
  2916 ;; Defined at:
  2917 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\Umul16.c"
  2918 ;; Parameters:    Size  Location     Type
  2919 ;;  multiplier      2    0[COMMON] unsigned int 
  2920 ;;  multiplicand    2    2[COMMON] unsigned int 
  2921 ;; Auto vars:     Size  Location     Type
  2922 ;;  product         2    4[COMMON] unsigned int 
  2923 ;; Return value:  Size  Location     Type
  2924 ;;                  2    0[COMMON] unsigned int 
  2925 ;; Registers used:
  2926 ;;		wreg, status,2, status,0
  2927 ;; Tracked objects:
  2928 ;;		On entry : 0/0
  2929 ;;		On exit  : 0/0
  2930 ;;		Unchanged: 0/0
  2931 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2932 ;;      Params:         4       0       0       0       0       0       0
  2933 ;;      Locals:         2       0       0       0       0       0       0
  2934 ;;      Temps:          0       0       0       0       0       0       0
  2935 ;;      Totals:         6       0       0       0       0       0       0
  2936 ;;Total ram usage:        6 bytes
  2937 ;; Hardware stack levels used: 1
  2938 ;; This function calls:
  2939 ;;		Nothing
  2940 ;; This function is called by:
  2941 ;;		_servo_MotorPosition
  2942 ;; This function uses a non-reentrant model
  2943 ;;
  2944                           
  2945     0414                     ___wmul:	
  2946                           ;psect for function ___wmul
  2947                           
  2948     0414                     l1216:	
  2949                           ;incstack = 0
  2950                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2951                           
  2952     0414  01F4               	clrf	___wmul@product
  2953     0415  01F5               	clrf	___wmul@product+1
  2954     0416                     l1218:
  2955     0416  1C70               	btfss	___wmul@multiplier,0
  2956     0417  2C19               	goto	u621
  2957     0418  2C1A               	goto	u620
  2958     0419                     u621:
  2959     0419  2C1E               	goto	l307
  2960     041A                     u620:
  2961     041A                     l1220:
  2962     041A  0872               	movf	___wmul@multiplicand,w
  2963     041B  07F4               	addwf	___wmul@product,f
  2964     041C  0873               	movf	___wmul@multiplicand+1,w
  2965     041D  3DF5               	addwfc	___wmul@product+1,f
  2966     041E                     l307:
  2967     041E  3001               	movlw	1
  2968     041F                     u635:
  2969     041F  35F2               	lslf	___wmul@multiplicand,f
  2970     0420  0DF3               	rlf	___wmul@multiplicand+1,f
  2971     0421  0B89               	decfsz	9,f
  2972     0422  2C1F               	goto	u635
  2973     0423                     l1222:
  2974     0423  3001               	movlw	1
  2975     0424                     u645:
  2976     0424  36F1               	lsrf	___wmul@multiplier+1,f
  2977     0425  0CF0               	rrf	___wmul@multiplier,f
  2978     0426  0B89               	decfsz	9,f
  2979     0427  2C24               	goto	u645
  2980     0428                     l1224:
  2981     0428  0870               	movf	___wmul@multiplier,w
  2982     0429  0471               	iorwf	___wmul@multiplier+1,w
  2983     042A  1D03               	btfss	3,2
  2984     042B  2C2D               	goto	u651
  2985     042C  2C2E               	goto	u650
  2986     042D                     u651:
  2987     042D  2C16               	goto	l1218
  2988     042E                     u650:
  2989     042E                     l1226:
  2990     042E  0875               	movf	___wmul@product+1,w
  2991     042F  00F1               	movwf	?___wmul+1
  2992     0430  0874               	movf	___wmul@product,w
  2993     0431  00F0               	movwf	?___wmul
  2994     0432                     l309:
  2995     0432  0008               	return
  2996     0433                     __end_of___wmul:
  2997                           
  2998                           	psect	text14
  2999     04AB                     __ptext14:	
  3000 ;; *************** function _lcd_Initialize *****************
  3001 ;; Defined at:
  3002 ;;		line 176 in file "program.c"
  3003 ;; Parameters:    Size  Location     Type
  3004 ;;		None
  3005 ;; Auto vars:     Size  Location     Type
  3006 ;;		None
  3007 ;; Return value:  Size  Location     Type
  3008 ;;                  1    wreg      void 
  3009 ;; Registers used:
  3010 ;;		wreg, status,2, status,0, pclath, cstack
  3011 ;; Tracked objects:
  3012 ;;		On entry : 0/0
  3013 ;;		On exit  : 0/0
  3014 ;;		Unchanged: 0/0
  3015 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3016 ;;      Params:         0       0       0       0       0       0       0
  3017 ;;      Locals:         0       0       0       0       0       0       0
  3018 ;;      Temps:          0       0       0       0       0       0       0
  3019 ;;      Totals:         0       0       0       0       0       0       0
  3020 ;;Total ram usage:        0 bytes
  3021 ;; Hardware stack levels used: 1
  3022 ;; Hardware stack levels required when called: 5
  3023 ;; This function calls:
  3024 ;;		_delay_ms
  3025 ;;		_delay_x24o25us
  3026 ;;		_lcd_PrintCmd
  3027 ;; This function is called by:
  3028 ;;		_programInitialize
  3029 ;; This function uses a non-reentrant model
  3030 ;;
  3031                           
  3032     04AB                     _lcd_Initialize:	
  3033                           ;psect for function _lcd_Initialize
  3034                           
  3035     04AB                     l1284:	
  3036                           ;incstack = 0
  3037                           ; Regs used in _lcd_Initialize: [wreg+status,2+status,0+pclath+cstack]
  3038                           
  3039                           
  3040                           ;program.c: 177:     delay_ms(10);
  3041     04AB  3000               	movlw	0
  3042     04AC  00F9               	movwf	delay_ms@delay+3
  3043     04AD  3000               	movlw	0
  3044     04AE  00F8               	movwf	delay_ms@delay+2
  3045     04AF  3000               	movlw	0
  3046     04B0  00F7               	movwf	delay_ms@delay+1
  3047     04B1  300A               	movlw	10
  3048     04B2  00F6               	movwf	delay_ms@delay
  3049     04B3  3184  2452  3184   	fcall	_delay_ms
  3050                           
  3051                           ;program.c: 180:     lcd_PrintCmd(0x33);
  3052     04B6  3033               	movlw	51
  3053     04B7  3183  2368  3184   	fcall	_lcd_PrintCmd
  3054                           
  3055                           ;program.c: 181:     lcd_PrintCmd(0x32);
  3056     04BA  3032               	movlw	50
  3057     04BB  3183  2368  3184   	fcall	_lcd_PrintCmd
  3058                           
  3059                           ;program.c: 184:     lcd_PrintCmd(0x28);
  3060     04BE  3028               	movlw	40
  3061     04BF  3183  2368  3184   	fcall	_lcd_PrintCmd
  3062                           
  3063                           ;program.c: 185:     lcd_PrintCmd(0x02);
  3064     04C2  3002               	movlw	2
  3065     04C3  3183  2368  3184   	fcall	_lcd_PrintCmd
  3066                           
  3067                           ;program.c: 186:     lcd_PrintCmd(0x0C);
  3068     04C6  300C               	movlw	12
  3069     04C7  3183  2368  3184   	fcall	_lcd_PrintCmd
  3070                           
  3071                           ;program.c: 187:     lcd_PrintCmd(0x06);
  3072     04CA  3006               	movlw	6
  3073     04CB  3183  2368  3184   	fcall	_lcd_PrintCmd
  3074                           
  3075                           ;program.c: 188:     lcd_PrintCmd(0x01);
  3076     04CE  3001               	movlw	1
  3077     04CF  3183  2368  3184   	fcall	_lcd_PrintCmd
  3078                           
  3079                           ;program.c: 189:     lcd_PrintCmd(0x80);
  3080     04D2  3080               	movlw	128
  3081     04D3  3183  2368  3184   	fcall	_lcd_PrintCmd
  3082                           
  3083                           ;program.c: 191:     delay_x24o25us(63);
  3084     04D6  303F               	movlw	63
  3085     04D7  00F2               	movwf	delay_x24o25us@delay
  3086     04D8  3000               	movlw	0
  3087     04D9  00F3               	movwf	delay_x24o25us@delay+1
  3088     04DA  3183  23B3  3184   	fcall	_delay_x24o25us
  3089     04DD                     l102:
  3090     04DD  0008               	return
  3091     04DE                     __end_of_lcd_Initialize:
  3092                           
  3093                           	psect	text15
  3094     0368                     __ptext15:	
  3095 ;; *************** function _lcd_PrintCmd *****************
  3096 ;; Defined at:
  3097 ;;		line 169 in file "program.c"
  3098 ;; Parameters:    Size  Location     Type
  3099 ;;  command         1    wreg     unsigned char 
  3100 ;; Auto vars:     Size  Location     Type
  3101 ;;  command         1    5[COMMON] unsigned char 
  3102 ;; Return value:  Size  Location     Type
  3103 ;;                  1    wreg      void 
  3104 ;; Registers used:
  3105 ;;		wreg, status,2, status,0, pclath, cstack
  3106 ;; Tracked objects:
  3107 ;;		On entry : 0/0
  3108 ;;		On exit  : 0/0
  3109 ;;		Unchanged: 0/0
  3110 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3111 ;;      Params:         0       0       0       0       0       0       0
  3112 ;;      Locals:         1       0       0       0       0       0       0
  3113 ;;      Temps:          0       0       0       0       0       0       0
  3114 ;;      Totals:         1       0       0       0       0       0       0
  3115 ;;Total ram usage:        1 bytes
  3116 ;; Hardware stack levels used: 1
  3117 ;; Hardware stack levels required when called: 4
  3118 ;; This function calls:
  3119 ;;		_lcd_DelaySetupTime
  3120 ;;		_lcd_WriteData
  3121 ;; This function is called by:
  3122 ;;		_lcd_Initialize
  3123 ;;		_lcd_Goto
  3124 ;;		_lcd_ClearAll
  3125 ;; This function uses a non-reentrant model
  3126 ;;
  3127                           
  3128     0368                     _lcd_PrintCmd:	
  3129                           ;psect for function _lcd_PrintCmd
  3130                           
  3131                           
  3132                           ;incstack = 0
  3133                           ; Regs used in _lcd_PrintCmd: [wreg+status,2+status,0+pclath+cstack]
  3134                           ;lcd_PrintCmd@command stored from wreg
  3135     0368  00F5               	movwf	lcd_PrintCmd@command
  3136     0369                     l1196:
  3137                           
  3138                           ;program.c: 170:     LATBbits.LATB5 = 0;
  3139     0369  0022               	movlb	2	; select bank2
  3140     036A  128D               	bcf	13,5	;volatile
  3141     036B                     l1198:
  3142                           
  3143                           ;program.c: 171:     lcd_DelaySetupTime();
  3144     036B  3183  2353  3183   	fcall	_lcd_DelaySetupTime
  3145                           
  3146                           ;program.c: 173:     lcd_WriteData(command);
  3147     036E  0875               	movf	lcd_PrintCmd@command,w
  3148     036F  3185  253D  3183   	fcall	_lcd_WriteData
  3149     0372                     l99:
  3150     0372  0008               	return
  3151     0373                     __end_of_lcd_PrintCmd:
  3152                           
  3153                           	psect	text16
  3154     053D                     __ptext16:	
  3155 ;; *************** function _lcd_WriteData *****************
  3156 ;; Defined at:
  3157 ;;		line 148 in file "program.c"
  3158 ;; Parameters:    Size  Location     Type
  3159 ;;  data            1    wreg     unsigned char 
  3160 ;; Auto vars:     Size  Location     Type
  3161 ;;  data            1    4[COMMON] unsigned char 
  3162 ;; Return value:  Size  Location     Type
  3163 ;;                  1    wreg      void 
  3164 ;; Registers used:
  3165 ;;		wreg, status,2, status,0, pclath, cstack
  3166 ;; Tracked objects:
  3167 ;;		On entry : 0/0
  3168 ;;		On exit  : 0/0
  3169 ;;		Unchanged: 0/0
  3170 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3171 ;;      Params:         0       0       0       0       0       0       0
  3172 ;;      Locals:         1       0       0       0       0       0       0
  3173 ;;      Temps:          2       0       0       0       0       0       0
  3174 ;;      Totals:         3       0       0       0       0       0       0
  3175 ;;Total ram usage:        3 bytes
  3176 ;; Hardware stack levels used: 1
  3177 ;; Hardware stack levels required when called: 3
  3178 ;; This function calls:
  3179 ;;		_delay_x1o5us
  3180 ;;		_lcd_EPulse
  3181 ;; This function is called by:
  3182 ;;		_lcd_PrintCmd
  3183 ;;		_lcd_PrintChar
  3184 ;; This function uses a non-reentrant model
  3185 ;;
  3186                           
  3187     053D                     _lcd_WriteData:	
  3188                           ;psect for function _lcd_WriteData
  3189                           
  3190                           
  3191                           ;incstack = 0
  3192                           ; Regs used in _lcd_WriteData: [wreg+status,2+status,0+pclath+cstack]
  3193                           ;lcd_WriteData@data stored from wreg
  3194     053D  00F4               	movwf	lcd_WriteData@data
  3195     053E                     l1152:
  3196                           
  3197                           ;program.c: 150:     LATCbits.LATC5 = (data >> 7) & 0x01;
  3198     053E  0874               	movf	lcd_WriteData@data,w
  3199     053F  00F2               	movwf	??_lcd_WriteData
  3200     0540  3007               	movlw	7
  3201     0541                     u505:
  3202     0541  36F2               	lsrf	??_lcd_WriteData,f
  3203     0542  0B89               	decfsz	9,f
  3204     0543  2D41               	goto	u505
  3205     0544  0872               	movf	??_lcd_WriteData,w
  3206     0545  3901               	andlw	1
  3207     0546  00F3               	movwf	??_lcd_WriteData+1
  3208     0547  0EF3               	swapf	??_lcd_WriteData+1,f
  3209     0548  0DF3               	rlf	??_lcd_WriteData+1,f
  3210     0549  0022               	movlb	2	; select bank2
  3211     054A  080E               	movf	14,w	;volatile
  3212     054B  0673               	xorwf	??_lcd_WriteData+1,w
  3213     054C  39DF               	andlw	-33
  3214     054D  0673               	xorwf	??_lcd_WriteData+1,w
  3215     054E  008E               	movwf	14	;volatile
  3216                           
  3217                           ;program.c: 151:     LATBbits.LATB1 = (data >> 6) & 0x01;
  3218     054F  0874               	movf	lcd_WriteData@data,w
  3219     0550  00F2               	movwf	??_lcd_WriteData
  3220     0551  3006               	movlw	6
  3221     0552                     u515:
  3222     0552  36F2               	lsrf	??_lcd_WriteData,f
  3223     0553  0B89               	decfsz	9,f
  3224     0554  2D52               	goto	u515
  3225     0555  0872               	movf	??_lcd_WriteData,w
  3226     0556  3901               	andlw	1
  3227     0557  00F3               	movwf	??_lcd_WriteData+1
  3228     0558  0DF3               	rlf	??_lcd_WriteData+1,f
  3229     0559  080D               	movf	13,w	;volatile
  3230     055A  0673               	xorwf	??_lcd_WriteData+1,w
  3231     055B  39FD               	andlw	-3
  3232     055C  0673               	xorwf	??_lcd_WriteData+1,w
  3233     055D  008D               	movwf	13	;volatile
  3234                           
  3235                           ;program.c: 152:     LATBbits.LATB2 = (data >> 5) & 0x01;
  3236     055E  0874               	movf	lcd_WriteData@data,w
  3237     055F  00F2               	movwf	??_lcd_WriteData
  3238     0560  3005               	movlw	5
  3239     0561                     u525:
  3240     0561  36F2               	lsrf	??_lcd_WriteData,f
  3241     0562  0B89               	decfsz	9,f
  3242     0563  2D61               	goto	u525
  3243     0564  0872               	movf	??_lcd_WriteData,w
  3244     0565  3901               	andlw	1
  3245     0566  00F3               	movwf	??_lcd_WriteData+1
  3246     0567  0DF3               	rlf	??_lcd_WriteData+1,f
  3247     0568  0DF3               	rlf	??_lcd_WriteData+1,f
  3248     0569  080D               	movf	13,w	;volatile
  3249     056A  0673               	xorwf	??_lcd_WriteData+1,w
  3250     056B  39FB               	andlw	-5
  3251     056C  0673               	xorwf	??_lcd_WriteData+1,w
  3252     056D  008D               	movwf	13	;volatile
  3253                           
  3254                           ;program.c: 153:     LATBbits.LATB3 = (data >> 4) & 0x01;
  3255     056E  0874               	movf	lcd_WriteData@data,w
  3256     056F  00F2               	movwf	??_lcd_WriteData
  3257     0570  3004               	movlw	4
  3258     0571                     u535:
  3259     0571  36F2               	lsrf	??_lcd_WriteData,f
  3260     0572  0B89               	decfsz	9,f
  3261     0573  2D71               	goto	u535
  3262     0574  0872               	movf	??_lcd_WriteData,w
  3263     0575  3901               	andlw	1
  3264     0576  00F3               	movwf	??_lcd_WriteData+1
  3265     0577  0DF3               	rlf	??_lcd_WriteData+1,f
  3266     0578  0DF3               	rlf	??_lcd_WriteData+1,f
  3267     0579  0DF3               	rlf	??_lcd_WriteData+1,f
  3268     057A  080D               	movf	13,w	;volatile
  3269     057B  0673               	xorwf	??_lcd_WriteData+1,w
  3270     057C  39F7               	andlw	-9
  3271     057D  0673               	xorwf	??_lcd_WriteData+1,w
  3272     057E  008D               	movwf	13	;volatile
  3273     057F                     l1154:
  3274                           
  3275                           ;program.c: 155:     lcd_EPulse();
  3276     057F  3183  235D  3185   	fcall	_lcd_EPulse
  3277     0582                     l1156:
  3278                           
  3279                           ;program.c: 158:     LATCbits.LATC5 = (data >> 3) & 0x01;
  3280     0582  0874               	movf	lcd_WriteData@data,w
  3281     0583  00F2               	movwf	??_lcd_WriteData
  3282     0584  3003               	movlw	3
  3283     0585                     u545:
  3284     0585  36F2               	lsrf	??_lcd_WriteData,f
  3285     0586  0B89               	decfsz	9,f
  3286     0587  2D85               	goto	u545
  3287     0588  0872               	movf	??_lcd_WriteData,w
  3288     0589  3901               	andlw	1
  3289     058A  00F3               	movwf	??_lcd_WriteData+1
  3290     058B  0EF3               	swapf	??_lcd_WriteData+1,f
  3291     058C  0DF3               	rlf	??_lcd_WriteData+1,f
  3292     058D  0022               	movlb	2	; select bank2
  3293     058E  080E               	movf	14,w	;volatile
  3294     058F  0673               	xorwf	??_lcd_WriteData+1,w
  3295     0590  39DF               	andlw	-33
  3296     0591  0673               	xorwf	??_lcd_WriteData+1,w
  3297     0592  008E               	movwf	14	;volatile
  3298     0593                     l1158:
  3299                           
  3300                           ;program.c: 159:     LATBbits.LATB1 = (data >> 2) & 0x01;
  3301     0593  0874               	movf	lcd_WriteData@data,w
  3302     0594  00F2               	movwf	??_lcd_WriteData
  3303     0595  3002               	movlw	2
  3304     0596                     u555:
  3305     0596  36F2               	lsrf	??_lcd_WriteData,f
  3306     0597  0B89               	decfsz	9,f
  3307     0598  2D96               	goto	u555
  3308     0599  0872               	movf	??_lcd_WriteData,w
  3309     059A  3901               	andlw	1
  3310     059B  00F3               	movwf	??_lcd_WriteData+1
  3311     059C  0DF3               	rlf	??_lcd_WriteData+1,f
  3312     059D  080D               	movf	13,w	;volatile
  3313     059E  0673               	xorwf	??_lcd_WriteData+1,w
  3314     059F  39FD               	andlw	-3
  3315     05A0  0673               	xorwf	??_lcd_WriteData+1,w
  3316     05A1  008D               	movwf	13	;volatile
  3317     05A2                     l1160:
  3318                           
  3319                           ;program.c: 160:     LATBbits.LATB2 = (data >> 1) & 0x01;
  3320     05A2  0874               	movf	lcd_WriteData@data,w
  3321     05A3  00F2               	movwf	??_lcd_WriteData
  3322     05A4  3001               	movlw	1
  3323     05A5                     u565:
  3324     05A5  36F2               	lsrf	??_lcd_WriteData,f
  3325     05A6  0B89               	decfsz	9,f
  3326     05A7  2DA5               	goto	u565
  3327     05A8  0872               	movf	??_lcd_WriteData,w
  3328     05A9  3901               	andlw	1
  3329     05AA  00F3               	movwf	??_lcd_WriteData+1
  3330     05AB  0DF3               	rlf	??_lcd_WriteData+1,f
  3331     05AC  0DF3               	rlf	??_lcd_WriteData+1,f
  3332     05AD  080D               	movf	13,w	;volatile
  3333     05AE  0673               	xorwf	??_lcd_WriteData+1,w
  3334     05AF  39FB               	andlw	-5
  3335     05B0  0673               	xorwf	??_lcd_WriteData+1,w
  3336     05B1  008D               	movwf	13	;volatile
  3337     05B2                     l1162:
  3338                           
  3339                           ;program.c: 161:     LATBbits.LATB3 = data & 0x01;
  3340     05B2  0874               	movf	lcd_WriteData@data,w
  3341     05B3  3901               	andlw	1
  3342     05B4  00F2               	movwf	??_lcd_WriteData
  3343     05B5  0DF2               	rlf	??_lcd_WriteData,f
  3344     05B6  0DF2               	rlf	??_lcd_WriteData,f
  3345     05B7  0DF2               	rlf	??_lcd_WriteData,f
  3346     05B8  080D               	movf	13,w	;volatile
  3347     05B9  0672               	xorwf	??_lcd_WriteData,w
  3348     05BA  39F7               	andlw	-9
  3349     05BB  0672               	xorwf	??_lcd_WriteData,w
  3350     05BC  008D               	movwf	13	;volatile
  3351     05BD                     l1164:
  3352                           
  3353                           ;program.c: 163:     lcd_EPulse();
  3354     05BD  3183  235D  3185   	fcall	_lcd_EPulse
  3355     05C0                     l1166:
  3356                           
  3357                           ;program.c: 165:     delay_x1o5us(25);
  3358     05C0  3019               	movlw	25
  3359     05C1  3183  237E  3185   	fcall	_delay_x1o5us
  3360     05C4                     l96:
  3361     05C4  0008               	return
  3362     05C5                     __end_of_lcd_WriteData:
  3363                           
  3364                           	psect	text17
  3365     035D                     __ptext17:	
  3366 ;; *************** function _lcd_EPulse *****************
  3367 ;; Defined at:
  3368 ;;		line 140 in file "program.c"
  3369 ;; Parameters:    Size  Location     Type
  3370 ;;		None
  3371 ;; Auto vars:     Size  Location     Type
  3372 ;;		None
  3373 ;; Return value:  Size  Location     Type
  3374 ;;                  1    wreg      void 
  3375 ;; Registers used:
  3376 ;;		wreg, status,2, status,0, pclath, cstack
  3377 ;; Tracked objects:
  3378 ;;		On entry : 0/0
  3379 ;;		On exit  : 0/0
  3380 ;;		Unchanged: 0/0
  3381 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3382 ;;      Params:         0       0       0       0       0       0       0
  3383 ;;      Locals:         0       0       0       0       0       0       0
  3384 ;;      Temps:          0       0       0       0       0       0       0
  3385 ;;      Totals:         0       0       0       0       0       0       0
  3386 ;;Total ram usage:        0 bytes
  3387 ;; Hardware stack levels used: 1
  3388 ;; Hardware stack levels required when called: 2
  3389 ;; This function calls:
  3390 ;;		_lcd_DelayPulse
  3391 ;; This function is called by:
  3392 ;;		_lcd_WriteData
  3393 ;; This function uses a non-reentrant model
  3394 ;;
  3395                           
  3396     035D                     _lcd_EPulse:	
  3397                           ;psect for function _lcd_EPulse
  3398                           
  3399     035D                     l1144:	
  3400                           ;incstack = 0
  3401                           ; Regs used in _lcd_EPulse: [wreg+status,2+status,0+pclath+cstack]
  3402                           
  3403                           
  3404                           ;program.c: 141:     LATBbits.LATB4 = 1;
  3405     035D  0022               	movlb	2	; select bank2
  3406     035E  160D               	bsf	13,4	;volatile
  3407     035F                     l1146:
  3408                           
  3409                           ;program.c: 142:     lcd_DelayPulse();
  3410     035F  3183  2358  3183   	fcall	_lcd_DelayPulse
  3411     0362                     l1148:
  3412                           
  3413                           ;program.c: 144:     LATBbits.LATB4 = 0;
  3414     0362  0022               	movlb	2	; select bank2
  3415     0363  120D               	bcf	13,4	;volatile
  3416                           
  3417                           ;program.c: 145:     lcd_DelayPulse();
  3418     0364  3183  2358  3183   	fcall	_lcd_DelayPulse
  3419     0367                     l93:
  3420     0367  0008               	return
  3421     0368                     __end_of_lcd_EPulse:
  3422                           
  3423                           	psect	text18
  3424     0358                     __ptext18:	
  3425 ;; *************** function _lcd_DelayPulse *****************
  3426 ;; Defined at:
  3427 ;;		line 135 in file "program.c"
  3428 ;; Parameters:    Size  Location     Type
  3429 ;;		None
  3430 ;; Auto vars:     Size  Location     Type
  3431 ;;		None
  3432 ;; Return value:  Size  Location     Type
  3433 ;;                  1    wreg      void 
  3434 ;; Registers used:
  3435 ;;		wreg, status,2, status,0, pclath, cstack
  3436 ;; Tracked objects:
  3437 ;;		On entry : 0/0
  3438 ;;		On exit  : 0/0
  3439 ;;		Unchanged: 0/0
  3440 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3441 ;;      Params:         0       0       0       0       0       0       0
  3442 ;;      Locals:         0       0       0       0       0       0       0
  3443 ;;      Temps:          0       0       0       0       0       0       0
  3444 ;;      Totals:         0       0       0       0       0       0       0
  3445 ;;Total ram usage:        0 bytes
  3446 ;; Hardware stack levels used: 1
  3447 ;; Hardware stack levels required when called: 1
  3448 ;; This function calls:
  3449 ;;		_delay_x1o5us
  3450 ;; This function is called by:
  3451 ;;		_lcd_EPulse
  3452 ;; This function uses a non-reentrant model
  3453 ;;
  3454                           
  3455     0358                     _lcd_DelayPulse:	
  3456                           ;psect for function _lcd_DelayPulse
  3457                           
  3458     0358                     l1142:	
  3459                           ;incstack = 0
  3460                           ; Regs used in _lcd_DelayPulse: [wreg+status,2+status,0+pclath+cstack]
  3461                           
  3462                           
  3463                           ;program.c: 137:     delay_x1o5us(160);
  3464     0358  30A0               	movlw	160
  3465     0359  3183  237E  3183   	fcall	_delay_x1o5us
  3466     035C                     l90:
  3467     035C  0008               	return
  3468     035D                     __end_of_lcd_DelayPulse:
  3469                           
  3470                           	psect	text19
  3471     0353                     __ptext19:	
  3472 ;; *************** function _lcd_DelaySetupTime *****************
  3473 ;; Defined at:
  3474 ;;		line 130 in file "program.c"
  3475 ;; Parameters:    Size  Location     Type
  3476 ;;		None
  3477 ;; Auto vars:     Size  Location     Type
  3478 ;;		None
  3479 ;; Return value:  Size  Location     Type
  3480 ;;                  1    wreg      void 
  3481 ;; Registers used:
  3482 ;;		wreg, status,2, status,0, pclath, cstack
  3483 ;; Tracked objects:
  3484 ;;		On entry : 0/0
  3485 ;;		On exit  : 0/0
  3486 ;;		Unchanged: 0/0
  3487 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3488 ;;      Params:         0       0       0       0       0       0       0
  3489 ;;      Locals:         0       0       0       0       0       0       0
  3490 ;;      Temps:          0       0       0       0       0       0       0
  3491 ;;      Totals:         0       0       0       0       0       0       0
  3492 ;;Total ram usage:        0 bytes
  3493 ;; Hardware stack levels used: 1
  3494 ;; Hardware stack levels required when called: 1
  3495 ;; This function calls:
  3496 ;;		_delay_x1o5us
  3497 ;; This function is called by:
  3498 ;;		_lcd_PrintCmd
  3499 ;;		_lcd_PrintChar
  3500 ;; This function uses a non-reentrant model
  3501 ;;
  3502                           
  3503     0353                     _lcd_DelaySetupTime:	
  3504                           ;psect for function _lcd_DelaySetupTime
  3505                           
  3506     0353                     l1150:	
  3507                           ;incstack = 0
  3508                           ; Regs used in _lcd_DelaySetupTime: [wreg+status,2+status,0+pclath+cstack]
  3509                           
  3510                           
  3511                           ;program.c: 132:     delay_x1o5us(160);
  3512     0353  30A0               	movlw	160
  3513     0354  3183  237E  3183   	fcall	_delay_x1o5us
  3514     0357                     l87:
  3515     0357  0008               	return
  3516     0358                     __end_of_lcd_DelaySetupTime:
  3517                           
  3518                           	psect	text20
  3519     0452                     __ptext20:	
  3520 ;; *************** function _delay_ms *****************
  3521 ;; Defined at:
  3522 ;;		line 15 in file "program.c"
  3523 ;; Parameters:    Size  Location     Type
  3524 ;;  delay           4    6[COMMON] unsigned long 
  3525 ;; Auto vars:     Size  Location     Type
  3526 ;;  i               4   10[COMMON] unsigned long 
  3527 ;; Return value:  Size  Location     Type
  3528 ;;                  1    wreg      void 
  3529 ;; Registers used:
  3530 ;;		wreg, status,2, status,0, pclath, cstack
  3531 ;; Tracked objects:
  3532 ;;		On entry : 0/0
  3533 ;;		On exit  : 0/0
  3534 ;;		Unchanged: 0/0
  3535 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3536 ;;      Params:         4       0       0       0       0       0       0
  3537 ;;      Locals:         4       0       0       0       0       0       0
  3538 ;;      Temps:          0       0       0       0       0       0       0
  3539 ;;      Totals:         8       0       0       0       0       0       0
  3540 ;;Total ram usage:        8 bytes
  3541 ;; Hardware stack levels used: 1
  3542 ;; Hardware stack levels required when called: 2
  3543 ;; This function calls:
  3544 ;;		_delay_x24o25us
  3545 ;; This function is called by:
  3546 ;;		_main
  3547 ;;		_lcd_Initialize
  3548 ;; This function uses a non-reentrant model
  3549 ;;
  3550                           
  3551     0452                     _delay_ms:	
  3552                           ;psect for function _delay_ms
  3553                           
  3554     0452                     l1180:	
  3555                           ;incstack = 0
  3556                           ; Regs used in _delay_ms: [wreg+status,2+status,0+pclath+cstack]
  3557                           
  3558                           
  3559                           ;program.c: 16:     for(uint32_t i=0; i<delay; i++) delay_x24o25us(41);
  3560     0452  3000               	movlw	0
  3561     0453  00FD               	movwf	delay_ms@i+3
  3562     0454  3000               	movlw	0
  3563     0455  00FC               	movwf	delay_ms@i+2
  3564     0456  3000               	movlw	0
  3565     0457  00FB               	movwf	delay_ms@i+1
  3566     0458  3000               	movlw	0
  3567     0459  00FA               	movwf	delay_ms@i
  3568     045A  2C68               	goto	l1186
  3569     045B                     l1182:
  3570     045B  3029               	movlw	41
  3571     045C  00F2               	movwf	delay_x24o25us@delay
  3572     045D  3000               	movlw	0
  3573     045E  00F3               	movwf	delay_x24o25us@delay+1
  3574     045F  3183  23B3  3184   	fcall	_delay_x24o25us
  3575     0462                     l1184:
  3576     0462  3001               	movlw	1
  3577     0463  07FA               	addwf	delay_ms@i,f
  3578     0464  3000               	movlw	0
  3579     0465  3DFB               	addwfc	delay_ms@i+1,f
  3580     0466  3DFC               	addwfc	delay_ms@i+2,f
  3581     0467  3DFD               	addwfc	delay_ms@i+3,f
  3582     0468                     l1186:
  3583     0468  0879               	movf	delay_ms@delay+3,w
  3584     0469  027D               	subwf	delay_ms@i+3,w
  3585     046A  1D03               	skipz
  3586     046B  2C76               	goto	u585
  3587     046C  0878               	movf	delay_ms@delay+2,w
  3588     046D  027C               	subwf	delay_ms@i+2,w
  3589     046E  1D03               	skipz
  3590     046F  2C76               	goto	u585
  3591     0470  0877               	movf	delay_ms@delay+1,w
  3592     0471  027B               	subwf	delay_ms@i+1,w
  3593     0472  1D03               	skipz
  3594     0473  2C76               	goto	u585
  3595     0474  0876               	movf	delay_ms@delay,w
  3596     0475  027A               	subwf	delay_ms@i,w
  3597     0476                     u585:
  3598     0476  1C03               	skipc
  3599     0477  2C79               	goto	u581
  3600     0478  2C7A               	goto	u580
  3601     0479                     u581:
  3602     0479  2C5B               	goto	l1182
  3603     047A                     u580:
  3604     047A                     l66:
  3605     047A  0008               	return
  3606     047B                     __end_of_delay_ms:
  3607                           
  3608                           	psect	text21
  3609     03B3                     __ptext21:	
  3610 ;; *************** function _delay_x24o25us *****************
  3611 ;; Defined at:
  3612 ;;		line 10 in file "program.c"
  3613 ;; Parameters:    Size  Location     Type
  3614 ;;  delay           2    2[COMMON] unsigned short 
  3615 ;; Auto vars:     Size  Location     Type
  3616 ;;  i               2    4[COMMON] unsigned short 
  3617 ;; Return value:  Size  Location     Type
  3618 ;;                  1    wreg      void 
  3619 ;; Registers used:
  3620 ;;		wreg, status,2, status,0, pclath, cstack
  3621 ;; Tracked objects:
  3622 ;;		On entry : 0/0
  3623 ;;		On exit  : 0/0
  3624 ;;		Unchanged: 0/0
  3625 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3626 ;;      Params:         2       0       0       0       0       0       0
  3627 ;;      Locals:         2       0       0       0       0       0       0
  3628 ;;      Temps:          0       0       0       0       0       0       0
  3629 ;;      Totals:         4       0       0       0       0       0       0
  3630 ;;Total ram usage:        4 bytes
  3631 ;; Hardware stack levels used: 1
  3632 ;; Hardware stack levels required when called: 1
  3633 ;; This function calls:
  3634 ;;		_delay_x1o5us
  3635 ;; This function is called by:
  3636 ;;		_delay_ms
  3637 ;;		_lcd_Initialize
  3638 ;;		_lcd_ClearAll
  3639 ;; This function uses a non-reentrant model
  3640 ;;
  3641                           
  3642     03B3                     _delay_x24o25us:	
  3643                           ;psect for function _delay_x24o25us
  3644                           
  3645     03B3                     l1168:	
  3646                           ;incstack = 0
  3647                           ; Regs used in _delay_x24o25us: [wreg+status,2+status,0+pclath+cstack]
  3648                           
  3649                           
  3650                           ;program.c: 11:     for(uint16_t i=0; i<delay; i++) delay_x1o5us(15);
  3651     03B3  01F4               	clrf	delay_x24o25us@i
  3652     03B4  01F5               	clrf	delay_x24o25us@i+1
  3653     03B5  2BBE               	goto	l1174
  3654     03B6                     l1170:
  3655     03B6  300F               	movlw	15
  3656     03B7  3183  237E  3183   	fcall	_delay_x1o5us
  3657     03BA                     l1172:
  3658     03BA  3001               	movlw	1
  3659     03BB  07F4               	addwf	delay_x24o25us@i,f
  3660     03BC  3000               	movlw	0
  3661     03BD  3DF5               	addwfc	delay_x24o25us@i+1,f
  3662     03BE                     l1174:
  3663     03BE  0873               	movf	delay_x24o25us@delay+1,w
  3664     03BF  0275               	subwf	delay_x24o25us@i+1,w
  3665     03C0  1D03               	skipz
  3666     03C1  2BC4               	goto	u575
  3667     03C2  0872               	movf	delay_x24o25us@delay,w
  3668     03C3  0274               	subwf	delay_x24o25us@i,w
  3669     03C4                     u575:
  3670     03C4  1C03               	skipc
  3671     03C5  2BC7               	goto	u571
  3672     03C6  2BC8               	goto	u570
  3673     03C7                     u571:
  3674     03C7  2BB6               	goto	l1170
  3675     03C8                     u570:
  3676     03C8                     l60:
  3677     03C8  0008               	return
  3678     03C9                     __end_of_delay_x24o25us:
  3679                           
  3680                           	psect	text22
  3681     037E                     __ptext22:	
  3682 ;; *************** function _delay_x1o5us *****************
  3683 ;; Defined at:
  3684 ;;		line 5 in file "program.c"
  3685 ;; Parameters:    Size  Location     Type
  3686 ;;  delay           1    wreg     unsigned char 
  3687 ;; Auto vars:     Size  Location     Type
  3688 ;;  delay           1    0[COMMON] unsigned char 
  3689 ;;  i               1    1[COMMON] unsigned char 
  3690 ;; Return value:  Size  Location     Type
  3691 ;;                  1    wreg      void 
  3692 ;; Registers used:
  3693 ;;		wreg, status,2, status,0
  3694 ;; Tracked objects:
  3695 ;;		On entry : 0/0
  3696 ;;		On exit  : 0/0
  3697 ;;		Unchanged: 0/0
  3698 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3699 ;;      Params:         0       0       0       0       0       0       0
  3700 ;;      Locals:         2       0       0       0       0       0       0
  3701 ;;      Temps:          0       0       0       0       0       0       0
  3702 ;;      Totals:         2       0       0       0       0       0       0
  3703 ;;Total ram usage:        2 bytes
  3704 ;; Hardware stack levels used: 1
  3705 ;; This function calls:
  3706 ;;		Nothing
  3707 ;; This function is called by:
  3708 ;;		_delay_x24o25us
  3709 ;;		_lcd_DelaySetupTime
  3710 ;;		_lcd_DelayPulse
  3711 ;;		_lcd_WriteData
  3712 ;; This function uses a non-reentrant model
  3713 ;;
  3714                           
  3715     037E                     _delay_x1o5us:	
  3716                           ;psect for function _delay_x1o5us
  3717                           
  3718                           
  3719                           ;incstack = 0
  3720                           ; Regs used in _delay_x1o5us: [wreg+status,2+status,0]
  3721                           ;delay_x1o5us@delay stored from wreg
  3722     037E  00F0               	movwf	delay_x1o5us@delay
  3723     037F                     l1136:
  3724                           
  3725                           ;program.c: 6:     for(uint8_t i=0; i<delay; i++) __nop();
  3726     037F  01F1               	clrf	delay_x1o5us@i
  3727     0380  2B84               	goto	l1140
  3728     0381                     l52:
  3729     0381  0000               	nop
  3730     0382                     l1138:
  3731     0382  3001               	movlw	1
  3732     0383  07F1               	addwf	delay_x1o5us@i,f
  3733     0384                     l1140:
  3734     0384  0870               	movf	delay_x1o5us@delay,w
  3735     0385  0271               	subwf	delay_x1o5us@i,w
  3736     0386  1C03               	skipc
  3737     0387  2B89               	goto	u491
  3738     0388  2B8A               	goto	u490
  3739     0389                     u491:
  3740     0389  2B81               	goto	l52
  3741     038A                     u490:
  3742     038A                     l54:
  3743     038A  0008               	return
  3744     038B                     __end_of_delay_x1o5us:
  3745     0001                     ___latbits      equ	1
  3746     007E                     btemp           set	126	;btemp
  3747     007E                     wtemp0          set	126
  3748                           
  3749                           	psect	config
  3750                           
  3751                           ;Config register CONFIG1 @ 0x8007
  3752                           ;	Oscillator Selection
  3753                           ;	FOSC = HS, HS Oscillator, High-speed crystal/resonator connected between OSC1 and OSC2
      +                           pins
  3754                           ;	Watchdog Timer Enable
  3755                           ;	WDTE = OFF, WDT disabled
  3756                           ;	Power-up Timer Enable
  3757                           ;	PWRTE = OFF, PWRT disabled
  3758                           ;	MCLR Pin Function Select
  3759                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  3760                           ;	Flash Program Memory Code Protection
  3761                           ;	CP = OFF, Program memory code protection is disabled
  3762                           ;	Data Memory Code Protection
  3763                           ;	CPD = OFF, Data memory code protection is disabled
  3764                           ;	Brown-out Reset Enable
  3765                           ;	BOREN = OFF, Brown-out Reset disabled
  3766                           ;	Clock Out Enable
  3767                           ;	CLKOUTEN = ON, CLKOUT function is enabled on the CLKOUT pin
  3768                           ;	Internal/External Switchover
  3769                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  3770                           ;	Fail-Safe Clock Monitor Enable
  3771                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  3772     8007                     	org	32775
  3773     8007  01E2               	dw	482
  3774                           
  3775                           ;Config register CONFIG2 @ 0x8008
  3776                           ;	Flash Memory Self-Write Protection
  3777                           ;	WRT = OFF, Write protection off
  3778                           ;	Voltage Regulator Capacitor Enable bit
  3779                           ;	VCAPEN = OFF, Vcap functionality is disabled on RA6.
  3780                           ;	PLL Enable
  3781                           ;	PLLEN = ON, 4x PLL enabled
  3782                           ;	Stack Overflow/Underflow Reset Enable
  3783                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  3784                           ;	Brown-out Reset Voltage Selection
  3785                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  3786                           ;	Low Power Brown-Out Reset Enable Bit
  3787                           ;	LPBOR = 0x1, unprogrammed default
  3788                           ;	In-Circuit Debugger Mode
  3789                           ;	DEBUG = OFF, In-Circuit Debugger disabled, ICSPCLK and ICSPDAT are general purpose I/O
      +                           pins
  3790                           ;	Low-Voltage Programming Enable
  3791                           ;	LVP = ON, Low-voltage programming enabled
  3792     8008                     	org	32776
  3793     8008  3FFF               	dw	16383

Data Sizes:
    Strings     12
    Constant    0
    Data        0
    BSS         0
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     44      44
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0

Pointer List with Targets:

    lcd_PrintString@string	PTR unsigned char  size(2) Largest target is 12
		 -> lcd_PrintDigitInt32@numberChar(BANK0[11]), lcd_PrintInt32@numberChar(COMMON[11]), STR_1(CODE[12]), 

    memset@dest	PTR void  size(1) Largest target is 11
		 -> lcd_PrintDigitInt32@numberChar(BANK0[11]), lcd_PrintDigitInt32@numberRevChar(BANK0[11]), lcd_PrintInt32@numberChar(COMMON[11]), lcd_PrintInt32@numberRevChar(COMMON[11]), 

    memset@p	PTR unsigned char  size(1) Largest target is 11
		 -> lcd_PrintDigitInt32@numberChar(BANK0[11]), lcd_PrintDigitInt32@numberRevChar(BANK0[11]), lcd_PrintInt32@numberChar(COMMON[11]), lcd_PrintInt32@numberRevChar(COMMON[11]), 

    sp__memset	PTR void  size(1) Largest target is 11
		 -> lcd_PrintDigitInt32@numberChar(BANK0[11]), lcd_PrintDigitInt32@numberRevChar(BANK0[11]), lcd_PrintInt32@numberChar(COMMON[11]), lcd_PrintInt32@numberRevChar(COMMON[11]), 


Critical Paths under _main in COMMON

    _main->_delay_ms
    _lcd_PrintDigitInt32->___aldiv
    _lcd_PrintString->_lcd_PrintChar
    _lcd_PrintChar->_lcd_WriteData
    _lcd_Goto->_lcd_PrintCmd
    _servo_MotorPosition->___wmul
    _lcd_Initialize->_delay_ms
    _lcd_PrintCmd->_lcd_WriteData
    _lcd_WriteData->_delay_x1o5us
    _lcd_DelayPulse->_delay_x1o5us
    _lcd_DelaySetupTime->_delay_x1o5us
    _delay_ms->_delay_x24o25us
    _delay_x24o25us->_delay_x1o5us

Critical Paths under _main in BANK0

    _main->_programLoop
    _programLoop->_lcd_PrintDigitInt32
    _programInitialize->_servo_MotorPosition

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    4731
                           _delay_ms
                  _programInitialize
                        _programLoop
 ---------------------------------------------------------------------------------
 (1) _programLoop                                          3     3      0    3620
                                             41 BANK0      3     3      0
                           _lcd_Goto
                _lcd_PrintDigitInt32
                    _lcd_PrintString
                   _pb_DelayDebounce
                _servo_MotorPosition
 ---------------------------------------------------------------------------------
 (2) _pb_DelayDebounce                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _lcd_PrintDigitInt32                                 41    34      7    2117
                                              0 BANK0     41    34      7
                            ___aldiv
                             ___bmul
                               _labs
                      _lcd_PrintChar
                    _lcd_PrintString
                             _memset
 ---------------------------------------------------------------------------------
 (3) _memset                                               6     1      5     108
                                              0 COMMON     6     1      5
 ---------------------------------------------------------------------------------
 (2) _lcd_PrintString                                      3     1      2     468
                                              6 COMMON     3     1      2
                      _lcd_PrintChar
 ---------------------------------------------------------------------------------
 (3) _lcd_PrintChar                                        1     1      0     420
                                              5 COMMON     1     1      0
                 _lcd_DelaySetupTime
                      _lcd_WriteData
 ---------------------------------------------------------------------------------
 (3) _labs                                                 4     0      4      68
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               3     2      1     109
                                              0 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (3) ___aldiv                                             14     6      8     304
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (2) _lcd_Goto                                             2     1      1     521
                                              6 COMMON     2     1      1
                       _lcd_PrintCmd
 ---------------------------------------------------------------------------------
 (1) _programInitialize                                    0     0      0     960
                     _lcd_Initialize
                _servo_MotorPosition
 ---------------------------------------------------------------------------------
 (2) _servo_MotorPosition                                 11    11      0     287
                                              6 COMMON     2     2      0
                                              0 BANK0      9     9      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4      94
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) _lcd_Initialize                                       0     0      0     673
                           _delay_ms
                     _delay_x24o25us
                       _lcd_PrintCmd
 ---------------------------------------------------------------------------------
 (3) _lcd_PrintCmd                                         1     1      0     420
                                              5 COMMON     1     1      0
                 _lcd_DelaySetupTime
                      _lcd_WriteData
 ---------------------------------------------------------------------------------
 (4) _lcd_WriteData                                        3     3      0     338
                                              2 COMMON     3     3      0
                       _delay_x1o5us
                         _lcd_EPulse
 ---------------------------------------------------------------------------------
 (5) _lcd_EPulse                                           0     0      0      53
                     _lcd_DelayPulse
 ---------------------------------------------------------------------------------
 (6) _lcd_DelayPulse                                       0     0      0      53
                       _delay_x1o5us
 ---------------------------------------------------------------------------------
 (4) _lcd_DelaySetupTime                                   0     0      0      53
                       _delay_x1o5us
 ---------------------------------------------------------------------------------
 (3) _delay_ms                                             8     4      4     151
                                              6 COMMON     8     4      4
                     _delay_x24o25us
 ---------------------------------------------------------------------------------
 (3) _delay_x24o25us                                       4     2      2     102
                                              2 COMMON     4     2      2
                       _delay_x1o5us
 ---------------------------------------------------------------------------------
 (7) _delay_x1o5us                                         2     2      0      53
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _delay_ms
     _delay_x24o25us
       _delay_x1o5us
   _programInitialize
     _lcd_Initialize
       _delay_ms
       _delay_x24o25us
       _lcd_PrintCmd
         _lcd_DelaySetupTime
           _delay_x1o5us
         _lcd_WriteData
           _delay_x1o5us
           _lcd_EPulse
             _lcd_DelayPulse
               _delay_x1o5us
     _servo_MotorPosition
       ___wmul
   _programLoop
     _lcd_Goto
       _lcd_PrintCmd
     _lcd_PrintDigitInt32
       ___aldiv
       ___bmul
       _labs
       _lcd_PrintChar
         _lcd_DelaySetupTime
         _lcd_WriteData
       _lcd_PrintString
         _lcd_PrintChar
       _memset
     _lcd_PrintString
     _pb_DelayDebounce
     _servo_MotorPosition

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMMON           14      0       0      0.0%
BITBANK0            80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BITBANK2            80      0       0      0.0%
BITBANK3            80      0       0      0.0%
BITBANK4            80      0       0      0.0%
BITBANK5            80      0       0      0.0%
BIGRAM             480      0       0      0.0%
COMMON              14     14      14    100.0%
BANK0               80     44      44     55.0%
BANK1               80      0       0      0.0%
BANK2               80      0       0      0.0%
BANK3               80      0       0      0.0%
BANK4               80      0       0      0.0%
BANK5               80      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0      58      0.0%


Microchip Technology PIC Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Wed Oct 16 08:40:23 2024

                  ??_lcd_PrintCmd 0075                    ___bmul@product 0071                _lcd_DelaySetupTime 0353  
                              l52 0381                                l60 03C8                                l54 038A  
                              l66 047A                                l90 035C                                l84 0352  
                              l93 0367                                l69 04AA                                l87 0357  
                              l96 05C4                                l99 0372               ___wmul@multiplicand 0072  
                 ??_lcd_PrintChar 0075                               l102 04DD                               l113 0413  
                             l122 03DF                               l116 037D                               l134 0679  
                             l151 050F                               l152 0509                               l153 0519  
                             l154 0525                               l146 0723                               l307 041E  
                             l155 051F                               l309 0432                               l157 053C  
                             l149 0503                               l333 039D                               l372 05D7  
                             l382 064F                               l770 03B2                               l776 03F6  
                             u600 03F6                               u505 0541                               u601 03F5  
                             u610 03A2                               u515 0552                               u611 03A1  
                             u620 041A                               u700 05F8                               u525 0561  
                             u621 0419                               u701 05F7                               u535 0571  
                             u800 053C                               u720 0608                               u545 0585  
                             u801 053B                               u721 0607                               u490 038A  
                             u570 03C8                               u650 042E                               u810 0670  
                             u491 0389                               u571 03C7                               u555 0596  
                             u651 042D                               u635 041F                               u715 05FC  
                             u811 066F                               u580 047A                               u740 0621  
                             u660 0391                               u820 0675                               u900 077E  
                             u581 0479                               u565 05A5                               u645 0424  
                             u741 0620                               u661 0390                               u821 0674  
                             u901 077D                               u670 039C                               u590 03DF  
                             u830 0694                               u910 078F                               u575 03C4  
                             u735 0609                               u671 039B                               u591 03DE  
                             u831 0693                               u911 078E                               u760 0637  
                             u680 05CA                               u840 06D7                               u920 07B6  
                             u585 0476                               u761 0636                               u745 061D  
                             u681 05C9                               u841 06D6                               u921 07B5  
                             u770 063C                               u690 05DB                               u850 06E1  
                             u930 07DC                               u771 063B                               u755 062B  
                             u691 05DA                               u851 06E0                               u931 07DB  
                             u915 078B                               u780 0519                               u860 0702  
                             u781 0518                               u861 0701                               u790 052F  
                             u870 070B                               u791 052E                               u871 070A  
                             u880 074E                               u785 0515                               u865 06FE  
                             u881 074D                               u890 0756                               u795 052B  
                             u891 0755               ?_lcd_DelaySetupTime 0070                               wreg 0009  
             _lcd_PrintDigitInt32 0650                              l1200 03E0                              l1210 03A2  
                            l1202 03E3                              l1140 0384                              l1220 041A  
                            l1300 050A                              l1212 03A3                              l1204 03E8  
                            l1150 0353                              l1142 0358                              l1222 0423  
                            l1302 051B                              l1310 03F9                              l1230 038C  
                            l1206 03EA                              l1136 037F                              l1144 035D  
                            l1160 05A2                              l1152 053E                              l1224 0428  
                            l1216 0414                              l1304 0520                              l1312 03FF  
                            l1240 039C                              l1232 038D                              l1208 039E  
                            l1320 0650                              l1400 0756                              l1138 0382  
                            l1170 03B6                              l1146 035F                              l1162 05B2  
                            l1154 057F                              l1226 042E                              l1218 0416  
                            l1306 052F                              l1314 0405                              l1250 05DB  
                            l1234 0391                              l1330 0675                              l1322 0653  
                            l1402 075A                              l1410 0779                              l1172 03BA  
                            l1180 0452                              l1148 0362                              l1164 05BD  
                            l1156 0582                              l1308 03F8                              l1260 05FB  
                            l1252 05E6                              l1244 05C5                              l1236 0393  
                            l1340 06BD                              l1332 068F                              l1324 065F  
                            l1420 07A9                              l1412 077E                              l1404 075F  
                            l1174 03BE                              l1182 045B                              l1166 05C0  
                            l1158 0593                              l1318 040B                              l1270 0629  
                            l1262 0604                              l1254 05E8                              l1246 05C6  
                            l1238 0395                              l1190 03CA                              l1350 06D9  
                            l1342 06C6                              l1334 0694                              l1326 066B  
                            l1430 07BF                              l1422 07AE                              l1414 078F  
                            l1406 0771                              l1168 03B3                              l1184 0462  
                            l1280 0647                              l1272 062A                              l1264 0608  
                            l1256 05F0                              l1248 05CA                              l1176 0374  
                            l1192 03D2                              l1352 06DB                              l1360 06ED  
                            l1344 06CD                              l1336 0698                              l1328 0670  
                            l1440 07DE                              l1432 07D0                              l1416 0792  
                            l1424 07B1                              l1408 0776                              l1186 0468  
                            l1290 04F7                              l1274 0631                              l1266 060F  
                            l1258 05F8                              l1178 0376                              l1194 03D6  
                            l1370 070C                              l1362 0702                              l1354 06E1  
                            l1346 06CF                              l1338 06A1                              l1442 07E3  
                            l1434 07D4                              l1426 07B6                              l1418 0797  
                            l1450 044C                              l1196 0369                              l1284 04AB  
                            l1292 0501                              l1380 047B                              l1268 0621  
                            l1276 0637                              l1188 03C9                              l1372 0717  
                            l1364 0705                              l1356 06E6                              l1348 06D7  
                            l1444 07F4                              l1428 07BA                              l1436 07D7  
                            l1198 036B                              l1286 04E0                              l1382 04A3  
                            l1278 063C                              l1374 0719                              l1366 0706  
                            l1358 06EA                              l1446 07F8                              l1438 07DC  
                            l1390 0733                              l1288 04E2                              l1392 0738  
                            l1384 0724                              l1448 0433                              l1298 0505  
                            l1378 071C                              l1394 0749                              l1386 0727  
                            l1396 074E                              l1388 072C                              l1398 0752  
                            STR_1 0800                 ?_pb_DelayDebounce 0070                   ??_lcd_WriteData 0072  
                            _labs 039E                              _main 0433                ??_pb_DelayDebounce 0070  
                            fsr0h 0005                              fsr1h 0007                              indf0 0000  
                            fsr0l 0004                              indf1 0001                              fsr1l 0006  
                            btemp 007E              ??_lcd_DelaySetupTime 0072                              start 0002  
            ?_lcd_PrintDigitInt32 0020                 ___bmul@multiplier 0072       __end_of_servo_MotorPosition 053D  
            __end_of_delay_x1o5us 038B                 ??_lcd_PrintString 0078                   __end_of___aldiv 0650  
                           ?_labs 0070                             ?_main 0070                             labs@a 0070  
             delay_x24o25us@delay 0072                             status 0003                             wtemp0 007E  
           ??_lcd_PrintDigitInt32 0027                   __initialization 07FD                      __end_of_labs 03B3  
                    __end_of_main 0452                            ??_labs 0074                            ??_main 007E  
        lcd_PrintDigitInt32@tempC 0045          lcd_PrintDigitInt32@tempN 0041              __end_of_lcd_PrintCmd 0373  
        servo_MotorPosition@angle 0022                  __end_of_delay_ms 047B                 delay_x1o5us@delay 0070  
                __end_of_lcd_Goto 0414                            ___bmul 038B                         ??___aldiv 0078  
                          ___wmul 0414                            _memset 03E0                    _delay_x24o25us 03B3  
          lcd_PrintChar@character 0075           __end_of__initialization 07FD     lcd_PrintDigitInt32@numberChar 0036  
                    ?_programLoop 0070               ___bmul@multiplicand 0070                    __pcstackCOMMON 0070  
             lcd_PrintCmd@command 0075            __end_of_delay_x24o25us 03C9     lcd_PrintDigitInt32@totalDigit 0047  
                    _delay_x1o5us 037E                 _programInitialize 047B                   _lcd_PrintString 03C9  
                      __pmaintext 0433                ?_programInitialize 0070                           ?___bmul 0070  
                         ?___wmul 0070                        _lcd_EPulse 035D                   ?_delay_x24o25us 0072  
                         ?_memset 0070               ??_programInitialize 007E             __end_of_lcd_PrintChar 037E  
                       ?_delay_ms 0076                         ?_lcd_Goto 0076         __end_of_programInitialize 04AB  
           __end_of_lcd_WriteData 05C5             lcd_PrintDigitInt32@i1 0048             lcd_PrintDigitInt32@i2 0046  
           servo_MotorPosition@i1 0025             servo_MotorPosition@i2 0027                           ___aldiv 05C5  
                    _lcd_PrintCmd 0368                           __ptext1 0724                           __ptext2 0352  
                         __ptext3 0650                           __ptext4 03E0                           __ptext5 03C9  
                         __ptext6 0373                           __ptext7 039E                           __ptext8 038B  
                         __ptext9 05C5                  ___aldiv@dividend 0074                        ??_delay_ms 007A  
                      ??_lcd_Goto 0077              end_of_initialization 07FD           __end_of_lcd_PrintString 03E0  
      lcd_PrintDigitInt32@noDigit 0024       __end_of_lcd_PrintDigitInt32 0724                           memset@c 0071  
                         memset@n 0073                           memset@p 0075                  ___aldiv@quotient 007A  
                     ?_lcd_EPulse 0070                         _PORTAbits 000C                         _TRISAbits 008C  
                       _TRISBbits 008D                         _TRISCbits 008E                    _lcd_DelayPulse 0358  
                programLoop@angle 004A                     delay_x1o5us@i 0071                  _pb_DelayDebounce 0352  
                  __end_of___bmul 039E                     delay_ms@delay 0076                    __end_of___wmul 0433  
                  __end_of_memset 03F7            __end_of_lcd_DelayPulse 035D               start_initialization 07FD  
                ?_lcd_PrintString 0076  lcd_PrintDigitInt32@numberRevChar 002B                    _lcd_Initialize 04AB  
         servo_MotorPosition@toff 0020                  ??_delay_x24o25us 0074                          ??___bmul 0071  
                        ??___wmul 0074                          ??_memset 0075                        memset@dest 0070  
                 ?_lcd_DelayPulse 0070                         ___latbits 0001                     __pcstackBANK0 0020  
          __end_of_lcd_Initialize 04DE               _servo_MotorPosition 04DE                          ?___aldiv 0070  
            ?_servo_MotorPosition 0070                   ?_lcd_Initialize 0070                   ___aldiv@divisor 0070  
      __end_of_lcd_DelaySetupTime 0358                   ___aldiv@counter 0078                    ___wmul@product 0074  
                        _LATBbits 010D                          _LATCbits 010E                         delay_ms@i 007A  
                    ??_lcd_EPulse 0072                         lcd_Goto@x 0076                         lcd_Goto@y 0077  
               lcd_WriteData@data 0074             ??_servo_MotorPosition 0076                 ___wmul@multiplier 0070  
        __end_of_pb_DelayDebounce 0353                __end_of_lcd_EPulse 0368                     ??_programLoop 0049  
          servo_MotorPosition@ton 0023                        _ANSELAbits 018C                        _ANSELBbits 018D  
                   _lcd_PrintChar 0373                          _delay_ms 0452                          __ptext10 03F7  
                        __ptext11 047B                          __ptext20 0452                          __ptext12 04DE  
                        __ptext21 03B3                          __ptext13 0414                          __ptext22 037E  
                        __ptext14 04AB                          __ptext15 0368                          __ptext16 053D  
                        __ptext17 035D                          __ptext18 0358                          __ptext19 0353  
                        _lcd_Goto 03F7                     ?_delay_x1o5us 0070                     _lcd_WriteData 053D  
             __end_of_programLoop 07FD                  ??_lcd_DelayPulse 0072                    ?_lcd_PrintChar 0070  
                  ??_delay_x1o5us 0070                    ?_lcd_WriteData 0070         lcd_PrintDigitInt32@enSign 0025  
       lcd_PrintDigitInt32@enZero 0026         lcd_PrintDigitInt32@number 0020                   delay_x24o25us@i 0074  
                   ?_lcd_PrintCmd 0070                     __pstringtext1 0800                     __pstringtext2 0000  
                    ___aldiv@sign 0079                  ??_lcd_Initialize 007E             lcd_PrintString@string 0076  
                     _programLoop 0724  
